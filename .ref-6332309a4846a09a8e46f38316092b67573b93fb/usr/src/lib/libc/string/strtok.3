.\" Copyright (c) 1988 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)strtok.3	5.1 (Berkeley) %G%
.\"
.TH STRTOK 3 ""
.UC 3
.SH NAME
strtok, strsep \- string token operations
.SH SYNOPSIS
.nf
.B char *strtok(str, sep)
.B char *str, *sep;
.PP
.B char *strsep(str, sep)
.B char *str, *sep;
.fi
.PP
.I Strtok
is used to isolate sequential tokens in a null-terminated string,
.IR str .
These tokens are separated in the string by
.B "one or more"
of the characters in
.IR sep .
The first time that
.I strtok
is called,
.I str
should be specified; subsequent calls, wishing to obtain further tokens
from the same string, should pass a null pointer instead.  The separator
string,
.IR sep ,
must be supplied each time, and may change between calls.
.I Strtok
returns a pointer to the start of each subsequent token in the string,
after replacing the token itself with a NUL character.  When no more
tokens remain, a null pointer is returned.
.PP
.I Strsep
behaves similarly to
.I strtok
with the exception that the tokens in the string are separated by single
occurrences of separator characters.  This routine was added to allow
handling blank fields.
.SH BUGS
There is no way to get tokens from multiple strings simultaneously.
