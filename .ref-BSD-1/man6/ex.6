.th EX VI 11/15/77
.sh NAME
ex \*- text editor
.sh SYNOPSIS
.bd ex
[
.bd \-
] [
.bd \-n
] [
.bd \-o
] [
.bd \-p
] [
[
.bd \-r
]
name ...
]
.sh DESCRIPTION
.it Ex
is a text editor based on
.it ed
(I).
A complete description of
.it ex
is given in the
.it "Ex Reference Manual."
.s3
.bd "Getting out of the editor."
The only way to leave
.it ex
is to type
`quit'
in command mode
(with a `:' prompt.)
You can always get to command mode by typing
one or more interrupts,
generated by the
\s-2DELETE\s0 (\s-2RUBOUT\s0) character.
You may have to type `quit' more than once if you have made changes to the
file editing buffer since you have written it out.
.s3
.bd "Quota exceeded."
If you are writing out a file and you get the message
``Quota exceeded''
.cu
\fIproceed with extreme caution\fR.
It is likely that only a part of the editor's buffer is now present
in the file you tried to write.
In this case you should use the shell escape from the editor
to remove some of your files which you don't need and try to write
the file again.
If you do not know how to do this,
and cannot find someone to help,
you should use the editor
.it preserve
command to save the editing buffer and then seek help immediately.
.bd "Do not simply leave the editor."
If you do you may not be able to save your file.
.s3
.bd "No space on device."
If you are writing out a file and get this message, the system
has run out of space.
As with
``Quota exceeded''
you may not have a complete copy of your file.
This situation is less stable than the quota problem one,
however, so you may not be able to recover as described above.
It cannot hurt to try.
.s3
.bd "Crashes."
After a crash it is usually possible to recover the work you were doing
to within a few lines of changes of where you were.
This applies both to editor crashes and system crashes.
Change, using
.it chdir
(I)
to the directory where you were editing and enter the editor specifying
the
.bd "\-r"
option, i.e.:
.s3
.dt
	\fBex\fR \fB\-r\fR resume
.s3
if you were editing the file
.it resume.
This should allow you to continue where you left off.
This is also the way to recover a file saved by
.it preserve.
.sh FILES
.nf
.dt
/usr/lib/ex1.1strings	error messages
/etc/ttycap		tty capability data base
/etc/htmp		home directory and teletype type data base
\&.exrc			start-up file in home directory
/tmp/Ex\fInnnnn\fR		editor temporary (\fInnnnn\fR is decimal pid)
/usr/lib/how_ex/*	help command data base
/usr/lib/expreserve	routine implementing \fIpreserve\fR command
/usr/lib/exrecover	routine implementing \fIrecover\fR command
/usr/preserve		preservation directory
.fi
.sh SEE\ ALSO
``Ex Reference Manual'' by William Joy
.br
Topic \fIex\fR in the system news
.br
ed (I), htmp (V), sethome (V), tset(VI), ttycap (V), ttytype (V),
edit (VI), grep (VI), sethome (VI), ttytype (VI)
.sh AUTHOR
William Joy
.sh BUGS
The commands
.it expand
or
.it xpand,
.it tabulate
and the
shifts
`<' and `>'
do not give feedback that more than
.it notify
lines were changed, and print nothing if nothing changes.
The shift commands tend to right shift ``labels'' in
C programs annoyingly.
It would be nice if the labels were held at the margins.
.s3
There should be a way to say that,
although you have a terminal which prints 132 columns,
you have a box of 80 column paper.
.s3
The set of primitives for dealing with the editor argument list
is too primitive.
.s3
A diagnostic should be given when temporary file space is low or when a file
being edited is so large that that the editor limits are being strained.
.s3
There is no easy way to do a single addressing search or
.it substitute
ignoring case.
.s3
Adding cursor-addressible terminals to the editor requires recompilation.
A data string encoding the cursor addressing information could be part
of the
.it ttycap
data base.
.s3
The option
.it optimize,
although greatly speeding throughput of text with leading blanks
on non-cursor addressible terminals, tends to be mysterious and
sometimes annoying, as it causes typeahead during output to be lost.
It currently ``pessimises'' on terminals which can tab.
.s3
The
.it undo
comand causes all marks to be lost on lines changed and then restored
if the marked lines were changed.
.it Undo
never clears the buffer modified condition.
.s3
The
.it z
command prints a number of logical rather than physical lines.
More than a screen full of output may result if long lines are present.
.s3
The
.it R
operation in
.it visual
and
.it open
does not set the previous deleted text.
The
.it e
and
.it E
operations are unimplemented.
Changes completely within the text of a single line can
be undone only while the cursor remains on that line.
