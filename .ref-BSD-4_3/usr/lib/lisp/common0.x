(File common0.l)
(liszt-declare nlambda)
(nreverse1 (lambda . local) return go cond rplacd cdr setq prog)
(nreverse lambda nreverse1 null cond)
(nreconc lambda nreverse1 null cond)
(nconc lexpr |1+| last cons bigp not and zerop rplacd cdr do arg null eq cond)
(memq lambda cdr return car eq cond null do)
(length lambda |1+| cdr do null error dtpr not and cond)
(concatl lambda quote apply)
(rassq lambda cdr car return cdar eq do error dtpr not null cond)
(assoc lambda cdr return caar equal error dtpr not car cond null do)
(append1 lambda list append)
(append2args (lambda . local) go rplacd cdr car cons setq error atom return null cond prog)
(append lexpr setq |1-| do bigp not cdr null and zerop arg append2args eq cond)
(err lexpr error arg or err-with-message eq cond)
(error lexpr |1-| exploden implode quote maknum lessp arg atom cond concat setq err-with-message eq do)
(defun macro return list nconc atom cdr eq quote null gensym concat car cons memq dtpr cond cddr cadr setq prog)
(def nlambda putd error cdr lambdacvt or eq caadr memq cddr null cadr dtpr car setq symbolp and cond)
(memq lambda cdr return car eq cond null do)
(declare nlambda)
