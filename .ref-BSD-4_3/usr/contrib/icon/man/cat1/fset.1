


FSET(1)               Icon Program Library                FSET(1)



NNNNAAAAMMMMEEEE
     fset - perform set operations on UNIX file specifications

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ffffsssseeeetttt argument

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     The UNIX shell provides for the specification of filenames
     using ``wildcards''.  Each wildcard specification may be
     thought of as defining a set of names (that is, those that
     match the specification).  _F_s_e_t allows the user to apply the
     set operations of intersection, union, and difference to
     these filename sets. The resultant list may then be used as
     an argument to other shell commands.

     _F_s_e_t's argument is an expression composed of legal UNIX file
     specifications, parenthesis, and the following set opera-
     tors:

          &&   intersection
          ++++++++   union
          --------   difference

     Because characters that have special meaning to the shell
     occur frequently in the arguments used for _f_s_e_t, it is
     advisable to quote the arguments consistently.

     The use of _f_s_e_t is illustrated by the following examples:

          fset 'g*--*.icn'

     produces the list (set) of filenames for files beginning
     with gggg, excluding those ending with ....iiiiccccnnnn.

     Similarly,

          fset '*'

     produces all files in the current directory excluding the ....
     and ........ files.

          fset '((*--*.icn)++c*)'

     and

          fset '(*--*.icn)++c*'

     produces the complement of all filenames ending with ....iiiiccccnnnn in
     addition to all filenames beginning with cccc.

          fset '(((c? && c*)))'




Version 5.9    The University of Arizona - 8/15/84              1






FSET(1)               Icon Program Library                FSET(1)



     is a redundant, but legal, specification for all two-
     character filenames that begin with cccc, while

          fset '.*'

     produces the set of filenames for all hidden files, exclud-
     ing the .... and ........  files.

RRRREEEEQQQQUUUUIIIIRRRREEEEMMMMEEEENNNNTTTTSSSS
     _F_s_e_t requires the sets extension to Icon. _G_s_e_t performs the
     same functions as _F_s_e_t(_1), but does not require the sets
     extension.

LLLLIIIIMMMMIIIITTTTAAAATTTTIIIIOOOONNNNSSSS
     Multiple command line arguments, formed by omitting the
     quotes around the file set expression, are permitted.  Their
     use is limited, however, since parentheses do not get past
     the shell's command-line expansion.

     Almost any legal file specification will work when enclosed
     in quotes except that the simple grammar that is used cannot
     handle blanks adjacent to parentheses.

     File names that begin or end in ``questionable'' characters
     such as ****, ????, ++++, ----, and &&&&, probably will not work.

     A file specification that, when interpreted by the shell,
     produces no matching filename will be placed (unchanged) in
     the result.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     gcomp(1), gset(1)

     Griswold, Ralph E., Robert K. McConeghy, and William H.
     Mitchell.  _E_x_t_e_n_s_i_o_n_s _t_o _V_e_r_s_i_o_n _5 _o_f _t_h_e _I_c_o_n _P_r_o_g_r_a_m_m_i_n_g
     _L_a_n_g_u_a_g_e, TR 84-10a, Department of Computer Science, The
     University of Arizona, 1984.

AAAAUUUUTTTTHHHHOOOORRRR
     Thomas R. Hicks















Version 5.9    The University of Arizona - 8/15/84              2



