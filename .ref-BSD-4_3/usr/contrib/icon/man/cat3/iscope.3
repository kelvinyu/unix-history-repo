


ISCOPE(3.icon)        Icon Program Library         ISCOPE(3.icon)



NNNNAAAAMMMMEEEE
     Descr, Indir, Word1, Word2, Symbol, Efp, Gfp, Pfp - examine
     Icon internals

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     These functions deal with Icon internals, producing values
     that exist in memory and registers as Icon is executing.
     Internal values are represented as Icon integers. A
     knowledge of the implementation of Icon is needed to use
     these functions properly.

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     DDDDeeeessssccccrrrr((((iiii,,,,jjjj))))
               compose a descriptor whose first word is iiii and
               whose second word is jjjj.

     IIIInnnnddddiiiirrrr((((iiii))))  return an integer corresponding to the value where
               the descriptor at iiii points.

     WWWWoooorrrrdddd1111((((xxxx,,,,iiii))))
               return Icon integer whose value is the first word
               of the descriptor xxxx. If iiii is zero, xxxx is derefer-
               enced; otherwise it is not. An omitted value of iiii
               defaults to 0.

     WWWWoooorrrrdddd2222((((xxxx,,,,iiii))))
               like WWWWoooorrrrdddd1111, except that the value is for the
               second word of the descriptor xxxx.

     SSSSyyyymmmmbbbboooollll((((ssss)))) returns the address of the symbol ssss. The allowable
               values of ssss are:

                    globals   address of the global vector
                    eeeegggglllloooobbbbaaaallllssss  address of the end of the global vector
                    ggggnnnnaaaammmmeeeessss    address of the global name vector
                    ssssttttrrrriiiinnnnggggssss   beginning of the string region
                    ssssffffrrrreeeeeeee     string region free pointer
                    hhhhppppbbbbaaaasssseeee    beginning of the heap region
                    hhhhppppffffrrrreeeeeeee    heap region free pointer
                    ssssttttaaaacccckkkkssss    beginning of the co-expression stack region
                    eeeessssffffrrrreeeeeeee    co-expression stack region free pointer

               SSSSyyyymmmmbbbboooollll((((ssss)))) fails if ssss is not one of these strings.

     EEEEffffpppp(((())))     return the address of the expression frame pointer

     GGGGffffpppp(((())))     return the address of the generator frame pointer

     PPPPffffpppp(((())))     return the address of the frame pointer

CCCCAAAAVVVVEEEEAAAATTTTSSSS
     _I_s_c_o_p_e is inherently dangerous. For example, the composition



Version 5.9    The University of Arizona - 8/17/84              1






ISCOPE(3.icon)        Icon Program Library         ISCOPE(3.icon)



     of an arbitrary descriptor using DDDDeeeessssccccrrrr may cause the Icon
     system to malfunction in mysterious ways.

     Addresses that are represented by integers are not relocated
     during garbage collection; such addresses generally are
     invalidated by a garbage collection.

RRRREEEEQQQQUUUUIIIIRRRREEEEMMMMEEEENNNNTTTTSSSS
     _I_s_c_o_p_e only works for the VAX-11 implementation of Icon.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     Griswold, Ralph E., Robert K. McConeghy, and William H.
     Mitchell.  _A _T_o_u_r _T_h_r_o_u_g_h _t_h_e _C _I_m_p_l_e_m_e_n_t_a_t_i_o_n _o_f _I_c_o_n; _V_e_r_-
     _s_i_o_n _5._9, Department of Computer Science, The University of
     Arizona. 1984.

     Griswold, Ralph E. ``A Portable Diagnostic Facility for SNO-
     BOL4'', _S_o_f_t_w_a_r_e--_P_r_a_c_t_i_c_e _a_n_d _E_x_p_e_r_i_e_n_c_e, Vol. 5 (1975),
     pp. 93-105.

     Griswold, Ralph E. ``Linguistic Extension of Abstract
     Machine Modelling to Aid Software Development'', _S_o_f_t_w_a_r_e--
     _P_r_a_c_t_i_c_e _a_n_d _E_x_p_e_r_i_e_n_c_e, Vol. 10 (1980), pp. 1-9.

AAAAUUUUTTTTHHHHOOOORRRRSSSS
     Ralph E. Griswold and William H. Mitchell





























Version 5.9    The University of Arizona - 8/17/84              2



