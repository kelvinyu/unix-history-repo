.TH RC 1 
.SH NAME
rc \- Ratfor compiler
.SH SYNOPSIS
.B rc
[ option ] [ file ] ...
.SH DESCRIPTION
.I Rc
invokes the Ratfor preprocessor on a set of Ratfor source files.
It accepts three types of arguments:
.PP
Arguments whose names end with `.r' are taken to be
Ratfor source programs; they are 
preprocessed into Fortran and compiled.
Each subroutine or function `name' is placed on a separate file
.I name.f,
and its object code is left on
.IR name.o .
The main routine is on
.I MAIN.f
and
.I MAIN.o;
block data subprograms go on
.I BLOCKDATA?.f
and
.IR BLOCKDATA?.o .
The files resulting from a `.r' file are
loaded into a single object file
.I file.o,
and the intermediate object and Fortran files are removed.
.PP
The following flags are interpreted by
.IR rc .
See
.I ld
and
.IR  fc (1)
for other flags.
.TP 6
.B  \-c
Suppresses the loading phase of the compilation,
as does any error in anything.
.TP 6
.B  \-f
Save Fortran intermediate files.
This is primarily for debugging.
.TP 6
.B  \-r
Ratfor only; don't try to compile the Fortran.
This implies
.B \-f
and
.B \-c.
.TP 6
.B  \-v
Don't list intermediate file names while compiling.
.TP 6
.B \-C
Preserve comments in output, and format esthetically (indentation, mostly).
.TP 6
.BR \-6 x
Place continuation character
.IT x
in column 6, instead of non-standard convention used
by
.IR fc (1).
.PP
Arguments whose names end with `.f' are taken to be
Fortran source programs;
they are compiled in the normal manner.
(Only one Fortran routine is allowed in a `.f' file.)
.PP
Other arguments
are taken
to be either loader flag arguments, or Fortran-compatible
object programs, typically produced by an earlier
.I rc
run,
or perhaps libraries of Fortran-compatible routines.
These programs, together with the results of any
compilations specified, are loaded
to produce an executable program with name
.BR a.out .
.SH FILES
ratjunk		temporary
.br
/usr/fort/fc1	Fortran compiler
.SH "SEE ALSO"
B. W. Kernighan,
.IR "RATFOR \- A preprocessor for a Rational Fortran" ,
Bell Laboratories CSTR #55, 1977.
.br
fc(1) for Fortran flags and error messages
.br
ld(1) for loader flags
.br
f77(1) for the latest Fortran
.SH DIAGNOSTICS
Yes, both from
.I rc
itself and from Fortran.
.SH BUGS
#define and #include lines in
`.f' files are not processed.
.br
fc(1) is unsupported.
