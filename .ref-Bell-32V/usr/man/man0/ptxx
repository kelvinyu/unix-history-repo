.xx "" "dp: DP-11" "201 data-phone interface." "" dp(4)
.xx "" "l3tol, ltol3: convert between" "3-byte integers and long integers." "" l3tol(3)
.xx "" "diff3:" "3-way differential file comparison." "" diff3(1)
.xx "" "tk: paginator for the Tektronix" "4014." "" tk(1)
.xx "" "f77: Fortran" "77 compiler." "" f77(1)
.xx "" "" "abort: generate a fault." "" abort(3)
.xx "" "" "abs: integer absolute value." "" abs(3)
.xx "" "abs: integer" "absolute value." "" abs(3)
.xx "" "fabs, floor, ceil:" "absolute value, floor, ceiling functions." "" floor(3M)
.xx "" "" "ac: login accounting." "" ac(1M)
.xx "" "" "access: determine accessibility of file." "" access(2)
.xx "" "access: determine" "accessibility of file." "" access(2)
.xx "" "ac: login" "accounting." "" ac(1M)
.xx "" "sa, accton: system" "accounting." "" sa(1M)
.xx "" "acct: execution" "accounting file." "" acct(5)
.xx "" "acct: turn" "accounting on or off." "" acct(2)
.xx "" "" "acct: execution accounting file." "" acct(5)
.xx "" "" "acct: turn accounting on or off." "" acct(2)
.xx "" "sa," "accton: system accounting." "" sa(1M)
.xx "" "sin, cos, tan, asin," "acos, atan, atan2: trigonometric functions." "" sin(3M)
.xx "" "dn: DN-11" "ACU interface." "" dn(4)
.xx "" "" "adb: debugger." "" adb(1)
.xx "" "basename: strip filename" "affixes." "" basename(1)
.xx "" "learn: computer" "aided instruction about UNIX." "" learn(1)
.xx "" "" "alarm: schedule signal after specified time." "" alarm(2)
.xx "" "brk, sbrk, break: change core" "allocation." "" brk(2)
.xx "" "malloc, free, realloc, calloc: main memory" "allocator." "" malloc(3)
.xx "" "lex: generator of lexical" "analysis programs." "" lex(1)
.xx "" "bcd: convert to" "antique media." "" bcd(6)
.xx "" "" "a.out: assembler and link editor output." "" a.out(5)
.xx "" "" "ar: archive and library maintainer." "" ar(1)
.xx "" "" "ar: archive (library) file format." "" ar(5)
.xx "maintainer." "" "ar11: PDP-11 compatible archive and library" "" ar11(1)
.xx "" "number: convert" "Arabic numerals to English." "" number(1)
.xx "" "bc:" "arbitrary-precision arithmetic language." "" bc(1)
.xx "" "tp: manipulate tape" "archive." "" tp(1)
.xx "" "ar:" "archive and library maintainer." "" ar(1)
.xx "" "ar11: PDP-11 compatible" "archive and library maintainer." "" ar11(1)
.xx "" "ar:" "archive (library) file format." "" ar(5)
.xx "" "tar: tape" "archiver." "" tar(1)
.xx "" "arcv: convert" "archives to new format." "" arcv(1M)
.xx "" "" "arcv: convert archives to new format." "" arcv(1M)
.xx "" "echo: echo" "arguments." "" echo(1)
.xx "" "expr: evaluate" "arguments as an expression." "" expr(1)
.xx "" "getarg, iargc: command" "arguments to Fortran." "" getarg(3f)
.xx "" "bc: arbitrary-precision" "arithmetic language." "" bc(1)
.xx "" "" "arithmetic: provide drill in number facts." "" arithmetic(6)
.xx "" "gmtime, asctime, timezone: convert date and time to" "ASCII." "ctime, localtime," ctime(3)
.xx "" "ascii: map of" "ASCII character set." "" ascii(7)
.xx "" "" "ascii: map of ASCII character set." "" ascii(7)
.xx "" "atof, atoi, atol: convert" "ASCII to numbers." "" atof(3)
.xx "" "ctime, localtime, gmtime," "asctime, timezone: convert date and time to ASCII." "" ctime(3)
.xx "" "sin, cos, tan," "asin, acos, atan, atan2: trigonometric functions." "" sin(3M)
.xx "" "as:" "assembler." "" as(1)
.xx "" "a.out:" "assembler and link editor output." "" a.out(5)
.xx "" "" "assert: program verification." "" assert(3x)
.xx "" "setbuf:" "assign buffering to a stream." "" setbuf(3S)
.xx "" "kl: KL-11 or DL-11" "asynchronous interface." "" kl(4)
.xx "" "sin, cos, tan, asin, acos," "atan, atan2: trigonometric functions." "" sin(3M)
.xx "" "sin, cos, tan, asin, acos, atan," "atan2: trigonometric functions." "" sin(3M)
.xx "" "" "atof, atoi, atol: convert ASCII to numbers." "" atof(3)
.xx "" "atof," "atoi, atol: convert ASCII to numbers." "" atof(3)
.xx "" "atof, atoi," "atol: convert ASCII to numbers." "" atof(3)
.xx "" "wait:" "await completion of process." "" wait(1)
.xx "" "" "awk: pattern scanning and processing language." "" awk(1)
.xx "" "" "backgammon: the game." "" backgammon(6)
.xx "" "fetch, store, delete, firstkey, nextkey: data" "base subroutines." "dbminit," dbm(3x)
.xx "" "" "basename: strip filename affixes." "" basename(1)
.xx "" "" "bc: arbitrary-precision arithmetic language." "" bc(1)
.xx "" "" "bcd: convert to antique media." "" bcd(6)
.xx "" "cb: C program" "beautifier." "" cb(1)
.xx "" "j0, j1, jn, y0, y1, yn:" "bessel functions." "" j0(3M)
.xx "" "fread, fwrite: buffered" "binary input/output." "" fread(3S)
.xx "" "strip: remove symbols and relocation" "bits." "" strip(1)
.xx "" "sync: update the super" "block." "" sync(1M)
.xx "" "update: periodically update the super" "block." "" update(8)
.xx "" "sum: sum and count" "blocks in a file." "" sum(1)
.xx "" "ching, fortune: the" "book of changes and other cookies." "" ching(6)
.xx "" "" "boot procedures: UNIX/32V startup." "" bproc(8)
.xx "" "brk, sbrk," "break: change core allocation." "" brk(2)
.xx "login,/" "sh, for, case, if, while, \fB:\fP, \fB.\fP," "break, continue, cd, eval, exec, exit, export," "" sh(1)
.xx "" "" "brk, sbrk, break: change core allocation." "" brk(2)
.xx "" "fread, fwrite:" "buffered binary input/output." "" fread(3S)
.xx "" "stdio: standard" "buffered input/output package." "" stdio(3S)
.xx "" "setbuf: assign" "buffering to a stream." "" setbuf(3S)
.xx "" "mknod:" "build special file." "" mknod(1M)
.xx "" "swab: swap" "bytes." "" swab(3)
.xx "" "cc:" "C compiler." "" cc(1)
.xx "" "cb:" "C program beautifier." "" cb(1)
.xx "" "lint: a" "C program verifier." "" lint(1)
.xx "" "sdb:" "C symbolic debugger." "" sdb(1)
.xx "" "hypot," "cabs: euclidean distance." "" hypot(3M)
.xx "" "" "cal: print calendar." "" cal(1)
.xx "" "dc: desk" "calculator." "" dc(1)
.xx "" "cal: print" "calendar." "" cal(1)
.xx "" "" "calendar: reminder service." "" calendar(1)
.xx "" "indir, syscall: indirect system" "call." "" indir(2)
.xx "" "" "call: ring a telephone." "" call(1C)
.xx "" "cu:" "call UNIX." "" cu(1C)
.xx "" "malloc, free, realloc," "calloc: main memory allocator." "" malloc(3)
.xx "" "intro, errno: introduction to system" "calls and error numbers." "" intro(2)
.xx "cd, eval, exec, exit, export, login,/" "sh, for," "case, if, while, \fB:\fP, \fB.\fP, break, continue," "" sh(1)
.xx "" "" "cat: catenate and print." "" cat(1)
.xx "" "" "cat: phototypesetter interface." "" cat(4)
.xx "" "signal:" "catch or ignore signals." "" signal(2)
.xx "" "cat:" "catenate and print." "" cat(1)
.xx "" "" "cb: C program beautifier." "" cb(1)
.xx "" "" "cc: C compiler." "" cc(1)
.xx "" "" "cd: change working directory." "" cd(1)
.xx "" "/case, if, while, \fB:\fP, \fB.\fP, break, continue," "cd, eval, exec, exit, export, login, newgrp, read,/" "" sh(1)
.xx "" "fabs, floor," "ceil: absolute value, floor, ceiling functions." "" floor(3M)
.xx "" "fabs, floor, ceil: absolute value, floor," "ceiling functions." "" floor(3M)
.xx "" "ching, fortune: the book of" "changes and other cookies." "" ching(6)
.xx "" "pipe: create an interprocess" "channel." "" pipe(2)
.xx "" "ungetc: push" "character back into input stream." "" ungetc(3S)
.xx "" "isspace, ispunct, isprint, iscntrl, isascii:" "character classification." "/isdigit, isalnum," ctype(3)
.xx "" "eqnchar: special" "character definitions for eqn." "" eqnchar(7)
.xx "" "getc, getchar, fgetc, getw: get" "character or word from stream." "" getc(3S)
.xx "" "putc, putchar, fputc, putw: put" "character or word on a stream." "" putc(3S)
.xx "" "ascii: map of ASCII" "character set." "" ascii(7)
.xx "" "tr: translate" "characters." "" tr(1)
.xx "" "" "chdir: change default directory." "" chdir(2)
.xx "" "dcheck: file system directory consistency" "check." "" dcheck(1M)
.xx "" "icheck: file system storage consistency" "check." "" icheck(1M)
.xx "" "eqn, neqn," "checkeq: typeset mathematics." "" eqn(1)
.xx "" "chown," "chgrp: change owner or group." "" chown(1)
.xx "cookies." "" "ching, fortune: the book of changes and other" "" ching(6)
.xx "" "" "chmod: change mode." "" chmod(1)
.xx "" "" "chmod: change mode of file." "" chmod(2)
.xx "" "" "chown: change owner and group of a file." "" chown(2)
.xx "" "" "chown, chgrp: change owner or group." "" chown(1)
.xx "" "ispunct, isprint, iscntrl, isascii: character" "classification." "/isdigit, isalnum, isspace," ctype(3)
.xx "" "clri:" "clear i-node." "" clri(1M)
.xx "" "feof, ferror," "clearerr, fileno: stream status inquiries." "" ferror(3S)
.xx "" "cron:" "clock daemon." "" cron(1M)
.xx "" "cron:" "clock daemon." "" cron(8)
.xx "" "" "clri: clear i-node." "" clri(1M)
.xx "" "" "cmp: compare two files." "" cmp(1)
.xx "" "" "col: filter reverse line feeds." "" col(1)
.xx "files." "" "comm: select or reject lines common to two sorted" "" comm(1)
.xx "" "system: issue a shell" "command." "" system(3)
.xx "" "test: condition" "command." "" test(1)
.xx "" "time: time a" "command." "" time(1)
.xx "" "getarg, iargc:" "command arguments to Fortran." "" getarg(3f)
.xx "" "nice, nohup: run a" "command at low priority." "" nice(1)
.xx "" "uux: unix to unix" "command execution." "" uux(1C)
.xx "" "nohup: run a" "command immune to hangups." "" nohup(1)
.xx "" "readonly, set, shift, times, trap, umask, wait:" "command language." "/export, login, newgrp, read," sh(1)
.xx "" "intro: introduction to" "commands." "" intro(1)
.xx "" "at: execute" "commands at a later time." "" at(1)
.xx "" "comm: select or reject lines" "common to two sorted files." "" comm(1)
.xx "" "dc: DC-11" "communications interface." "" dc(4)
.xx "" "dh: DH-11" "communications multiplexer." "" dh(4)
.xx "" "dz: DZ-11" "communications multiplexer." "" dz(4)
.xx "" "diff: differential file" "comparator." "" diff(1)
.xx "" "cmp:" "compare two files." "" cmp(1)
.xx "" "diff3: 3-way differential file" "comparison." "" diff3(1)
.xx "" "uudiff: directory" "comparison between machines." "" uudiff(1C)
.xx "" "ar11: PDP-11" "compatible archive and library maintainer." "" ar11(1)
.xx "" "cc: C" "compiler." "" cc(1)
.xx "" "f77: Fortran 77" "compiler." "" f77(1)
.xx "" "rc: Ratfor" "compiler." "" rc(1)
.xx "" "yacc: yet another" "compiler-compiler." "" yacc(1)
.xx "" "wait: await" "completion of process." "" wait(1)
.xx "" "learn:" "computer aided instruction about UNIX." "" learn(1)
.xx "" "test:" "condition command." "" test(1)
.xx "" "dcheck: file system directory" "consistency check." "" dcheck(1M)
.xx "" "icheck: file system storage" "consistency check." "" icheck(1M)
.xx "" "mkfs:" "construct a file system." "" mkfs(1M)
.xx "" "deroff: remove nroff, troff, tbl and eqn" "constructs." "" deroff(1)
.xx "" "ls: list" "contents of directory." "" ls(1)
.xx "" "sh, for, case, if, while, \fB:\fP, \fB.\fP, break," "continue, cd, eval, exec, exit, export, login,/" "" sh(1)
.xx "" "ioctl, stty, gtty:" "control device." "" ioctl(2)
.xx "" "init: process" "control initialization." "" init(8)
.xx "" "terminals:" "conventional names." "" term(7)
.xx "" "ecvt, fcvt, gcvt: output" "conversion." "" ecvt(3)
.xx "" "printf, fprintf, sprintf: formatted output" "conversion." "" printf(3S)
.xx "" "scanf, fscanf, sscanf: formatted input" "conversion." "" scanf(3S)
.xx "" "units:" "conversion program." "" units(1)
.xx "" "dd:" "convert and copy a file." "" dd(1)
.xx "" "number:" "convert Arabic numerals to English." "" number(1)
.xx "" "arcv:" "convert archives to new format." "" arcv(1M)
.xx "" "atof, atoi, atol:" "convert ASCII to numbers." "" atof(3)
.xx "" "l3tol, ltol3:" "convert between 3-byte integers and long integers." "" l3tol(3)
.xx "" "ctime, localtime, gmtime, asctime, timezone:" "convert date and time to ASCII." "" ctime(3)
.xx "" "bcd:" "convert to antique media." "" bcd(6)
.xx "" "ching, fortune: the book of changes and other" "cookies." "" ching(6)
.xx "" "cp:" "copy." "" cp(1)
.xx "" "uucp, uulog: unix to unix" "copy." "" uucp(1C)
.xx "" "dd: convert and" "copy a file." "" dd(1)
.xx "" "brk, sbrk, break: change" "core allocation." "" brk(2)
.xx "" "" "core: format of memory image file." "" core(5)
.xx "functions." "sin," "cos, tan, asin, acos, atan, atan2: trigonometric" "" sin(3M)
.xx "" "sinh," "cosh, tanh: hyperbolic functions." "" sinh(3M)
.xx "" "wc: word" "count." "" wc(1)
.xx "" "sum: sum and" "count blocks in a file." "" sum(1)
.xx "" "" "cp: copy." "" cp(1)
.xx "" "" "crash: what to do when the system crashes." "" crash(8)
.xx "" "crash: what to do when the system" "crashes." "" crash(8)
.xx "" "" "creat: create a new file." "" creat(2)
.xx "" "creat:" "create a new file." "" creat(2)
.xx "" "pipe:" "create an interprocess channel." "" pipe(2)
.xx "" "mpx:" "create and manipulate multiplexed files." "" mpx(2)
.xx "" "umask: set file" "creation mode mask." "" umask(2)
.xx "" "" "cron: clock daemon." "" cron(1M)
.xx "" "" "cron: clock daemon." "" cron(8)
.xx "" "" "crypt: encode/decode." "" crypt(1)
.xx "" "" "crypt, setkey, encrypt: DES encryption." "" crypt(3)
.xx "convert date and time to ASCII." "" "ctime, localtime, gmtime, asctime, timezone:" "" ctime(3)
.xx "" "" "cu: call UNIX." "" cu(1C)
.xx "" "spline: interpolate smooth" "curve." "" spline(1G)
.xx "" "cron: clock" "daemon." "" cron(1M)
.xx "" "cron: clock" "daemon." "" cron(8)
.xx "" "lpd: line printer" "daemon." "" lpd(8)
.xx "" "fget.demon, fget.odemon: fget" "daemons." "" fget.demon(8)
.xx "" "prof: display profile" "data." "" prof(1)
.xx "" "ttys: terminal initialization" "data." "" ttys(5)
.xx "" "dbminit, fetch, store, delete, firstkey, nextkey:" "data base subroutines." "" dbm(3x)
.xx "" "null:" "data sink." "" null(4)
.xx "" "types: primitive system" "data types." "" types(5)
.xx "" "join: relational" "database operator." "" join(1)
.xx "" "dp: DP-11 201" "data-phone interface." "" dp(4)
.xx "" "date: print and set the" "date." "" date(1)
.xx "" "time, ftime: get" "date and time." "" time(2)
.xx "" "localtime, gmtime, asctime, timezone: convert" "date and time to ASCII." "ctime," ctime(3)
.xx "" "touch: update" "date last modified of a file." "" touch(1)
.xx "" "" "date: print and set the date." "" date(1)
.xx "data base subroutines." "" "dbminit, fetch, store, delete, firstkey, nextkey:" "" dbm(3x)
.xx "" "" "dc: DC-11 communications interface." "" dc(4)
.xx "" "" "dc: desk calculator." "" dc(1)
.xx "" "dc:" "DC-11 communications interface." "" dc(4)
.xx "" "" "dcheck: file system directory consistency check." "" dcheck(1M)
.xx "" "" "dd: convert and copy a file." "" dd(1)
.xx "" "dump," "ddate: incremental dump format." "" dump(5)
.xx "" "adb:" "debugger." "" adb(1)
.xx "" "sdb: C symbolic" "debugger." "" sdb(1)
.xx "" "tp:" "DEC/mag tape formats." "" tp(5)
.xx "" "tc: TC-11/TU56" "DECtape." "" tc(4)
.xx "" "chdir: change" "default directory." "" chdir(2)
.xx "" "eqnchar: special character" "definitions for eqn." "" eqnchar(7)
.xx "" "dbminit, fetch, store," "delete, firstkey, nextkey: data base subroutines." "" dbm(3x)
.xx "" "tail:" "deliver the last part of a file." "" tail(1)
.xx "" "mesg: permit or" "deny messages." "" mesg(1)
.xx "constructs." "" "deroff: remove nroff, troff, tbl and eqn" "" deroff(1)
.xx "" "crypt, setkey, encrypt:" "DES encryption." "" crypt(3)
.xx "" "dup, dup2: duplicate an open file" "descriptor." "" dup(2)
.xx "" "dc:" "desk calculator." "" dc(1)
.xx "" "access:" "determine accessibility of file." "" access(2)
.xx "" "file:" "determine file type." "" file(1)
.xx "" "ioctl, stty, gtty: control" "device." "" ioctl(2)
.xx "" "" "df: disk free." "" df(1M)
.xx "" "" "dh: DH-11 communications multiplexer." "" dh(4)
.xx "" "dh:" "DH-11 communications multiplexer." "" dh(4)
.xx "" "ratfor: rational Fortran" "dialect." "" ratfor(1)
.xx "" "" "diff: differential file comparator." "" diff(1)
.xx "" "" "diff3: 3-way differential file comparison." "" diff3(1)
.xx "" "diff:" "differential file comparator." "" diff(1)
.xx "" "diff3: 3-way" "differential file comparison." "" diff3(1)
.xx "" "" "dir: format of directories." "" dir(5)
.xx "" "dir: format of" "directories." "" dir(5)
.xx "" "cd: change working" "directory." "" cd(1)
.xx "" "chdir: change default" "directory." "" chdir(2)
.xx "" "ls: list contents of" "directory." "" ls(1)
.xx "" "mkdir: make a" "directory." "" mkdir(1)
.xx "" "uudiff:" "directory comparison between machines." "" uudiff(1C)
.xx "" "dcheck: file system" "directory consistency check." "" dcheck(1M)
.xx "" "unlink: remove" "directory entry." "" unlink(2)
.xx "" "pwd: working" "directory name." "" pwd(1)
.xx "" "mknod: make a" "directory or a special file." "" mknod(2)
.xx "" "hp: RH-11/RP04, RP05, RP06, RM03 moving-head" "disk." "" hp(4)
.xx "" "rk: RK-11/RK03 or RK05" "disk." "" rk(4)
.xx "" "rp: RP-11/RP03 moving-head" "disk." "" rp(4)
.xx "" "hs: RH11/RS03-RS04 fixed-head" "disk file." "" hs(4)
.xx "" "rf: RF11/RS11 fixed-head" "disk file." "" rf(4)
.xx "" "df:" "disk free." "" df(1M)
.xx "" "du: summarize" "disk usage." "" du(1)
.xx "" "mount, umount: mount and" "dismount file system." "" mount(1M)
.xx "" "prof:" "display profile data." "" prof(1)
.xx "" "hypot, cabs: euclidean" "distance." "" hypot(3M)
.xx "" "sysgen: UNIX/32V system generation from the" "distribution tape." "" sysgen(8)
.xx "" "kl: KL-11 or" "DL-11 asynchronous interface." "" kl(4)
.xx "" "" "dn: DN-11 ACU interface." "" dn(4)
.xx "" "dn:" "DN-11 ACU interface." "" dn(4)
.xx "" "lookbib: find and insert literature references in" "documents." "refer," refer(1)
.xx "" "" "dp: DP-11 201 data-phone interface." "" dp(4)
.xx "" "dp:" "DP-11 201 data-phone interface." "" dp(4)
.xx "" "graph:" "draw a graph." "" graph(1G)
.xx "" "arithmetic: provide" "drill in number facts." "" arithmetic(6)
.xx "" "" "du: summarize disk usage." "" du(1)
.xx "" "dump: incremental file system" "dump." "" dump(1M)
.xx "" "od: octal" "dump." "" od(1)
.xx "" "" "dump, ddate: incremental dump format." "" dump(5)
.xx "" "dump, ddate: incremental" "dump format." "" dump(5)
.xx "" "" "dump: incremental file system dump." "" dump(1M)
.xx "" "dumpdir: print the names of files on a" "dump tape." "" dumpdir(1M)
.xx "" "" "dumpdir: print the names of files on a dump tape." "" dumpdir(1M)
.xx "" "" "dup, dup2: duplicate an open file descriptor." "" dup(2)
.xx "" "dup," "dup2: duplicate an open file descriptor." "" dup(2)
.xx "" "dup, dup2:" "duplicate an open file descriptor." "" dup(2)
.xx "" "" "dz: DZ-11 communications multiplexer." "" dz(4)
.xx "" "dz:" "DZ-11 communications multiplexer." "" dz(4)
.xx "" "echo:" "echo arguments." "" echo(1)
.xx "" "" "echo: echo arguments." "" echo(1)
.xx "" "" "ecvt, fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "" "ed: text editor." "" ed(1)
.xx "" "end, etext," "edata: last locations in program." "" end(3)
.xx "" "ed: text" "editor." "" ed(1)
.xx "" "ld: link" "editor." "" ld(1)
.xx "" "sed: stream" "editor." "" sed(1)
.xx "" "a.out: assembler and link" "editor output." "" a.out(5)
.xx "" "grep," "egrep, fgrep: search a file for a pattern." "" grep(1)
.xx "" "crypt:" "encode/decode." "" crypt(1)
.xx "" "crypt, setkey," "encrypt: DES encryption." "" crypt(3)
.xx "" "crypt, setkey, encrypt: DES" "encryption." "" crypt(3)
.xx "" "makekey: generate" "encryption key." "" makekey(8)
.xx "" "" "end, etext, edata: last locations in program." "" end(3)
.xx "" "getgrent, getgrgid, getgrnam, setgrent," "endgrent: get group file entry." "" getgrent(3)
.xx "" "getpwent, getpwuid, getpwnam, setpwent," "endpwent: get password file entry." "" getpwent(3)
.xx "" "number: convert Arabic numerals to" "English." "" number(1)
.xx "" "xsend, xget," "enroll: secret mail." "" xsend(1)
.xx "" "nlist: get" "entries from name list." "" nlist(3)
.xx "" "getgrnam, setgrent, endgrent: get group file" "entry." "getgrent, getgrgid," getgrent(3)
.xx "" "getpwnam, setpwent, endpwent: get password file" "entry." "getpwent, getpwuid," getpwent(3)
.xx "" "unlink: remove directory" "entry." "" unlink(2)
.xx "" "execv, execle, execve, execlp, execvp, exec, exece," "environ: execute a file." "execl," exec(2)
.xx "" "" "environ: user environment." "" environ(5)
.xx "" "environ: user" "environment." "" environ(5)
.xx "" "getenv: value for" "environment name." "" getenv(3)
.xx "" "eqnchar: special character definitions for" "eqn." "" eqnchar(7)
.xx "" "deroff: remove nroff, troff, tbl and" "eqn constructs." "" deroff(1)
.xx "" "" "eqn, neqn, checkeq: typeset mathematics." "" eqn(1)
.xx "" "" "eqnchar: special character definitions for eqn." "" eqnchar(7)
.xx "numbers." "intro," "errno: introduction to system calls and error" "" intro(2)
.xx "" "perror, sys_errlist, sys_nerr: system" "error messages." "" perror(3)
.xx "" "intro, errno: introduction to system calls and" "error numbers." "" intro(2)
.xx "" "spell, spellin, spellout: find spelling" "errors." "" spell(1)
.xx "" "plot: openpl" "et al.: graphics interface." "" plot(3x)
.xx "" "end," "etext, edata: last locations in program." "" end(3)
.xx "" "hypot, cabs:" "euclidean distance." "" hypot(3M)
.xx "" "/if, while, \fB:\fP, \fB.\fP, break, continue, cd," "eval, exec, exit, export, login, newgrp, read,/" "" sh(1)
.xx "" "expr:" "evaluate arguments as an expression." "" expr(1)
.xx "" "execl, execv, execle, execve, execlp, execvp," "exec, exece, environ: execute a file." "" exec(2)
.xx "" "/while, \fB:\fP, \fB.\fP, break, continue, cd, eval," "exec, exit, export, login, newgrp, read, readonly,/" "" sh(1)
.xx "" "execl, execv, execle, execve, execlp, execvp, exec," "exece, environ: execute a file." "" exec(2)
.xx "exece, environ: execute a file." "" "execl, execv, execle, execve, execlp, execvp, exec," "" exec(2)
.xx "environ: execute a file." "execl, execv," "execle, execve, execlp, execvp, exec, exece," "" exec(2)
.xx "file." "execl, execv, execle, execve," "execlp, execvp, exec, exece, environ: execute a" "" exec(2)
.xx "" "sticky:" "executable files with persistent text." "" sticky(8)
.xx "" "execve, execlp, execvp, exec, exece, environ:" "execute a file." "execl, execv, execle," exec(2)
.xx "" "at:" "execute commands at a later time." "" at(1)
.xx "" "uux: unix to unix command" "execution." "" uux(1C)
.xx "" "acct:" "execution accounting file." "" acct(5)
.xx "" "sleep: suspend" "execution for an interval." "" sleep(1)
.xx "" "sleep: suspend" "execution for interval." "" sleep(3)
.xx "" "monitor: prepare" "execution profile." "" monitor(3)
.xx "" "profil:" "execution time profile." "" profil(2)
.xx "environ: execute a file." "execl," "execv, execle, execve, execlp, execvp, exec, exece," "" exec(2)
.xx "execute a file." "execl, execv, execle," "execve, execlp, execvp, exec, exece, environ:" "" exec(2)
.xx "" "execl, execv, execle, execve, execlp," "execvp, exec, exece, environ: execute a file." "" exec(2)
.xx "" "/\fB:\fP, \fB.\fP, break, continue, cd, eval, exec," "exit, export, login, newgrp, read, readonly, set,/" "" sh(1)
.xx "" "" "exit: terminate process." "" exit(2)
.xx "power, square root." "" "exp, log, log10, pow, sqrt: exponential, logarithm," "" exp(3M)
.xx "" "frexp, ldexp, modf: split into mantissa and" "exponent." "" frexp(3)
.xx "" "exp, log, log10, pow, sqrt:" "exponential, logarithm, power, square root." "" exp(3M)
.xx "" "/\fB.\fP, break, continue, cd, eval, exec, exit," "export, login, newgrp, read, readonly, set, shift,/" "" sh(1)
.xx "" "" "expr: evaluate arguments as an expression." "" expr(1)
.xx "" "expr: evaluate arguments as an" "expression." "" expr(1)
.xx "" "greek: graphics for" "extended TTY-37 type-box." "" greek(7)
.xx "" "kill: terminate a process with" "extreme prejudice." "" kill(1)
.xx "" "" "f77: Fortran 77 compiler." "" f77(1)
.xx "functions." "" "fabs, floor, ceil: absolute value, floor, ceiling" "" floor(3M)
.xx "" "arithmetic: provide drill in number" "facts." "" arithmetic(6)
.xx "" "pstat: print system" "facts." "" pstat(1M)
.xx "" "true," "false: provide truth values." "" true(1)
.xx "" "abort: generate a" "fault." "" abort(3)
.xx "export, login,/" "sh, for, case, if, while, \fB:\fP," "\fB.\fP, break, continue, cd, eval, exec, exit," "" sh(1)
.xx "exit, export, login,/" "sh, for, case, if, while," "\fB:\fP, \fB.\fP, break, continue, cd, eval, exec," "" sh(1)
.xx "" "" "fclose, fflush: close or flush a stream." "" fclose(3S)
.xx "" "ecvt," "fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "fopen, freopen," "fdopen: open a stream." "" fopen(3S)
.xx "" "col: filter reverse line" "feeds." "" col(1)
.xx "inquiries." "" "feof, ferror, clearerr, fileno: stream status" "" ferror(3S)
.xx "" "feof," "ferror, clearerr, fileno: stream status inquiries." "" ferror(3S)
.xx "subroutines." "dbminit," "fetch, store, delete, firstkey, nextkey: data base" "" dbm(3x)
.xx "" "fclose," "fflush: close or flush a stream." "" fclose(3S)
.xx "" "fget.demon, fget.odemon:" "fget daemons." "" fget.demon(8)
.xx "" "getc, getchar," "fgetc, getw: get character or word from stream." "" getc(3S)
.xx "" "" "fget.demon, fget.odemon: fget daemons." "" fget.demon(8)
.xx "" "fget.demon," "fget.odemon: fget daemons." "" fget.demon(8)
.xx "" "gets," "fgets: get a string from a stream." "" gets(3S)
.xx "" "grep, egrep," "fgrep: search a file for a pattern." "" grep(1)
.xx "" "access: determine accessibility of" "file." "" access(2)
.xx "" "acct: execution accounting" "file." "" acct(5)
.xx "" "chmod: change mode of" "file." "" chmod(2)
.xx "" "chown: change owner and group of a" "file." "" chown(2)
.xx "" "close: close a" "file." "" close(2)
.xx "" "core: format of memory image" "file." "" core(5)
.xx "" "creat: create a new" "file." "" creat(2)
.xx "" "dd: convert and copy a" "file." "" dd(1)
.xx "" "execlp, execvp, exec, exece, environ: execute a" "file." "execl, execv, execle, execve," exec(2)
.xx "" "group: group" "file." "" group(5)
.xx "" "hs: RH11/RS03-RS04 fixed-head disk" "file." "" hs(4)
.xx "" "link: link to a" "file." "" link(2)
.xx "" "mknod: build special" "file." "" mknod(1M)
.xx "" "mknod: make a directory or a special" "file." "" mknod(2)
.xx "" "passwd: password" "file." "" passwd(5)
.xx "" "pr: print" "file." "" pr(1)
.xx "" "read: read from" "file." "" read(2)
.xx "" "rev: reverse lines of a" "file." "" rev(1)
.xx "" "rf: RF11/RS11 fixed-head disk" "file." "" rf(4)
.xx "" "size: size of an object" "file." "" size(1)
.xx "" "sum: sum and count blocks in a" "file." "" sum(1)
.xx "" "tail: deliver the last part of a" "file." "" tail(1)
.xx "" "touch: update date last modified of a" "file." "" touch(1)
.xx "" "uniq: report repeated lines in a" "file." "" uniq(1)
.xx "" "write: write on a" "file." "" write(2)
.xx "" "diff: differential" "file comparator." "" diff(1)
.xx "" "diff3: 3-way differential" "file comparison." "" diff3(1)
.xx "" "umask: set" "file creation mode mask." "" umask(2)
.xx "" "dup, dup2: duplicate an open" "file descriptor." "" dup(2)
.xx "" "" "file: determine file type." "" file(1)
.xx "" "getgrgid, getgrnam, setgrent, endgrent: get group" "file entry." "getgrent," getgrent(3)
.xx "" "getpwnam, setpwent, endpwent: get password" "file entry." "getpwent, getpwuid," getpwent(3)
.xx "" "grep, egrep, fgrep: search a" "file for a pattern." "" grep(1)
.xx "" "ar: archive (library)" "file format." "" ar(5)
.xx "" "split: split a" "file into pieces." "" split(1)
.xx "" "mktemp: make a unique" "file name." "" mktemp(3)
.xx "" "stat, fstat: get" "file status." "" stat(2)
.xx "" "mkfs: construct a" "file system." "" mkfs(1M)
.xx "" "mount, umount: mount and dismount" "file system." "" mount(1M)
.xx "" "mount, umount: mount or remove" "file system." "" mount(2)
.xx "" "dcheck:" "file system directory consistency check." "" dcheck(1M)
.xx "" "dump: incremental" "file system dump." "" dump(1M)
.xx "" "hier:" "file system hierarchy." "" hier(7)
.xx "" "quot: summarize" "file system ownership." "" quot(1M)
.xx "" "restor: incremental" "file system restore." "" restor(1M)
.xx "" "icheck:" "file system storage consistency check." "" icheck(1M)
.xx "" "mtab: mounted" "file system table." "" mtab(5)
.xx "" "filsys, flblk, ino: format of" "file system volume." "" filsys(5)
.xx "" "utime: set" "file times." "" utime(2)
.xx "" "file: determine" "file type." "" file(1)
.xx "" "basename: strip" "filename affixes." "" basename(1)
.xx "" "feof, ferror, clearerr," "fileno: stream status inquiries." "" ferror(3S)
.xx "" "cmp: compare two" "files." "" cmp(1)
.xx "" "comm: select or reject lines common to two sorted" "files." "" comm(1)
.xx "" "find: find" "files." "" find(1)
.xx "" "mpx: create and manipulate multiplexed" "files." "" mpx(2)
.xx "" "mv: move or rename" "files." "" mv(1)
.xx "" "rm, rmdir: remove (unlink)" "files." "" rm(1)
.xx "" "sort: sort or merge" "files." "" sort(1)
.xx "" "dumpdir: print the names of" "files on a dump tape." "" dumpdir(1M)
.xx "" "sticky: executable" "files with persistent text." "" sticky(8)
.xx "" "" "filsys, flblk, ino: format of file system volume." "" filsys(5)
.xx "" "col:" "filter reverse line feeds." "" col(1)
.xx "" "plot: graphics" "filters." "" plot(1G)
.xx "" "dbminit, fetch, store, delete," "firstkey, nextkey: data base subroutines." "" dbm(3x)
.xx "" "tee: pipe" "fitting." "" tee(1)
.xx "" "hs: RH11/RS03-RS04" "fixed-head disk file." "" hs(4)
.xx "" "rf: RF11/RS11" "fixed-head disk file." "" rf(4)
.xx "" "filsys," "flblk, ino: format of file system volume." "" filsys(5)
.xx "functions." "fabs," "floor, ceil: absolute value, floor, ceiling" "" floor(3M)
.xx "" "fabs, floor, ceil: absolute value," "floor, ceiling functions." "" floor(3M)
.xx "" "fclose, fflush: close or" "flush a stream." "" fclose(3S)
.xx "" "" "fopen, freopen, fdopen: open a stream." "" fopen(3S)
.xx "continue, cd, eval, exec, exit, export, login,/" "sh," "for, case, if, while, \fB:\fP, \fB.\fP, break," "" sh(1)
.xx "" "" "fork: spawn new process." "" fork(2)
.xx "" "ar: archive (library) file" "format." "" ar(5)
.xx "" "arcv: convert archives to new" "format." "" arcv(1M)
.xx "" "dump, ddate: incremental dump" "format." "" dump(5)
.xx "" "dir:" "format of directories." "" dir(5)
.xx "" "filsys, flblk, ino:" "format of file system volume." "" filsys(5)
.xx "" "core:" "format of memory image file." "" core(5)
.xx "" "tbl:" "format tables for nroff or troff." "" tbl(1)
.xx "" "tp: DEC/mag tape" "formats." "" tp(5)
.xx "" "scanf, fscanf, sscanf:" "formatted input conversion." "" scanf(3S)
.xx "" "printf, fprintf, sprintf:" "formatted output conversion." "" printf(3S)
.xx "" "troff, nroff: text" "formatting and typesetting." "" troff(1)
.xx "" "ms: macros for" "formatting manuscripts." "" ms(7)
.xx "" "getarg, iargc: command arguments to" "Fortran." "" getarg(3f)
.xx "" "f77:" "Fortran 77 compiler." "" f77(1)
.xx "" "ratfor: rational" "Fortran dialect." "" ratfor(1)
.xx "" "struct: structure" "Fortran programs." "" struct(1)
.xx "" "ching," "fortune: the book of changes and other cookies." "" ching(6)
.xx "exit, export,/" "sh, for, case, if, while, \fB:" "\fP, \fB.\fP, break, continue, cd, eval, exec," "" sh(1)
.xx "" "printf," "fprintf, sprintf: formatted output conversion." "" printf(3S)
.xx "" "putc, putchar," "fputc, putw: put character or word on a stream." "" putc(3S)
.xx "" "puts," "fputs: put a string on a stream." "" puts(3S)
.xx "" "" "fread, fwrite: buffered binary input/output." "" fread(3S)
.xx "" "df: disk" "free." "" df(1M)
.xx "" "malloc," "free, realloc, calloc: main memory allocator." "" malloc(3)
.xx "" "fopen," "freopen, fdopen: open a stream." "" fopen(3S)
.xx "exponent." "" "frexp, ldexp, modf: split into mantissa and" "" frexp(3)
.xx "" "scanf," "fscanf, sscanf: formatted input conversion." "" scanf(3S)
.xx "" "" "fseek, ftell, rewind: reposition a stream." "" fseek(3S)
.xx "" "stat," "fstat: get file status." "" stat(2)
.xx "" "fseek," "ftell, rewind: reposition a stream." "" fseek(3S)
.xx "" "time," "ftime: get date and time." "" time(2)
.xx "" "gamma: log gamma" "function." "" gamma(3M)
.xx "" "fabs, floor, ceil: absolute value, floor, ceiling" "functions." "" floor(3M)
.xx "" "intro: introduction to library" "functions." "" intro(3)
.xx "" "j0, j1, jn, y0, y1, yn: bessel" "functions." "" j0(3M)
.xx "" "cos, tan, asin, acos, atan, atan2: trigonometric" "functions." "sin," sin(3M)
.xx "" "sinh, cosh, tanh: hyperbolic" "functions." "" sinh(3M)
.xx "" "fread," "fwrite: buffered binary input/output." "" fread(3S)
.xx "" "backgammon: the" "game." "" backgammon(6)
.xx "" "wump: the" "game of hunt-the-wumpus." "" wump(6)
.xx "" "gamma: log" "gamma function." "" gamma(3M)
.xx "" "" "gamma: log gamma function." "" gamma(3M)
.xx "" "ecvt, fcvt," "gcvt: output conversion." "" ecvt(3)
.xx "" "abort:" "generate a fault." "" abort(3)
.xx "" "maze:" "generate a maze problem." "" maze(6)
.xx "" "makekey:" "generate encryption key." "" makekey(8)
.xx "" "ncheck:" "generate names from i-numbers." "" ncheck(1M)
.xx "" "sysgen: UNIX/32V system" "generation from the distribution tape." "" sysgen(8)
.xx "" "rand, srand: random number" "generator." "" rand(3)
.xx "" "lex:" "generator of lexical analysis programs." "" lex(1)
.xx "" "" "getarg, iargc: command arguments to Fortran." "" getarg(3f)
.xx "from stream." "" "getc, getchar, fgetc, getw: get character or word" "" getc(3S)
.xx "stream." "getc," "getchar, fgetc, getw: get character or word from" "" getc(3S)
.xx "" "getuid, getgid, geteuid," "getegid: get user and group identity." "" getuid(2)
.xx "" "" "getenv: value for environment name." "" getenv(3)
.xx "" "getuid, getgid," "geteuid, getegid: get user and group identity." "" getuid(2)
.xx "identity." "getuid," "getgid, geteuid, getegid: get user and group" "" getuid(2)
.xx "get group file entry." "" "getgrent, getgrgid, getgrnam, setgrent, endgrent:" "" getgrent(3)
.xx "file entry." "getgrent," "getgrgid, getgrnam, setgrent, endgrent: get group" "" getgrent(3)
.xx "" "getgrent, getgrgid," "getgrnam, setgrent, endgrent: get group file entry." "" getgrent(3)
.xx "" "" "getlogin: get login name." "" getlogin(3)
.xx "" "" "getpass: read a password." "" getpass(3)
.xx "" "" "getpid: get process identification." "" getpid(2)
.xx "" "" "getpw: get name from UID." "" getpw(3)
.xx "get password file entry." "" "getpwent, getpwuid, getpwnam, setpwent, endpwent:" "" getpwent(3)
.xx "entry." "getpwent, getpwuid," "getpwnam, setpwent, endpwent: get password file" "" getpwent(3)
.xx "password file entry." "getpwent," "getpwuid, getpwnam, setpwent, endpwent: get" "" getpwent(3)
.xx "" "" "gets, fgets: get a string from a stream." "" gets(3S)
.xx "" "" "getty: set terminal mode." "" getty(8)
.xx "group identity." "" "getuid, getgid, geteuid, getegid: get user and" "" getuid(2)
.xx "" "getc, getchar, fgetc," "getw: get character or word from stream." "" getc(3S)
.xx "ASCII." "ctime, localtime," "gmtime, asctime, timezone: convert date and time to" "" ctime(3)
.xx "" "setjmp, longjmp: non-local" "goto." "" setjmp(3)
.xx "" "graph: draw a" "graph." "" graph(1G)
.xx "" "" "graph: draw a graph." "" graph(1G)
.xx "" "plot:" "graphics filters." "" plot(1G)
.xx "" "greek:" "graphics for extended TTY-37 type-box." "" greek(7)
.xx "" "plot: openpl et al.:" "graphics interface." "" plot(3x)
.xx "" "plot:" "graphics interface." "" plot(5)
.xx "" "" "greek: graphics for extended TTY-37 type-box." "" greek(7)
.xx "" "" "grep, egrep, fgrep: search a file for a pattern." "" grep(1)
.xx "" "chown, chgrp: change owner or" "group." "" chown(1)
.xx "" "newgrp: log in to a new" "group." "" newgrp(1)
.xx "" "make: maintain program" "groups." "" make(1)
.xx "" "ioctl, stty," "gtty: control device." "" ioctl(2)
.xx "" "stty," "gtty: set and retrieve terminal modes." "" stty(2)
.xx "" "hangman:" "guess the word." "" hangman(6)
.xx "" "" "hangman: guess the word." "" hangman(6)
.xx "" "nohup: run a command immune to" "hangups." "" nohup(1)
.xx "" "" "hier: file system hierarchy." "" hier(7)
.xx "" "hier: file system" "hierarchy." "" hier(7)
.xx "" "wtmp: user login" "history." "" wtmp(5)
.xx "" "" "hp: RH-11/RP04, RP05, RP06, RM03 moving-head disk." "" hp(4)
.xx "" "" "hs: RH11/RS03-RS04 fixed-head disk file." "" hs(4)
.xx "" "" "ht: RH-11/TE-16 magtape interface." "" ht(4)
.xx "" "wump: the game of" "hunt-the-wumpus." "" wump(6)
.xx "" "sinh, cosh, tanh:" "hyperbolic functions." "" sinh(3M)
.xx "" "" "hypot, cabs: euclidean distance." "" hypot(3M)
.xx "" "getarg," "iargc: command arguments to Fortran." "" getarg(3f)
.xx "" "" "icheck: file system storage consistency check." "" icheck(1M)
.xx "" "setuid, setgid: set user and group" "ID." "" setuid(2)
.xx "" "su: substitute user" "id temporarily." "" su(1)
.xx "" "getpid: get process" "identification." "" getpid(2)
.xx "" "getgid, geteuid, getegid: get user and group" "identity." "getuid," getuid(2)
.xx "eval, exec, exit, export, login,/" "sh, for, case," "if, while, \fB:\fP, \fB.\fP, break, continue, cd," "" sh(1)
.xx "" "signal: catch or" "ignore signals." "" signal(2)
.xx "" "core: format of memory" "image file." "" core(5)
.xx "" "nohup: run a command" "immune to hangups." "" nohup(1)
.xx "" "dump, ddate:" "incremental dump format." "" dump(5)
.xx "" "dump:" "incremental file system dump." "" dump(1M)
.xx "" "restor:" "incremental file system restore." "" restor(1M)
.xx "" "ptx: permuted" "index." "" ptx(1)
.xx "" "strcatn, strcmp, strcmpn, strcpy, strcpyn, strlen," "index, rindex: string operations." "strcat," string(3)
.xx "" "" "indir, syscall: indirect system call." "" indir(2)
.xx "" "indir, syscall:" "indirect system call." "" indir(2)
.xx "" "" "init: process control initialization." "" init(8)
.xx "" "init: process control" "initialization." "" init(8)
.xx "" "ttys: terminal" "initialization data." "" ttys(5)
.xx "" "popen, pclose:" "initiate I/O to/from a process." "" popen(3S)
.xx "" "filsys, flblk," "ino: format of file system volume." "" filsys(5)
.xx "" "clri: clear" "i-node." "" clri(1M)
.xx "" "scanf, fscanf, sscanf: formatted" "input conversion." "" scanf(3S)
.xx "" "ungetc: push character back into" "input stream." "" ungetc(3S)
.xx "" "fread, fwrite: buffered binary" "input/output." "" fread(3S)
.xx "" "stdio: standard buffered" "input/output package." "" stdio(3S)
.xx "" "feof, ferror, clearerr, fileno: stream status" "inquiries." "" ferror(3S)
.xx "" "uulog: uucp user log" "inquiry." "" uulog(1C)
.xx "" "refer, lookbib: find and" "insert literature references in documents." "" refer(1)
.xx "" "learn: computer aided" "instruction about UNIX." "" learn(1)
.xx "" "abs:" "integer absolute value." "" abs(3)
.xx "" "ltol3: convert between 3-byte integers and long" "integers." "l3tol," l3tol(3)
.xx "" "l3tol, ltol3: convert between 3-byte" "integers and long integers." "" l3tol(3)
.xx "" "cat: phototypesetter" "interface." "" cat(4)
.xx "" "dc: DC-11 communications" "interface." "" dc(4)
.xx "" "dn: DN-11 ACU" "interface." "" dn(4)
.xx "" "dp: DP-11 201 data-phone" "interface." "" dp(4)
.xx "" "ht: RH-11/TE-16 magtape" "interface." "" ht(4)
.xx "" "kl: KL-11 or DL-11 asynchronous" "interface." "" kl(4)
.xx "" "plot: openpl et al.: graphics" "interface." "" plot(3x)
.xx "" "plot: graphics" "interface." "" plot(5)
.xx "" "tm: TM-11/TU-10 magtape" "interface." "" tm(4)
.xx "" "tty: general terminal" "interface." "" tty(4)
.xx "" "spline:" "interpolate smooth curve." "" spline(1G)
.xx "" "pipe: create an" "interprocess channel." "" pipe(2)
.xx "" "sleep: suspend execution for an" "interval." "" sleep(1)
.xx "" "sleep: suspend execution for" "interval." "" sleep(3)
.xx "error numbers." "" "intro, errno: introduction to system calls and" "" intro(2)
.xx "" "" "intro: introduction to commands." "" intro(1)
.xx "" "" "intro: introduction to library functions." "" intro(3)
.xx "" "intro:" "introduction to commands." "" intro(1)
.xx "" "intro:" "introduction to library functions." "" intro(3)
.xx "" "intro, errno:" "introduction to system calls and error numbers." "" intro(2)
.xx "" "ncheck: generate names from" "i-numbers." "" ncheck(1M)
.xx "" "mpxio: multiplexed" "i/o." "" mpxio(5)
.xx "" "iostat: report" "I/O statistics." "" iostat(1M)
.xx "" "popen, pclose: initiate" "I/O to/from a process." "" popen(3S)
.xx "" "" "ioctl, stty, gtty: control device." "" ioctl(2)
.xx "" "" "iostat: report I/O statistics." "" iostat(1M)
.xx "isascii:/" "isalpha, isupper, islower, isdigit," "isalnum, isspace, ispunct, isprint, iscntrl," "" ctype(3)
.xx "isspace, ispunct, isprint, iscntrl, isascii:/" "" "isalpha, isupper, islower, isdigit, isalnum," "" ctype(3)
.xx "" "isalnum, isspace, ispunct, isprint, iscntrl," "isascii: character classification." "/isdigit," ctype(3)
.xx "" "ttyname," "isatty, ttyslot: find name of a terminal." "" ttyname(3)
.xx "" "/isdigit, isalnum, isspace, ispunct, isprint," "iscntrl, isascii: character classification." "" ctype(3)
.xx "iscntrl, isascii:/" "isalpha, isupper, islower," "isdigit, isalnum, isspace, ispunct, isprint," "" ctype(3)
.xx "isprint, iscntrl, isascii:/" "isalpha, isupper," "islower, isdigit, isalnum, isspace, ispunct," "" ctype(3)
.xx "" "islower, isdigit, isalnum, isspace, ispunct," "isprint, iscntrl, isascii: character/" "/isupper," ctype(3)
.xx "" "/isupper, islower, isdigit, isalnum, isspace," "ispunct, isprint, iscntrl, isascii: character/" "" ctype(3)
.xx "" "isalpha, isupper, islower, isdigit, isalnum," "isspace, ispunct, isprint, iscntrl, isascii:/" "" ctype(3)
.xx "" "system:" "issue a shell command." "" system(3)
.xx "ispunct, isprint, iscntrl, isascii:/" "isalpha," "isupper, islower, isdigit, isalnum, isspace," "" ctype(3)
.xx "" "" "j0, j1, jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0," "j1, jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0, j1," "jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "" "join: relational database operator." "" join(1)
.xx "" "makekey: generate encryption" "key." "" makekey(8)
.xx "" "" "kill: send signal to a process." "" kill(2)
.xx "" "" "kill: terminate a process with extreme prejudice." "" kill(1)
.xx "" "" "kl: KL-11 or DL-11 asynchronous interface." "" kl(4)
.xx "" "kl:" "KL-11 or DL-11 asynchronous interface." "" kl(4)
.xx "" "mem," "kmem: main memory." "" mem(4)
.xx "" "quiz: test your" "knowledge." "" quiz(6)
.xx "long integers." "" "l3tol, ltol3: convert between 3-byte integers and" "" l3tol(3)
.xx "" "awk: pattern scanning and processing" "language." "" awk(1)
.xx "" "bc: arbitrary-precision arithmetic" "language." "" bc(1)
.xx "" "set, shift, times, trap, umask, wait: command" "language." "/export, login, newgrp, read, readonly," sh(1)
.xx "" "" "ld: link editor." "" ld(1)
.xx "" "frexp," "ldexp, modf: split into mantissa and exponent." "" frexp(3)
.xx "" "" "learn: computer aided instruction about UNIX." "" learn(1)
.xx "" "" "lex: generator of lexical analysis programs." "" lex(1)
.xx "" "lex: generator of" "lexical analysis programs." "" lex(1)
.xx "" "lorder: find ordering relation for an object" "library." "" lorder(1)
.xx "" "ar: archive" "(library) file format." "" ar(5)
.xx "" "intro: introduction to" "library functions." "" intro(3)
.xx "" "ar: archive and" "library maintainer." "" ar(1)
.xx "" "ar11: PDP-11 compatible archive and" "library maintainer." "" ar11(1)
.xx "" "comm: select or reject" "lines common to two sorted files." "" comm(1)
.xx "" "uniq: report repeated" "lines in a file." "" uniq(1)
.xx "" "look: find" "lines in a sorted list." "" look(1)
.xx "" "rev: reverse" "lines of a file." "" rev(1)
.xx "" "ln: make a" "link." "" ln(1)
.xx "" "ld:" "link editor." "" ld(1)
.xx "" "a.out: assembler and" "link editor output." "" a.out(5)
.xx "" "" "link: link to a file." "" link(2)
.xx "" "link:" "link to a file." "" link(2)
.xx "" "" "lint: a C program verifier." "" lint(1)
.xx "" "look: find lines in a sorted" "list." "" look(1)
.xx "" "nlist: get entries from name" "list." "" nlist(3)
.xx "" "nm: print name" "list." "" nm(1)
.xx "" "ls:" "list contents of directory." "" ls(1)
.xx "" "refer, lookbib: find and insert" "literature references in documents." "" refer(1)
.xx "" "" "ln: make a link." "" ln(1)
.xx "and time to ASCII." "ctime," "localtime, gmtime, asctime, timezone: convert date" "" ctime(3)
.xx "" "end, etext, edata: last" "locations in program." "" end(3)
.xx "" "gamma:" "log gamma function." "" gamma(3M)
.xx "" "newgrp:" "log in to a new group." "" newgrp(1)
.xx "" "uulog: uucp user" "log inquiry." "" uulog(1C)
.xx "power, square root." "exp," "log, log10, pow, sqrt: exponential, logarithm," "" exp(3M)
.xx "square root." "exp, log," "log10, pow, sqrt: exponential, logarithm, power," "" exp(3M)
.xx "" "exp, log, log10, pow, sqrt: exponential," "logarithm, power, square root." "" exp(3M)
.xx "" "ac:" "login accounting." "" ac(1M)
.xx "" "wtmp: user" "login history." "" wtmp(5)
.xx "" "getlogin: get" "login name." "" getlogin(3)
.xx "" "/break, continue, cd, eval, exec, exit, export," "login, newgrp, read, readonly, set, shift, times,/" "" sh(1)
.xx "" "passwd: change" "login password." "" passwd(1)
.xx "" "utmp, wtmp:" "login records." "" utmp(5)
.xx "" "" "login: sign on." "" login(1)
.xx "" "setjmp," "longjmp: non-local goto." "" setjmp(3)
.xx "documents." "refer," "lookbib: find and insert literature references in" "" refer(1)
.xx "library." "" "lorder: find ordering relation for an object" "" lorder(1)
.xx "" "nice, nohup: run a command at" "low priority." "" nice(1)
.xx "" "" "lp: line printer." "" lp(4)
.xx "" "" "lpd: line printer daemon." "" lpd(8)
.xx "" "" "lpr, vpr: line printer spooler." "" lpr(1)
.xx "" "" "ls: list contents of directory." "" ls(1)
.xx "" "" "lseek, tell: move read/write pointer." "" lseek(2)
.xx "integers." "l3tol," "ltol3: convert between 3-byte integers and long" "" l3tol(3)
.xx "" "" "m4: macro processor." "" m4(1)
.xx "" "uudiff: directory comparison between" "machines." "" uudiff(1C)
.xx "" "m4:" "macro processor." "" m4(1)
.xx "" "ms:" "macros for formatting manuscripts." "" ms(7)
.xx "" "man:" "macros to typeset manual." "" man(7)
.xx "" "ht: RH-11/TE-16" "magtape interface." "" ht(4)
.xx "" "tm: TM-11/TU-10" "magtape interface." "" tm(4)
.xx "" "xsend, xget, enroll: secret" "mail." "" xsend(1)
.xx "" "mail: send or receive" "mail among users." "" mail(1)
.xx "" "" "mail: send or receive mail among users." "" mail(1)
.xx "" "mem, kmem:" "main memory." "" mem(4)
.xx "" "malloc, free, realloc, calloc:" "main memory allocator." "" malloc(3)
.xx "" "make:" "maintain program groups." "" make(1)
.xx "" "ar: archive and library" "maintainer." "" ar(1)
.xx "" "ar11: PDP-11 compatible archive and library" "maintainer." "" ar11(1)
.xx "" "" "makekey: generate encryption key." "" makekey(8)
.xx "allocator." "" "malloc, free, realloc, calloc: main memory" "" malloc(3)
.xx "" "mpx: create and" "manipulate multiplexed files." "" mpx(2)
.xx "" "tp:" "manipulate tape archive." "" tp(1)
.xx "" "frexp, ldexp, modf: split into" "mantissa and exponent." "" frexp(3)
.xx "" "man: print sections of this" "manual." "" man(1)
.xx "" "man: macros to typeset" "manual." "" man(7)
.xx "" "ms: macros for formatting" "manuscripts." "" ms(7)
.xx "" "ascii:" "map of ASCII character set." "" ascii(7)
.xx "" "umask: set file creation mode" "mask." "" umask(2)
.xx "" "eqn, neqn, checkeq: typeset" "mathematics." "" eqn(1)
.xx "" "" "maze: generate a maze problem." "" maze(6)
.xx "" "maze: generate a" "maze problem." "" maze(6)
.xx "" "bcd: convert to antique" "media." "" bcd(6)
.xx "" "" "mem, kmem: main memory." "" mem(4)
.xx "" "mem, kmem: main" "memory." "" mem(4)
.xx "" "malloc, free, realloc, calloc: main" "memory allocator." "" malloc(3)
.xx "" "core: format of" "memory image file." "" core(5)
.xx "" "sort: sort or" "merge files." "" sort(1)
.xx "" "" "mesg: permit or deny messages." "" mesg(1)
.xx "" "mesg: permit or deny" "messages." "" mesg(1)
.xx "" "perror, sys_errlist, sys_nerr: system error" "messages." "" perror(3)
.xx "" "" "mkdir: make a directory." "" mkdir(1)
.xx "" "" "mkfs: construct a file system." "" mkfs(1M)
.xx "" "" "mknod: build special file." "" mknod(1M)
.xx "" "" "mknod: make a directory or a special file." "" mknod(2)
.xx "" "" "mktemp: make a unique file name." "" mktemp(3)
.xx "" "chmod: change" "mode." "" chmod(1)
.xx "" "getty: set terminal" "mode." "" getty(8)
.xx "" "umask: set file creation" "mode mask." "" umask(2)
.xx "" "chmod: change" "mode of file." "" chmod(2)
.xx "" "stty, gtty: set and retrieve terminal" "modes." "" stty(2)
.xx "" "frexp, ldexp," "modf: split into mantissa and exponent." "" frexp(3)
.xx "" "touch: update date last" "modified of a file." "" touch(1)
.xx "" "" "monitor: prepare execution profile." "" monitor(3)
.xx "" "mount, umount:" "mount and dismount file system." "" mount(1M)
.xx "" "mount, umount:" "mount or remove file system." "" mount(2)
.xx "" "" "mount, umount: mount and dismount file system." "" mount(1M)
.xx "" "" "mount, umount: mount or remove file system." "" mount(2)
.xx "" "mtab:" "mounted file system table." "" mtab(5)
.xx "" "mv:" "move or rename files." "" mv(1)
.xx "" "lseek, tell:" "move read/write pointer." "" lseek(2)
.xx "" "hp: RH-11/RP04, RP05, RP06, RM03" "moving-head disk." "" hp(4)
.xx "" "rp: RP-11/RP03" "moving-head disk." "" rp(4)
.xx "" "" "mpx: create and manipulate multiplexed files." "" mpx(2)
.xx "" "" "mpxio: multiplexed i/o." "" mpxio(5)
.xx "" "" "ms: macros for formatting manuscripts." "" ms(7)
.xx "" "" "mtab: mounted file system table." "" mtab(5)
.xx "" "mpx: create and manipulate" "multiplexed files." "" mpx(2)
.xx "" "mpxio:" "multiplexed i/o." "" mpxio(5)
.xx "" "dh: DH-11 communications" "multiplexer." "" dh(4)
.xx "" "dz: DZ-11 communications" "multiplexer." "" dz(4)
.xx "" "" "mv: move or rename files." "" mv(1)
.xx "" "getenv: value for environment" "name." "" getenv(3)
.xx "" "getlogin: get login" "name." "" getlogin(3)
.xx "" "mktemp: make a unique file" "name." "" mktemp(3)
.xx "" "pwd: working directory" "name." "" pwd(1)
.xx "" "tty: get terminal" "name." "" tty(1)
.xx "" "terminals: conventional" "names." "" term(7)
.xx "" "ncheck: generate" "names from i-numbers." "" ncheck(1M)
.xx "" "dumpdir: print the" "names of files on a dump tape." "" dumpdir(1M)
.xx "" "" "ncheck: generate names from i-numbers." "" ncheck(1M)
.xx "" "eqn," "neqn, checkeq: typeset mathematics." "" eqn(1)
.xx "" "" "newgrp: log in to a new group." "" newgrp(1)
.xx "" "/continue, cd, eval, exec, exit, export, login," "newgrp, read, readonly, set, shift, times, trap,/" "" sh(1)
.xx "" "dbminit, fetch, store, delete, firstkey," "nextkey: data base subroutines." "" dbm(3x)
.xx "" "" "nice, nohup: run a command at low priority." "" nice(1)
.xx "" "" "nice: set program priority." "" nice(2)
.xx "" "" "nlist: get entries from name list." "" nlist(3)
.xx "" "" "nm: print name list." "" nm(1)
.xx "" "nice," "nohup: run a command at low priority." "" nice(1)
.xx "" "" "nohup: run a command immune to hangups." "" nohup(1)
.xx "" "setjmp, longjmp:" "non-local goto." "" setjmp(3)
.xx "" "tbl: format tables for" "nroff or troff." "" tbl(1)
.xx "" "troff," "nroff: text formatting and typesetting." "" troff(1)
.xx "" "deroff: remove" "nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "" "null: data sink." "" null(4)
.xx "" "atof, atoi, atol: convert ASCII to" "numbers." "" atof(3)
.xx "" "errno: introduction to system calls and error" "numbers." "intro," intro(2)
.xx "" "number: convert Arabic" "numerals to English." "" number(1)
.xx "" "size: size of an" "object file." "" size(1)
.xx "" "lorder: find ordering relation for an" "object library." "" lorder(1)
.xx "" "od:" "octal dump." "" od(1)
.xx "" "" "od: octal dump." "" od(1)
.xx "" "acct: turn accounting on or" "off." "" acct(2)
.xx "" "login: sign" "on." "" login(1)
.xx "" "plot:" "openpl et al.: graphics interface." "" plot(3x)
.xx "" "strcpy, strcpyn, strlen, index, rindex: string" "operations." "strcat, strcatn, strcmp, strcmpn," string(3)
.xx "" "join: relational database" "operator." "" join(1)
.xx "" "stty: set terminal" "options." "" stty(1)
.xx "" "lorder: find" "ordering relation for an object library." "" lorder(1)
.xx "" "a.out: assembler and link editor" "output." "" a.out(5)
.xx "" "ecvt, fcvt, gcvt:" "output conversion." "" ecvt(3)
.xx "" "printf, fprintf, sprintf: formatted" "output conversion." "" printf(3S)
.xx "" "chown: change" "owner and group of a file." "" chown(2)
.xx "" "chown, chgrp: change" "owner or group." "" chown(1)
.xx "" "quot: summarize file system" "ownership." "" quot(1M)
.xx "" "stdio: standard buffered input/output" "package." "" stdio(3S)
.xx "" "tk:" "paginator for the Tektronix 4014." "" tk(1)
.xx "" "pc: PC-11" "paper tape reader/punch." "" pc(4)
.xx "" "" "passwd: change login password." "" passwd(1)
.xx "" "" "passwd: password file." "" passwd(5)
.xx "" "getpass: read a" "password." "" getpass(3)
.xx "" "passwd: change login" "password." "" passwd(1)
.xx "" "passwd:" "password file." "" passwd(5)
.xx "" "getpwuid, getpwnam, setpwent, endpwent: get" "password file entry." "getpwent," getpwent(3)
.xx "" "grep, egrep, fgrep: search a file for a" "pattern." "" grep(1)
.xx "" "awk:" "pattern scanning and processing language." "" awk(1)
.xx "" "" "pause: stop until signal." "" pause(2)
.xx "" "" "pc: PC-11 paper tape reader/punch." "" pc(4)
.xx "" "pc:" "PC-11 paper tape reader/punch." "" pc(4)
.xx "" "popen," "pclose: initiate I/O to/from a process." "" popen(3S)
.xx "" "ar11:" "PDP-11 compatible archive and library maintainer." "" ar11(1)
.xx "" "update:" "periodically update the super block." "" update(8)
.xx "" "mesg:" "permit or deny messages." "" mesg(1)
.xx "" "ptx:" "permuted index." "" ptx(1)
.xx "messages." "" "perror, sys_errlist, sys_nerr: system error" "" perror(3)
.xx "" "sticky: executable files with" "persistent text." "" sticky(8)
.xx "" "cat:" "phototypesetter interface." "" cat(4)
.xx "" "tc:" "photypesetter simulator." "" tc(1)
.xx "" "split: split a file into" "pieces." "" split(1)
.xx "" "" "pipe: create an interprocess channel." "" pipe(2)
.xx "" "tee:" "pipe fitting." "" tee(1)
.xx "" "" "plot: graphics filters." "" plot(1G)
.xx "" "" "plot: graphics interface." "" plot(5)
.xx "" "" "plot: openpl et al.: graphics interface." "" plot(3x)
.xx "" "lseek, tell: move read/write" "pointer." "" lseek(2)
.xx "" "" "popen, pclose: initiate I/O to/from a process." "" popen(3S)
.xx "root." "exp, log, log10," "pow, sqrt: exponential, logarithm, power, square" "" exp(3M)
.xx "" "exp, log, log10, pow, sqrt: exponential, logarithm," "power, square root." "" exp(3M)
.xx "" "" "pr: print file." "" pr(1)
.xx "" "kill: terminate a process with extreme" "prejudice." "" kill(1)
.xx "" "monitor:" "prepare execution profile." "" monitor(3)
.xx "" "types:" "primitive system data types." "" types(5)
.xx "" "cat: catenate and" "print." "" cat(1)
.xx "" "date:" "print and set the date." "" date(1)
.xx "" "cal:" "print calendar." "" cal(1)
.xx "" "pr:" "print file." "" pr(1)
.xx "" "nm:" "print name list." "" nm(1)
.xx "" "man:" "print sections of this manual." "" man(1)
.xx "" "pstat:" "print system facts." "" pstat(1M)
.xx "" "dumpdir:" "print the names of files on a dump tape." "" dumpdir(1M)
.xx "" "lp: line" "printer." "" lp(4)
.xx "" "lpd: line" "printer daemon." "" lpd(8)
.xx "" "lpr, vpr: line" "printer spooler." "" lpr(1)
.xx "" "vp: Versatec" "printer-plotter." "" vp(4)
.xx "conversion." "" "printf, fprintf, sprintf: formatted output" "" printf(3S)
.xx "" "nice, nohup: run a command at low" "priority." "" nice(1)
.xx "" "nice: set program" "priority." "" nice(2)
.xx "" "maze: generate a maze" "problem." "" maze(6)
.xx "" "boot" "procedures: UNIX/32V startup." "" bproc(8)
.xx "" "exit: terminate" "process." "" exit(2)
.xx "" "fork: spawn new" "process." "" fork(2)
.xx "" "kill: send signal to a" "process." "" kill(2)
.xx "" "popen, pclose: initiate I/O to/from a" "process." "" popen(3S)
.xx "" "wait: await completion of" "process." "" wait(1)
.xx "" "init:" "process control initialization." "" init(8)
.xx "" "getpid: get" "process identification." "" getpid(2)
.xx "" "ps:" "process status." "" ps(1)
.xx "" "times: get" "process times." "" times(2)
.xx "" "wait: wait for" "process to terminate." "" wait(2)
.xx "" "ptrace:" "process trace." "" ptrace(2)
.xx "" "kill: terminate a" "process with extreme prejudice." "" kill(1)
.xx "" "awk: pattern scanning and" "processing language." "" awk(1)
.xx "" "m4: macro" "processor." "" m4(1)
.xx "" "" "prof: display profile data." "" prof(1)
.xx "" "" "profil: execution time profile." "" profil(2)
.xx "" "monitor: prepare execution" "profile." "" monitor(3)
.xx "" "profil: execution time" "profile." "" profil(2)
.xx "" "prof: display" "profile data." "" prof(1)
.xx "" "end, etext, edata: last locations in" "program." "" end(3)
.xx "" "units: conversion" "program." "" units(1)
.xx "" "lex: generator of lexical analysis" "programs." "" lex(1)
.xx "" "struct: structure Fortran" "programs." "" struct(1)
.xx "" "arithmetic:" "provide drill in number facts." "" arithmetic(6)
.xx "" "true, false:" "provide truth values." "" true(1)
.xx "" "" "ps: process status." "" ps(1)
.xx "" "" "pstat: print system facts." "" pstat(1M)
.xx "" "" "ptrace: process trace." "" ptrace(2)
.xx "" "" "ptx: permuted index." "" ptx(1)
.xx "" "ungetc:" "push character back into input stream." "" ungetc(3S)
.xx "on a stream." "" "putc, putchar, fputc, putw: put character or word" "" putc(3S)
.xx "stream." "putc," "putchar, fputc, putw: put character or word on a" "" putc(3S)
.xx "" "" "puts, fputs: put a string on a stream." "" puts(3S)
.xx "" "putc, putchar, fputc," "putw: put character or word on a stream." "" putc(3S)
.xx "" "" "pwd: working directory name." "" pwd(1)
.xx "" "" "qsort: quicker sort." "" qsort(3)
.xx "" "qsort:" "quicker sort." "" qsort(3)
.xx "" "" "quiz: test your knowledge." "" quiz(6)
.xx "" "" "quot: summarize file system ownership." "" quot(1M)
.xx "" "" "rand, srand: random number generator." "" rand(3)
.xx "" "rand, srand:" "random number generator." "" rand(3)
.xx "" "rc:" "Ratfor compiler." "" rc(1)
.xx "" "" "ratfor: rational Fortran dialect." "" ratfor(1)
.xx "" "ratfor:" "rational Fortran dialect." "" ratfor(1)
.xx "" "" "rc: Ratfor compiler." "" rc(1)
.xx "" "getpass:" "read a password." "" getpass(3)
.xx "" "read:" "read from file." "" read(2)
.xx "" "" "read: read from file." "" read(2)
.xx "wait:/" "/cd, eval, exec, exit, export, login, newgrp," "read, readonly, set, shift, times, trap, umask," "" sh(1)
.xx "" "pc: PC-11 paper tape" "reader/punch." "" pc(4)
.xx "" "open: open for" "reading or writing." "" open(2)
.xx "" "/cd, eval, exec, exit, export, login, newgrp, read," "readonly, set, shift, times, trap, umask, wait:/" "" sh(1)
.xx "" "lseek, tell: move" "read/write pointer." "" lseek(2)
.xx "" "malloc, free," "realloc, calloc: main memory allocator." "" malloc(3)
.xx "" "mail: send or" "receive mail among users." "" mail(1)
.xx "" "utmp, wtmp: login" "records." "" utmp(5)
.xx "references in documents." "" "refer, lookbib: find and insert literature" "" refer(1)
.xx "" "refer, lookbib: find and insert literature" "references in documents." "" refer(1)
.xx "" "comm: select or" "reject lines common to two sorted files." "" comm(1)
.xx "" "lorder: find ordering" "relation for an object library." "" lorder(1)
.xx "" "join:" "relational database operator." "" join(1)
.xx "" "strip: remove symbols and" "relocation bits." "" strip(1)
.xx "" "calendar:" "reminder service." "" calendar(1)
.xx "" "unlink:" "remove directory entry." "" unlink(2)
.xx "" "mount, umount: mount or" "remove file system." "" mount(2)
.xx "" "deroff:" "remove nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "strip:" "remove symbols and relocation bits." "" strip(1)
.xx "" "rm, rmdir:" "remove (unlink) files." "" rm(1)
.xx "" "mv: move or" "rename files." "" mv(1)
.xx "" "uniq: report" "repeated lines in a file." "" uniq(1)
.xx "" "iostat:" "report I/O statistics." "" iostat(1M)
.xx "" "uniq:" "report repeated lines in a file." "" uniq(1)
.xx "" "fseek, ftell, rewind:" "reposition a stream." "" fseek(3S)
.xx "" "" "restor: incremental file system restore." "" restor(1M)
.xx "" "restor: incremental file system" "restore." "" restor(1M)
.xx "" "stty, gtty: set and" "retrieve terminal modes." "" stty(2)
.xx "" "" "rev: reverse lines of a file." "" rev(1)
.xx "" "col: filter" "reverse line feeds." "" col(1)
.xx "" "rev:" "reverse lines of a file." "" rev(1)
.xx "" "fseek, ftell," "rewind: reposition a stream." "" fseek(3S)
.xx "" "" "rf: RF11/RS11 fixed-head disk file." "" rf(4)
.xx "" "rf:" "RF11/RS11 fixed-head disk file." "" rf(4)
.xx "" "hp:" "RH-11/RP04, RP05, RP06, RM03 moving-head disk." "" hp(4)
.xx "" "hs:" "RH11/RS03-RS04 fixed-head disk file." "" hs(4)
.xx "" "ht:" "RH-11/TE-16 magtape interface." "" ht(4)
.xx "" "strcmp, strcmpn, strcpy, strcpyn, strlen, index," "rindex: string operations." "strcat, strcatn," string(3)
.xx "" "call:" "ring a telephone." "" call(1C)
.xx "" "" "rk: RK-11/RK03 or RK05 disk." "" rk(4)
.xx "" "rk: RK-11/RK03 or" "RK05 disk." "" rk(4)
.xx "" "rk:" "RK-11/RK03 or RK05 disk." "" rk(4)
.xx "" "" "rm, rmdir: remove (unlink) files." "" rm(1)
.xx "" "hp: RH-11/RP04, RP05, RP06," "RM03 moving-head disk." "" hp(4)
.xx "" "rm," "rmdir: remove (unlink) files." "" rm(1)
.xx "" "pow, sqrt: exponential, logarithm, power, square" "root." "exp, log, log10," exp(3M)
.xx "" "" "rp: RP-11/RP03 moving-head disk." "" rp(4)
.xx "" "hp: RH-11/RP04," "RP05, RP06, RM03 moving-head disk." "" hp(4)
.xx "" "hp: RH-11/RP04, RP05," "RP06, RM03 moving-head disk." "" hp(4)
.xx "" "rp:" "RP-11/RP03 moving-head disk." "" rp(4)
.xx "" "nice, nohup:" "run a command at low priority." "" nice(1)
.xx "" "nohup:" "run a command immune to hangups." "" nohup(1)
.xx "" "" "sa, accton: system accounting." "" sa(1M)
.xx "" "brk," "sbrk, break: change core allocation." "" brk(2)
.xx "" "" "scanf, fscanf, sscanf: formatted input conversion." "" scanf(3S)
.xx "" "awk: pattern" "scanning and processing language." "" awk(1)
.xx "" "alarm:" "schedule signal after specified time." "" alarm(2)
.xx "" "" "sdb: C symbolic debugger." "" sdb(1)
.xx "" "grep, egrep, fgrep:" "search a file for a pattern." "" grep(1)
.xx "" "xsend, xget, enroll:" "secret mail." "" xsend(1)
.xx "" "man: print" "sections of this manual." "" man(1)
.xx "" "" "sed: stream editor." "" sed(1)
.xx "" "comm:" "select or reject lines common to two sorted files." "" comm(1)
.xx "" "mail:" "send or receive mail among users." "" mail(1)
.xx "" "kill:" "send signal to a process." "" kill(2)
.xx "" "calendar: reminder" "service." "" calendar(1)
.xx "" "ascii: map of ASCII character" "set." "" ascii(7)
.xx "" "/exec, exit, export, login, newgrp, read, readonly," "set, shift, times, trap, umask, wait: command/" "" sh(1)
.xx "" "" "setbuf: assign buffering to a stream." "" setbuf(3S)
.xx "" "setuid," "setgid: set user and group ID." "" setuid(2)
.xx "" "getgrent, getgrgid, getgrnam," "setgrent, endgrent: get group file entry." "" getgrent(3)
.xx "" "" "setjmp, longjmp: non-local goto." "" setjmp(3)
.xx "" "crypt," "setkey, encrypt: DES encryption." "" crypt(3)
.xx "" "getpwent, getpwuid, getpwnam," "setpwent, endpwent: get password file entry." "" getpwent(3)
.xx "" "" "setuid, setgid: set user and group ID." "" setuid(2)
.xx "continue, cd, eval, exec, exit, export, login,/" "" "sh, for, case, if, while, \fB:\fP, \fB.\fP, break," "" sh(1)
.xx "" "system: issue a" "shell command." "" system(3)
.xx "" "/exit, export, login, newgrp, read, readonly, set," "shift, times, trap, umask, wait: command language." "" sh(1)
.xx "" "login:" "sign on." "" login(1)
.xx "" "pause: stop until" "signal." "" pause(2)
.xx "" "alarm: schedule" "signal after specified time." "" alarm(2)
.xx "" "" "signal: catch or ignore signals." "" signal(2)
.xx "" "kill: send" "signal to a process." "" kill(2)
.xx "" "signal: catch or ignore" "signals." "" signal(2)
.xx "" "tc: photypesetter" "simulator." "" tc(1)
.xx "trigonometric functions." "" "sin, cos, tan, asin, acos, atan, atan2:" "" sin(3M)
.xx "" "" "sinh, cosh, tanh: hyperbolic functions." "" sinh(3M)
.xx "" "null: data" "sink." "" null(4)
.xx "" "size:" "size of an object file." "" size(1)
.xx "" "" "size: size of an object file." "" size(1)
.xx "" "" "sleep: suspend execution for an interval." "" sleep(1)
.xx "" "" "sleep: suspend execution for interval." "" sleep(3)
.xx "" "spline: interpolate" "smooth curve." "" spline(1G)
.xx "" "qsort: quicker" "sort." "" qsort(3)
.xx "" "tsort: topological" "sort." "" tsort(1)
.xx "" "sort:" "sort or merge files." "" sort(1)
.xx "" "" "sort: sort or merge files." "" sort(1)
.xx "" "comm: select or reject lines common to two" "sorted files." "" comm(1)
.xx "" "look: find lines in a" "sorted list." "" look(1)
.xx "" "fork:" "spawn new process." "" fork(2)
.xx "" "alarm: schedule signal after" "specified time." "" alarm(2)
.xx "" "" "spell, spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell," "spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell, spellin, spellout: find" "spelling errors." "" spell(1)
.xx "" "spell, spellin," "spellout: find spelling errors." "" spell(1)
.xx "" "" "spline: interpolate smooth curve." "" spline(1G)
.xx "" "split:" "split a file into pieces." "" split(1)
.xx "" "frexp, ldexp, modf:" "split into mantissa and exponent." "" frexp(3)
.xx "" "" "split: split a file into pieces." "" split(1)
.xx "" "lpr, vpr: line printer" "spooler." "" lpr(1)
.xx "" "printf, fprintf," "sprintf: formatted output conversion." "" printf(3S)
.xx "" "exp, log, log10, pow," "sqrt: exponential, logarithm, power, square root." "" exp(3M)
.xx "" "log10, pow, sqrt: exponential, logarithm, power," "square root." "exp, log," exp(3M)
.xx "" "rand," "srand: random number generator." "" rand(3)
.xx "" "scanf, fscanf," "sscanf: formatted input conversion." "" scanf(3S)
.xx "" "stdio:" "standard buffered input/output package." "" stdio(3S)
.xx "" "boot procedures: UNIX/32V" "startup." "" bproc(8)
.xx "" "" "stat, fstat: get file status." "" stat(2)
.xx "" "iostat: report I/O" "statistics." "" iostat(1M)
.xx "" "ps: process" "status." "" ps(1)
.xx "" "stat, fstat: get file" "status." "" stat(2)
.xx "" "feof, ferror, clearerr, fileno: stream" "status inquiries." "" ferror(3S)
.xx "" "" "stdio: standard buffered input/output package." "" stdio(3S)
.xx "" "" "sticky: executable files with persistent text." "" sticky(8)
.xx "" "" "stime: set time." "" stime(2)
.xx "" "pause:" "stop until signal." "" pause(2)
.xx "" "icheck: file system" "storage consistency check." "" icheck(1M)
.xx "subroutines." "dbminit, fetch," "store, delete, firstkey, nextkey: data base" "" dbm(3x)
.xx "strlen, index, rindex: string operations." "" "strcat, strcatn, strcmp, strcmpn, strcpy, strcpyn," "" string(3)
.xx "index, rindex: string operations." "strcat," "strcatn, strcmp, strcmpn, strcpy, strcpyn, strlen," "" string(3)
.xx "rindex: string operations." "strcat, strcatn," "strcmp, strcmpn, strcpy, strcpyn, strlen, index," "" string(3)
.xx "string operations." "strcat, strcatn, strcmp," "strcmpn, strcpy, strcpyn, strlen, index, rindex:" "" string(3)
.xx "operations." "strcat, strcatn, strcmp, strcmpn," "strcpy, strcpyn, strlen, index, rindex: string" "" string(3)
.xx "" "strcat, strcatn, strcmp, strcmpn, strcpy," "strcpyn, strlen, index, rindex: string operations." "" string(3)
.xx "" "fclose, fflush: close or flush a" "stream." "" fclose(3S)
.xx "" "fopen, freopen, fdopen: open a" "stream." "" fopen(3S)
.xx "" "fseek, ftell, rewind: reposition a" "stream." "" fseek(3S)
.xx "" "getchar, fgetc, getw: get character or word from" "stream." "getc," getc(3S)
.xx "" "gets, fgets: get a string from a" "stream." "" gets(3S)
.xx "" "putchar, fputc, putw: put character or word on a" "stream." "putc," putc(3S)
.xx "" "puts, fputs: put a string on a" "stream." "" puts(3S)
.xx "" "setbuf: assign buffering to a" "stream." "" setbuf(3S)
.xx "" "ungetc: push character back into input" "stream." "" ungetc(3S)
.xx "" "sed:" "stream editor." "" sed(1)
.xx "" "feof, ferror, clearerr, fileno:" "stream status inquiries." "" ferror(3S)
.xx "" "gets, fgets: get a" "string from a stream." "" gets(3S)
.xx "" "puts, fputs: put a" "string on a stream." "" puts(3S)
.xx "" "strcmpn, strcpy, strcpyn, strlen, index, rindex:" "string operations." "strcat, strcatn, strcmp," string(3)
.xx "" "basename:" "strip filename affixes." "" basename(1)
.xx "" "" "strip: remove symbols and relocation bits." "" strip(1)
.xx "" "strcat, strcatn, strcmp, strcmpn, strcpy, strcpyn," "strlen, index, rindex: string operations." "" string(3)
.xx "" "" "struct: structure Fortran programs." "" struct(1)
.xx "" "struct:" "structure Fortran programs." "" struct(1)
.xx "" "ioctl," "stty, gtty: control device." "" ioctl(2)
.xx "" "" "stty, gtty: set and retrieve terminal modes." "" stty(2)
.xx "" "" "stty: set terminal options." "" stty(1)
.xx "" "" "su: substitute user id temporarily." "" su(1)
.xx "" "fetch, store, delete, firstkey, nextkey: data base" "subroutines." "dbminit," dbm(3x)
.xx "" "su:" "substitute user id temporarily." "" su(1)
.xx "" "sum:" "sum and count blocks in a file." "" sum(1)
.xx "" "" "sum: sum and count blocks in a file." "" sum(1)
.xx "" "du:" "summarize disk usage." "" du(1)
.xx "" "quot:" "summarize file system ownership." "" quot(1M)
.xx "" "sync: update the" "super block." "" sync(1M)
.xx "" "update: periodically update the" "super block." "" update(8)
.xx "" "sync: update" "super-block." "" sync(2)
.xx "" "sleep:" "suspend execution for an interval." "" sleep(1)
.xx "" "sleep:" "suspend execution for interval." "" sleep(3)
.xx "" "" "swab: swap bytes." "" swab(3)
.xx "" "swab:" "swap bytes." "" swab(3)
.xx "" "sdb: C" "symbolic debugger." "" sdb(1)
.xx "" "strip: remove" "symbols and relocation bits." "" strip(1)
.xx "" "" "sync: update super-block." "" sync(2)
.xx "" "" "sync: update the super block." "" sync(1M)
.xx "" "indir," "syscall: indirect system call." "" indir(2)
.xx "" "perror," "sys_errlist, sys_nerr: system error messages." "" perror(3)
.xx "distribution tape." "" "sysgen: UNIX/32V system generation from the" "" sysgen(8)
.xx "" "perror, sys_errlist," "sys_nerr: system error messages." "" perror(3)
.xx "" "mkfs: construct a file" "system." "" mkfs(1M)
.xx "" "mount, umount: mount and dismount file" "system." "" mount(1M)
.xx "" "mount, umount: mount or remove file" "system." "" mount(2)
.xx "" "who: who is on the" "system." "" who(1)
.xx "" "mtab: mounted file system" "table." "" mtab(5)
.xx "" "tbl: format" "tables for nroff or troff." "" tbl(1)
.xx "" "tabs: set terminal" "tabs." "" tabs(1)
.xx "" "" "tabs: set terminal tabs." "" tabs(1)
.xx "" "" "tail: deliver the last part of a file." "" tail(1)
.xx "functions." "sin, cos," "tan, asin, acos, atan, atan2: trigonometric" "" sin(3M)
.xx "" "sinh, cosh," "tanh: hyperbolic functions." "" sinh(3M)
.xx "" "dumpdir: print the names of files on a dump" "tape." "" dumpdir(1M)
.xx "" "UNIX/32V system generation from the distribution" "tape." "sysgen:" sysgen(8)
.xx "" "tp: manipulate" "tape archive." "" tp(1)
.xx "" "tar:" "tape archiver." "" tar(1)
.xx "" "tp: DEC/mag" "tape formats." "" tp(5)
.xx "" "pc: PC-11 paper" "tape reader/punch." "" pc(4)
.xx "" "" "tar: tape archiver." "" tar(1)
.xx "" "deroff: remove nroff, troff," "tbl and eqn constructs." "" deroff(1)
.xx "" "" "tbl: format tables for nroff or troff." "" tbl(1)
.xx "" "" "tc: photypesetter simulator." "" tc(1)
.xx "" "" "tc: TC-11/TU56 DECtape." "" tc(4)
.xx "" "tc:" "TC-11/TU56 DECtape." "" tc(4)
.xx "" "" "tee: pipe fitting." "" tee(1)
.xx "" "tk: paginator for the" "Tektronix 4014." "" tk(1)
.xx "" "call: ring a" "telephone." "" call(1C)
.xx "" "su: substitute user id" "temporarily." "" su(1)
.xx "" "ttyname, isatty, ttyslot: find name of a" "terminal." "" ttyname(3)
.xx "" "ttys:" "terminal initialization data." "" ttys(5)
.xx "" "tty: general" "terminal interface." "" tty(4)
.xx "" "getty: set" "terminal mode." "" getty(8)
.xx "" "stty, gtty: set and retrieve" "terminal modes." "" stty(2)
.xx "" "tty: get" "terminal name." "" tty(1)
.xx "" "stty: set" "terminal options." "" stty(1)
.xx "" "tabs: set" "terminal tabs." "" tabs(1)
.xx "" "" "terminals: conventional names." "" term(7)
.xx "" "wait: wait for process to" "terminate." "" wait(2)
.xx "" "kill:" "terminate a process with extreme prejudice." "" kill(1)
.xx "" "exit:" "terminate process." "" exit(2)
.xx "" "" "test: condition command." "" test(1)
.xx "" "quiz:" "test your knowledge." "" quiz(6)
.xx "" "sticky: executable files with persistent" "text." "" sticky(8)
.xx "" "ed:" "text editor." "" ed(1)
.xx "" "troff, nroff:" "text formatting and typesetting." "" troff(1)
.xx "" "alarm: schedule signal after specified" "time." "" alarm(2)
.xx "" "at: execute commands at a later" "time." "" at(1)
.xx "" "stime: set" "time." "" stime(2)
.xx "" "time, ftime: get date and" "time." "" time(2)
.xx "" "" "time, ftime: get date and time." "" time(2)
.xx "" "times: get process" "times." "" times(2)
.xx "" "utime: set file" "times." "" utime(2)
.xx "" "export, login, newgrp, read, readonly, set, shift," "times, trap, umask, wait: command language." "/exit," sh(1)
.xx "" "ctime, localtime, gmtime, asctime," "timezone: convert date and time to ASCII." "" ctime(3)
.xx "" "" "tk: paginator for the Tektronix 4014." "" tk(1)
.xx "" "" "tm: TM-11/TU-10 magtape interface." "" tm(4)
.xx "" "tm:" "TM-11/TU-10 magtape interface." "" tm(4)
.xx "" "popen, pclose: initiate I/O" "to/from a process." "" popen(3S)
.xx "" "tsort:" "topological sort." "" tsort(1)
.xx "" "" "touch: update date last modified of a file." "" touch(1)
.xx "" "" "tp: DEC/mag tape formats." "" tp(5)
.xx "" "" "tp: manipulate tape archive." "" tp(1)
.xx "" "" "tr: translate characters." "" tr(1)
.xx "" "ptrace: process" "trace." "" ptrace(2)
.xx "" "tr:" "translate characters." "" tr(1)
.xx "" "login, newgrp, read, readonly, set, shift, times," "trap, umask, wait: command language." "/exit, export," sh(1)
.xx "" "sin, cos, tan, asin, acos, atan, atan2:" "trigonometric functions." "" sin(3M)
.xx "" "tbl: format tables for nroff or" "troff." "" tbl(1)
.xx "" "" "troff, nroff: text formatting and typesetting." "" troff(1)
.xx "" "deroff: remove nroff," "troff, tbl and eqn constructs." "" deroff(1)
.xx "" "" "true, false: provide truth values." "" true(1)
.xx "" "true, false: provide" "truth values." "" true(1)
.xx "" "" "tsort: topological sort." "" tsort(1)
.xx "" "" "tty: general terminal interface." "" tty(4)
.xx "" "" "tty: get terminal name." "" tty(1)
.xx "" "greek: graphics for extended" "TTY-37 type-box." "" greek(7)
.xx "" "" "ttyname, isatty, ttyslot: find name of a terminal." "" ttyname(3)
.xx "" "" "ttys: terminal initialization data." "" ttys(5)
.xx "" "ttyname, isatty," "ttyslot: find name of a terminal." "" ttyname(3)
.xx "" "file: determine file" "type." "" file(1)
.xx "" "greek: graphics for extended TTY-37" "type-box." "" greek(7)
.xx "" "types: primitive system data" "types." "" types(5)
.xx "" "" "types: primitive system data types." "" types(5)
.xx "" "man: macros to" "typeset manual." "" man(7)
.xx "" "eqn, neqn, checkeq:" "typeset mathematics." "" eqn(1)
.xx "" "troff, nroff: text formatting and" "typesetting." "" troff(1)
.xx "" "getpw: get name from" "UID." "" getpw(3)
.xx "" "" "umask: set file creation mode mask." "" umask(2)
.xx "" "newgrp, read, readonly, set, shift, times, trap," "umask, wait: command language." "/export, login," sh(1)
.xx "" "mount," "umount: mount and dismount file system." "" mount(1M)
.xx "" "mount," "umount: mount or remove file system." "" mount(2)
.xx "" "" "ungetc: push character back into input stream." "" ungetc(3S)
.xx "" "" "uniq: report repeated lines in a file." "" uniq(1)
.xx "" "mktemp: make a" "unique file name." "" mktemp(3)
.xx "" "" "units: conversion program." "" units(1)
.xx "" "cu: call" "UNIX." "" cu(1C)
.xx "" "learn: computer aided instruction about" "UNIX." "" learn(1)
.xx "" "boot procedures:" "UNIX/32V startup." "" bproc(8)
.xx "tape." "sysgen:" "UNIX/32V system generation from the distribution" "" sysgen(8)
.xx "" "rm, rmdir: remove" "(unlink) files." "" rm(1)
.xx "" "" "unlink: remove directory entry." "" unlink(2)
.xx "" "touch:" "update date last modified of a file." "" touch(1)
.xx "" "" "update: periodically update the super block." "" update(8)
.xx "" "sync:" "update super-block." "" sync(2)
.xx "" "sync:" "update the super block." "" sync(1M)
.xx "" "update: periodically" "update the super block." "" update(8)
.xx "" "du: summarize disk" "usage." "" du(1)
.xx "" "write: write to another" "user." "" write(1)
.xx "" "setuid, setgid: set" "user and group ID." "" setuid(2)
.xx "" "getuid, getgid, geteuid, getegid: get" "user and group identity." "" getuid(2)
.xx "" "environ:" "user environment." "" environ(5)
.xx "" "su: substitute" "user id temporarily." "" su(1)
.xx "" "uulog: uucp" "user log inquiry." "" uulog(1C)
.xx "" "wtmp:" "user login history." "" wtmp(5)
.xx "" "mail: send or receive mail among" "users." "" mail(1)
.xx "" "wall: write to all" "users." "" wall(1M)
.xx "" "" "utime: set file times." "" utime(2)
.xx "" "" "utmp, wtmp: login records." "" utmp(5)
.xx "" "uulog:" "uucp user log inquiry." "" uulog(1C)
.xx "" "" "uucp, uulog: unix to unix copy." "" uucp(1C)
.xx "" "" "uudiff: directory comparison between machines." "" uudiff(1C)
.xx "" "uucp," "uulog: unix to unix copy." "" uucp(1C)
.xx "" "" "uulog: uucp user log inquiry." "" uulog(1C)
.xx "" "" "uux: unix to unix command execution." "" uux(1C)
.xx "" "abs: integer absolute" "value." "" abs(3)
.xx "" "fabs, floor, ceil: absolute" "value, floor, ceiling functions." "" floor(3M)
.xx "" "getenv:" "value for environment name." "" getenv(3)
.xx "" "true, false: provide truth" "values." "" true(1)
.xx "" "assert: program" "verification." "" assert(3x)
.xx "" "lint: a C program" "verifier." "" lint(1)
.xx "" "vp:" "Versatec printer-plotter." "" vp(4)
.xx "" "filsys, flblk, ino: format of file system" "volume." "" filsys(5)
.xx "" "" "vp: Versatec printer-plotter." "" vp(4)
.xx "" "lpr," "vpr: line printer spooler." "" lpr(1)
.xx "" "" "wait: await completion of process." "" wait(1)
.xx "" "read, readonly, set, shift, times, trap, umask," "wait: command language." "/export, login, newgrp," sh(1)
.xx "" "wait:" "wait for process to terminate." "" wait(2)
.xx "" "" "wait: wait for process to terminate." "" wait(2)
.xx "" "" "wall: write to all users." "" wall(1M)
.xx "" "" "wc: word count." "" wc(1)
.xx "exec, exit, export, login,/" "sh, for, case, if," "while, \fB:\fP, \fB.\fP, break, continue, cd, eval," "" sh(1)
.xx "" "hangman: guess the" "word." "" hangman(6)
.xx "" "cd: change" "working directory." "" cd(1)
.xx "" "pwd:" "working directory name." "" pwd(1)
.xx "" "write:" "write on a file." "" write(2)
.xx "" "wall:" "write to all users." "" wall(1M)
.xx "" "write:" "write to another user." "" write(1)
.xx "" "" "write: write on a file." "" write(2)
.xx "" "" "write: write to another user." "" write(1)
.xx "" "open: open for reading or" "writing." "" open(2)
.xx "" "utmp," "wtmp: login records." "" utmp(5)
.xx "" "" "wtmp: user login history." "" wtmp(5)
.xx "" "" "wump: the game of hunt-the-wumpus." "" wump(6)
.xx "" "xsend," "xget, enroll: secret mail." "" xsend(1)
.xx "" "" "xsend, xget, enroll: secret mail." "" xsend(1)
.xx "" "j0, j1, jn," "y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0, j1, jn, y0," "y1, yn: bessel functions." "" j0(3M)
.xx "" "" "yacc: yet another compiler-compiler." "" yacc(1)
.xx "" "j0, j1, jn, y0, y1," "yn: bessel functions." "" j0(3M)
