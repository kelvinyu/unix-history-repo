.xx "" "" "@: arithmetic on shell variables." "" csh(1)
.xx "" "re_format: POSIX" "1003.2 regular expressions." "" re_format(7)
.xx "" "mset: retrieve ASCII to IBM" "3270 keyboard map." "" mset(1)
.xx "" "database for mapping ascii keystrokes into IBM" "3270 keys." "map3270:" map3270(5)
.xx "" "diff3:" "3-way differential file comparison." "" diff3(1)
.xx "" "sendbug: mail a system bug report to" "4bsd-bugs." "" sendbug(1)
.xx "" "copysign, drem, finite, logb, scalb: IEEE" "754 floating point support." "" ieee(3)
.xx "" "le: AMD" "7990 LANCE ethernet interface." "" le(4)
.xx "" "le: HP AMD" "7990 LANCE Ethernet interface." "" le(4)
.xx "" "toascii: convert a byte to" "7-bit ASCII." "" toascii(3)
.xx "" "cgthree:" "8-bit color frame buffer." "" cgthree(4)
.xx "" "\&tc: HP98544" "98550 ``Topcat'' and ``Catseye'' device interface." "" tc(4)
.xx "" "dcl: HP" "98628A communications link." "" dcl(4)
.xx "" "dcm: HP" "98642A communications multiplexer." "" dcm(4)
.xx "" "dca: HP" "98644A communications interface." "" dca(4)
.xx "" "timezone: return the timezone" "abbreviation." "" timezone(3)
.xx "" "abort: cause" "abnormal program termination." "" abort(3)
.xx "" "" "abort: cause abnormal program termination." "" abort(3)
.xx "" "" "abs: integer absolute value function." "" abs(3)
.xx "" "abs: integer" "absolute value function." "" abs(3)
.xx "" "fabs: floating-point" "absolute value function." "" fabs(3)
.xx "" "hypot, cabs: euclidean distance and complex" "absolute value functions." "" hypot(3)
.xx "" "labs: return the" "absolute value of a long integer." "" labs(3)
.xx "" "" "ac: display connect time accounting." "" ac(8)
.xx "" "accept:" "accept a connection on a socket." "" accept(2)
.xx "" "" "accept: accept a connection on a socket." "" accept(2)
.xx "" "kvm_close: initialize kernel virtual memory" "access." "kvm_open, kvm_openfiles," kvm_open(3)
.xx "" "address specification routines for link level" "access." "link_addr, link_ntoa: elementary" link_addr(3)
.xx "" "address specification routines for link level" "access." "link_addr, link_ntoa: elementary" linkaddr(3)
.xx "" "revoke: revoke file" "access." "" revoke(2)
.xx "" "invert, lookup: create and" "access an inverted index." "" invert(1)
.xx "" "touch: change file" "access and modification times." "" touch(1)
.xx "" "utimes: set file" "access and modification times." "" utimes(2)
.xx "pathname." "" "access: check access permissions of a file or" "" access(2)
.xx "" "acl_add, acl_delete, acl_initialize:" "access control list routines." "/acl_exact_match," acl_check(3)
.xx "" "strfile, unstr: create a random" "access file for storing strings." "" strfile(8)
.xx "" "getgrouplist: calculate group" "access list." "" getgrouplist(3)
.xx "" "getgroups: get group" "access list." "" getgroups(2)
.xx "" "initgroups: initialize group" "access list." "" initgroups(3)
.xx "" "setgroups: set group" "access list." "" setgroups(2)
.xx "" "btree: btree database" "access method." "" btree(3)
.xx "" "hash: hash database" "access method." "" hash(3)
.xx "" "recno: record number database" "access method." "" recno(3)
.xx "" "dbopen: database" "access methods." "" dbopen(3)
.xx "" "access: check" "access permissions of a file or pathname." "" access(2)
.xx "" "cgetfirst, cgetnext, cgetclose: capability database" "access routines." "/cgetnum, cgetstr, cgetustr," getcap(3)
.xx "" "kvm_getprocs, kvm_getargv, kvm_getenvv:" "access user process state." "" kvm_getprocs(3)
.xx "" "strcoll: compare strings" "according to current collation." "" strcoll(3)
.xx "" "ac: display connect time" "accounting." "" ac(8)
.xx "" "acct: enable or disable process" "accounting." "" acct(2)
.xx "" "sa, accton: system" "accounting." "" sa(8)
.xx "" "acct: execution" "accounting file." "" acct(5)
.xx "" "pac: printer/plotter" "accounting information." "" pac(8)
.xx "" "" "acct: enable or disable process accounting." "" acct(2)
.xx "" "" "acct: execution accounting file." "" acct(5)
.xx "" "sa," "accton: system accounting." "" sa(8)
.xx "list routines." "/acl_check, acl_exact_match," "acl_add, acl_delete, acl_initialize: access control" "" acl_check(3)
.xx "acl_exact_match, acl_add, acl_delete,/" "" "acl_canonicalize_principal, acl_check," "" acl_check(3)
.xx "acl_initialize: access/" "acl_canonicalize_principal," "acl_check, acl_exact_match, acl_add, acl_delete," "" acl_check(3)
.xx "routines." "/acl_check, acl_exact_match, acl_add," "acl_delete, acl_initialize: access control list" "" acl_check(3)
.xx "" "acl_canonicalize_principal, acl_check," "acl_exact_match, acl_add, acl_delete,/" "" acl_check(3)
.xx "" "/acl_check, acl_exact_match, acl_add, acl_delete," "acl_initialize: access control list routines." "" acl_check(3)
.xx "" "" "acos: arc cosine function." "" acos(3)
.xx "" "" "acosh: inverse hyperbolic cosine function." "" acosh(3)
.xx "dialout." "" "acucntrl: turn around tty line between dialin and" "" acucntrl(8)
.xx "" "fortune: print a random, hopefully interesting," "adage." "" fortune(6)
.xx "" "" "adb: debugger." "" adb(1)
.xx "" "swapon:" "add a swap device for interleaved paging/swapping." "" swapon(2)
.xx "groff." "addftinfo:" "add information to troff font files for use with" "" addftinfo(1)
.xx "" "chpass:" "add or change user database information." "" chpass(1)
.xx "use with groff." "" "addftinfo: add information to troff font files for" "" addftinfo(1)
.xx "" "adduser: procedure for" "adding new users." "" adduser(8)
.xx "" "swapon: specify" "additional device for paging and swapping." "" swapon(8)
.xx "" "/krb_get_krbhst, krb_get_admhst, krb_get_lrealm:" "additional Kerberos utility routines." "" krb_realmofhost(3)
.xx "" "ns_addr, ns_ntoa: Xerox NS Ns (tm)" "address conversion routines." "" ns(3)
.xx "" "iso_addr, iso_ntoa: elementary network" "address conversion routines for Open System/" "" iso_addr(3)
.xx "" "inet_makeaddr, inet_lnaof, inet_netof: Internet" "address manipulation routines." "/inet_ntoa," inet(3)
.xx "" "arp:" "address resolution display and control." "" arp(8)
.xx "access." "link_addr, link_ntoa: elementary" "address specification routines for link level" "" link_addr(3)
.xx "access." "link_addr, link_ntoa: elementary" "address specification routines for link level" "" linkaddr(3)
.xx "" "mailaddr: mail" "addressing description." "" mailaddr(7)
.xx "" "" "adduser: procedure for adding new users." "" adduser(8)
.xx "" "swab: swap" "adjacent bytes." "" swab(3)
.xx "of the system clock." "" "adjtime: correct the time to allow synchronization" "" adjtime(2)
.xx "" "" "adventure: an exploration game." "" adventure(6)
.xx "" "battlestar: a tropical" "adventure game." "" battlestar(6)
.xx "" "madvise: give" "advise about use of memory." "" madvise(2)
.xx "" "mincore: get" "advise about use of memory." "" mincore(2)
.xx "" "flock: apply or remove an" "advisory lock on an open file." "" flock(2)
.xx "" "yes: be repetitively" "affirmative." "" yes(1)
.xx "\-Tps." "" "afmtodit: create font files for use with groff" "" afmtodit(1)
.xx "" "named-xfer: ancillary" "agent for inbound zone transfers." "" named-xfer(8)
.xx "" "learn: computer" "aided instruction about." "" learn(1)
.xx "" "atc:" "air traffic controller game." "" atc(6)
.xx "" "alarm: set signal timer" "alarm." "" alarm(3)
.xx "" "" "alarm: set signal timer alarm." "" alarm(3)
.xx "" "L.aliases: UUCP hostname" "alias file." "" L.aliases(5)
.xx "" "" "alias: shell macros." "" csh(1)
.xx "" "unalias: remove" "aliases." "" csh(1)
.xx "" "" "aliases: aliases file for sendmail." "" aliases(5)
.xx "" "which: locate a program file including" "aliases and paths." "" which(1)
.xx "" "newaliases: rebuild the data base for the mail" "aliases file." "" newaliases(1)
.xx "" "aliases:" "aliases file for sendmail." "" aliases(5)
.xx "" "L." "aliases: UUCP hostname alias file." "" L.aliases(5)
.xx "" "valloc:" "aligned memory allocation function." "" valloc(3)
.xx "" "malloc, free, realloc, calloc," "alloca: general memory allocation operations." "" memory(3)
.xx "" "" "alloca: memory allocator." "" alloca(3)
.xx "" "calloc:" "allocate clean memory (zero initialized space)." "" calloc(3)
.xx "" "free: free up memory" "allocated with malloc, calloc or realloc." "" free(3)
.xx "" "malloc,: general memory" "allocation function." "" malloc(3)
.xx "" "valloc: aligned memory" "allocation function." "" valloc(3)
.xx "" "free, realloc, calloc, alloca: general memory" "allocation operations." "malloc," memory(3)
.xx "" "alloca: memory" "allocator." "" alloca(3)
.xx "" "isalpha:" "alphabetic character test." "" isalpha(3)
.xx "" "isalnum:" "alphanumeric character test." "" isalnum(3)
.xx "" "scandir," "alphasort: scan a directory." "" scandir(3)
.xx "" "limit:" "alter per-process resource limitations." "" csh(1)
.xx "" "renice:" "alter priority of running processes." "" renice(8)
.xx "" "else:" "alternative commands." "" csh(1)
.xx "" "mk-amd-map: create database maps for" "Amd." "" mk-amd-map(8)
.xx "" "le:" "AMD 7990 LANCE ethernet interface." "" le(4)
.xx "" "le: HP" "AMD 7990 LANCE Ethernet interface." "" le(4)
.xx "" "" "amd: automatically mount file systems." "" amd(8)
.xx "" "" "amq: automounter query tool." "" amq(8)
.xx "" "error:" "analyze and disperse compiler error messages." "" error(1)
.xx "" "style:" "analyze surface characteristics of a document." "" style(1)
.xx "" "lex: fast lexical" "analyzer generator." "" lex(1)
.xx "" "named-xfer:" "ancillary agent for inbound zone transfers." "" named-xfer(8)
.xx "" "worms:" "animate worms on a display terminal." "" worms(6)
.xx "" "rain:" "animated raindrops display." "" rain(6)
.xx "" "ansitape:" "ANSI standard tape handler." "" ansitape(1)
.xx "" "" "ansitape: ANSI standard tape handler." "" ansitape(1)
.xx "" "sticky: sticky text and" "append-only directories." "" sticky(8)
.xx "" "apply:" "apply a command to a set of arguments." "" apply(1)
.xx "" "" "apply: apply a command to a set of arguments." "" apply(1)
.xx "" "flock:" "apply or remove an advisory lock on an open file." "" flock(2)
.xx "" "patch: a program for" "applying a diff file to an original." "" patch(1)
.xx "" "" "apropos: locate commands by keyword lookup." "" apropos(1)
.xx "" "" "ar: archive (library) file format." "" ar.5(5)
.xx "" "" "ar: create and maintain library archives." "" ar(1)
.xx "" "number: convert" "Arabic numerals to English." "" number(6)
.xx "calculator." "\&bc:" "arbitrary-precision arithmetic language and" "" bc(1)
.xx "" "acos:" "arc cosine function." "" acos(3)
.xx "graphics/" "plot: openpl, erase, label, line, circle," "arc, move, cont, point, linemod, space, closepl:" "" plot(3)
.xx "" "asin:" "arc sine function." "" asin(3)
.xx "" "atan:" "arc tangent function of one variable." "" atan(3)
.xx "" "atan2:" "arc tangent function of two variables." "" atan2(3)
.xx "" "tar: tape" "archive file format." "" tarformat(5)
.xx "" "ranlib: table-of-contents for" "archive libraries." "" ranlib(1)
.xx "" "ar:" "archive (library) file format." "" ar.5(5)
.xx "" "ranlib:" "archive (library) table-of-contents format." "" ranlib.5(5)
.xx "" "shar: create a shell" "archive of files." "" shar(1)
.xx "" "tar: tape" "archiver." "" tar(1)
.xx "" "ar: create and maintain library" "archives." "" ar(1)
.xx "" "pax: read and write file" "archives and copy directory hierarchies." "" pax(1)
.xx "" "getsubopt: get sub options from an" "argument." "" getsubopt(3)
.xx "" "glob: filename expand" "argument list." "" csh(1)
.xx "" "shift: manipulate" "argument list." "" csh(1)
.xx "" "getopt: get option character from command line" "argument list." "" getopt(3)
.xx "" "stdarg: variable" "argument lists." "" stdarg(3)
.xx "" "xargs: construct" "argument list(s) and execute utility." "" xargs(1)
.xx "" "apply: apply a command to a set of" "arguments." "" apply(1)
.xx "" "echo: echo" "arguments." "" csh(1)
.xx "" "expr: evaluate" "arguments as an expression." "" expr(1)
.xx "" "arithmetic: quiz on simple" "arithmetic." "" arithmetic(6)
.xx "" "omout, pow, rpow, sdiv,: multiple precision integer" "arithmetic." "/mout, move, msqrt, msub, mult, omin," mp(3)
.xx "" "\&bc: arbitrary-precision" "arithmetic language and calculator." "" bc(1)
.xx "" "@:" "arithmetic on shell variables." "" csh(1)
.xx "" "" "arithmetic: quiz on simple arithmetic." "" arithmetic(6)
.xx "" "acucntrl: turn" "around tty line between dialin and dialout." "" acucntrl(8)
.xx "" "" "arp: address resolution display and control." "" arp(8)
.xx "" "ftp:" "ARPANET file transfer program." "" ftp(1)
.xx "" "rs: reshape a data" "array." "" rs(1)
.xx "" "biff: be notified if mail" "arrives and who it is from." "" biff(1)
.xx "" "expr: evaluate arguments" "as an expression." "" expr(1)
.xx "" "slattach: attach serial lines" "as network interfaces." "" slattach(8)
.xx "" "bcd, ppt, morse: reformat input" "as punch cards, paper tape or morse code." "" bcd(6)
.xx "" "mktime: transform binary date and time value to" "ASCII." "/ctime, difftime, gmtime, localtime," ctime(3)
.xx "" "translate a PostScript font in .pfb format to" "ASCII." "pfbtops:" pfbtops(1)
.xx "" "toascii: convert a byte to 7-bit" "ASCII." "" toascii(3)
.xx "" "isascii: test for" "ASCII character." "" isascii(3)
.xx "" "ascii: octal, hexadecimal and decimal" "ASCII character sets." "" ascii(7)
.xx "" "hexdump:" "ascii, decimal, hexadecimal, octal dump." "" hexdump(1)
.xx "" "od: octal, decimal, hex," "ascii dump." "" od(1)
.xx "" "map3270: database for mapping" "ascii keystrokes into IBM 3270 keys." "" map3270(5)
.xx "character sets." "" "ascii: octal, hexadecimal and decimal ASCII" "" ascii(7)
.xx "" "atof: convert" "ASCII string to double." "" atof(3)
.xx "" "strtod: convert" "ASCII string to double." "" strtod(3)
.xx "" "atoi: convert" "ASCII string to integer." "" atoi(3)
.xx "" "atol: convert" "ASCII string to long integer." "" atol(3)
.xx "" "mset: retrieve" "ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "mktime: transform binary date and time value to/" "" "asctime, ctime, difftime, gmtime, localtime," "" ctime(3)
.xx "" "" "asin: arc sine function." "" asin(3)
.xx "" "" "asinh: inverse hyperbolic sine function." "" asinh(3)
.xx "" "" "assert: expression verification macro." "" assert(3)
.xx "" "ttyname, isatty, ttyslot: get name of" "associated terminal (tty) from file descriptor." "" ttyname(3)
.xx "" "pig: eformatray inputway" "asway Igpay Atinlay." "" pig(6)
.xx "" "nfsiod: local NFS" "asynchronous I/O server." "" nfsiod(8)
.xx "" "at: schedule execution of commands" "`at' a given time." "" at(1)
.xx "" "shutdown: close down the system" "at a given time." "" shutdown(8)
.xx "" "nice: execute a command" "at a low scheduling priority." "" nice(1)
.xx "time." "" "at: schedule execution of commands `at' a given" "" at(1)
.xx "" "atrm: remove jobs spooled by" "at(1)." "" atrm(1)
.xx "" "atq: display the" "at(1) job queue." "" atq(1)
.xx "" "" "atan: arc tangent function of one variable." "" atan(3)
.xx "" "" "atan2: arc tangent function of two variables." "" atan2(3)
.xx "" "" "atanh: inverse hyperbolic tangent function." "" atanh(3)
.xx "" "" "atc: air traffic controller game." "" atc(6)
.xx "" "" "atexit: register a function to be called on exit." "" atexit(3)
.xx "" "pig: eformatray inputway asway Igpay" "Atinlay." "" pig(6)
.xx "" "" "atof: convert ASCII string to double." "" atof(3)
.xx "" "" "atoi: convert ASCII string to integer." "" atoi(3)
.xx "" "" "atol: convert ASCII string to long integer." "" atol(3)
.xx "interrupt." "sigpause:" "atomically release blocked signals and wait for" "" sigpause(2)
.xx "interrupt." "sigsuspend:" "atomically release blocked signals and wait for" "" sigsuspend(2)
.xx "" "" "atq: display the at(1) job queue." "" atq(1)
.xx "" "" "atrm: remove jobs spooled by at(1)." "" atrm(1)
.xx "" "sliplogin:" "attach a serial line network interface." "" sliplogin(8)
.xx "" "slattach:" "attach serial lines as network interfaces." "" slattach(8)
.xx "" "rcs: change RCS file" "attributes." "" rcs(1)
.xx "" "krb_mk_err, krb_rd_err, krb_ck_repl: Kerberos" "authentication library." "/krb_mk_safe, krb_rd_safe," krb(3)
.xx "" "/krb_net_read: Kerberos routines for sending" "authentication via network stream sockets." "" krb_sendauth(3)
.xx "code." "" "autoconf: diagnostics from the autoconfiguration" "" autoconf(4)
.xx "" "autoconf: diagnostics from the" "autoconfiguration code." "" autoconf(4)
.xx "" "bugfiler: file bug reports in folders" "automatically." "" bugfiler(8)
.xx "" "amd:" "automatically mount file systems." "" amd(8)
.xx "" "amq:" "automounter query tool." "" amq(8)
.xx "" "rc: command script for" "auto\-reboot and daemons." "" rc(8)
.xx "" "getloadavg: get system load" "averages." "" getloadavg(3)
.xx "" "wait:" "await process completion." "" wait(1)
.xx "" "" "awk: pattern scanning and processing language." "" awk(1)
.xx "" "huntd: hunt daemon," "back-end for hunt game." "" huntd(6)
.xx "" "backgammon: the game of" "backgammon." "" backgammon(6)
.xx "" "" "backgammon: the game of backgammon." "" backgammon(6)
.xx "" "bg: place job in" "background." "" csh(1)
.xx "" "daemon: run in the" "background." "" daemon(3)
.xx "" "wait: wait for" "background processes to complete." "" csh(1)
.xx "" "dump: filesystem" "backup." "" dump(8)
.xx "" "restore: restore files or file systems from" "backups made with dump." "" restore(8)
.xx "" "rand, srand:" "bad random number generator." "" rand(3)
.xx "" "bad144: read/write dec standard 144" "bad sector information." "" bad144(8)
.xx "" "badsect: create files to contain" "bad sectors." "" badsect(8)
.xx "information." "" "bad144: read/write dec standard 144 bad sector" "" bad144(8)
.xx "" "" "badsect: create files to contain bad sectors." "" badsect(8)
.xx "" "banner: print large" "banner on printer." "" banner(6)
.xx "" "" "banner: print large banner on printer." "" banner(6)
.xx "" "gettytab: terminal configuration data" "base." "" gettytab(5)
.xx "" "hosts: host name data" "base." "" hosts(5)
.xx "" "networks: network name data" "base." "" networks(5)
.xx "" "phones: remote host phone number data" "base." "" phones(5)
.xx "" "printcap: printer capability data" "base." "" printcap(5)
.xx "" "protocols: protocol name data" "base." "" protocols(5)
.xx "" "rpc: rpc program number data" "base." "" rpc(5)
.xx "" "services: service name data" "base." "" services(5)
.xx "" "termcap: terminal capability data" "base." "" termcap(5)
.xx "" "newaliases: rebuild the data" "base for the mail aliases file." "" newaliases(1)
.xx "" "vgrindefs: language definition data" "base for vgrind(1)." "" vgrindefs(5)
.xx "" "\&vi, view: screen oriented (visual) display editor" "based on ex." "" vi(1)
.xx "portion of pathname." "" "basename, dirname: return filename or directory" "" basename(1)
.xx "" "" "battlestar: a tropical adventure game." "" battlestar(6)
.xx "calculator." "" "\&bc: arbitrary-precision arithmetic language and" "" bc(1)
.xx "paper tape or morse code." "" "bcd, ppt, morse: reformat input as punch cards," "" bcd(6)
.xx "memcpy, memmove, memset: byte string operations." "" "bcmp, bcopy, bzero, memccpy, memchr, memcmp," "" bstring(3)
.xx "" "" "bcmp: compare byte string." "" bcmp(3)
.xx "memmove, memset: byte string operations." "bcmp," "bcopy, bzero, memccpy, memchr, memcmp, memcpy," "" bstring(3)
.xx "" "" "bcopy: copy byte string." "" bcopy(3)
.xx "Standard." "" "bdes: encrypt/decrypt using the Data Encryption" "" bdes(1)
.xx "" "look: display lines" "beginning with a given string." "" look(1)
.xx "" "j0, j1, jn, y0, y1, yn:" "bessel functions of first and second kind." "" j0(3)
.xx "changing/" "random, srandom, initstate, setstate:" "better random number generator; routines for" "" random(3)
.xx "" "" "bg: place job in background." "" csh(1)
.xx "formatter." "" "bib, listrefs, bibinc, bib2tib: bibliographic" "" bib(1)
.xx "" "bib, listrefs, bibinc," "bib2tib: bibliographic formatter." "" bib(1)
.xx "" "bib, listrefs," "bibinc, bib2tib: bibliographic formatter." "" bib(1)
.xx "" "@g@indxbib: make inverted index for" "bibliographic databases." "" indxbib(1)
.xx "" "lkbib: search" "bibliographic databases." "" lkbib(1)
.xx "" "@g@lookbib: search" "bibliographic databases." "" lookbib(1)
.xx "" "bib, listrefs, bibinc, bib2tib:" "bibliographic formatter." "" bib(1)
.xx "" "@g@refer: preprocess" "bibliographic references for groff." "" refer(1)
.xx "from." "" "biff: be notified if mail arrives and who it is" "" biff(1)
.xx "" "comsat:" "biff server." "" comsat(8)
.xx "" "install: install" "binaries." "" install(1)
.xx "" "difftime, gmtime, localtime, mktime: transform" "binary date and time value to ASCII." "/ctime," ctime(3)
.xx "" "uuencode, uudecode: encode/decode a" "binary file." "" uuencode(1)
.xx "" "a.out: format of executable" "binary files." "" a.out(5)
.xx "" "bsearch:" "binary search of a sorted table." "" bsearch(3)
.xx "" "fread, fwrite:" "binary stream input/output." "" fread(3)
.xx "" "bind:" "bind a name to a socket." "" bind(2)
.xx "" "" "bind: bind a name to a socket." "" bind(2)
.xx "" "ffs: find first" "bit set in a bit string." "" ffs(3)
.xx "" "ffs: find first bit set in a" "bit string." "" ffs(3)
.xx "bit_nclear, bit_nset, bit_set, bitstr_size,/" "" "bit_alloc, bit_clear, bit_decl, bit_ffs," "" bitstring(3)
.xx "bit_set, bitstr_size, bit_test:/" "bit_alloc," "bit_clear, bit_decl, bit_ffs, bit_nclear, bit_nset," "" bitstring(3)
.xx "bitstr_size, bit_test:/" "bit_alloc, bit_clear," "bit_decl, bit_ffs, bit_nclear, bit_nset, bit_set," "" bitstring(3)
.xx "bitstr_size,/" "bit_alloc, bit_clear, bit_decl," "bit_ffs, bit_nclear, bit_nset, bit_set," "" bitstring(3)
.xx "bit_test:/" "bit_alloc, bit_clear, bit_decl, bit_ffs," "bit_nclear, bit_nset, bit_set, bitstr_size," "" bitstring(3)
.xx "" "/bit_clear, bit_decl, bit_ffs, bit_nclear," "bit_nset, bit_set, bitstr_size, bit_test:/" "" bitstring(3)
.xx "" "/bit_clear, bit_decl, bit_ffs, bit_nclear, bit_nset," "bit_set, bitstr_size, bit_test: bit-string/" "" bitstring(3)
.xx "" "bit_nset, bit_set, bitstr_size, bit_test:" "bit-string manipulation macros." "/bit_nclear," bitstring(3)
.xx "" "/bit_decl, bit_ffs, bit_nclear, bit_nset, bit_set," "bitstr_size, bit_test: bit-string manipulation/" "" bitstring(3)
.xx "" "bit_nclear, bit_nset, bit_set, bitstr_size," "bit_test: bit-string manipulation macros." "/bit_ffs," bitstring(3)
.xx "" "cksum: display file checksums and" "block counts." "" cksum(1)
.xx "" "sum: calculate file checksums and" "block counts." "" sum(1)
.xx "" "sync: synchronize disk" "block in-core status with that on disk." "" sync(2)
.xx "" "sigblock:" "block signals." "" sigblock(2)
.xx "" "getbsize: get user" "block size." "" getbsize(3)
.xx "" "quot: display total" "block usage per user for a file system." "" quot(8)
.xx "" "sigpause: atomically release" "blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "sigsuspend: atomically release" "blocked signals and wait for interrupt." "" sigsuspend(2)
.xx "" "" "boggle: word search game." "" boggle(6)
.xx "" "ching: the" "book of changes and other cookies." "" ching(6)
.xx "" "rbootd: HP remote" "boot server." "" rbootd(8)
.xx "" "" "boot: system bootstrapping procedures." "" boot_hp300(8)
.xx "" "boot: system" "bootstrapping procedures." "" boot_hp300(8)
.xx "" "end, etext, edata: end" "boundaries of image segments." "" end(3)
.xx "" "psbb: extract" "bounding box from PostScript document." "" psbb(1)
.xx "" "mille: play Mille" "Bournes." "" mille(6)
.xx "" "psbb: extract bounding" "box from PostScript document." "" psbb(1)
.xx "" "switch: multi-way command" "branch." "" csh(1)
.xx "" "" "break: exit while/foreach loop." "" csh(1)
.xx "" "" "breaksw: exit from switch." "" csh(1)
.xx "" "fg:" "bring job into foreground." "" csh(1)
.xx "" "" "brk, sbrk: change data segment size." "" brk(2)
.xx "" "" "bsearch: binary search of a sorted table." "" bsearch(3)
.xx "" "display object file segment sizes (text, data and" "bss)." "size:" size(1)
.xx "" "" "btree: btree database access method." "" btree(3)
.xx "" "btree:" "btree database access method." "" btree(3)
.xx "" "bwtwo: monochromatic frame" "buffer." "" bwtwo(4)
.xx "" "cgthree: 8-bit color frame" "buffer." "" cgthree(4)
.xx "" "dmesg: display the system message" "buffer." "" dmesg(8)
.xx "" "grf: HP graphics frame" "buffer device interface." "" grf(4)
.xx "" "mpool: shared memory" "buffer pool." "" mpool(3)
.xx "" "setbuf, setbuffer, setlinebuf, setvbuf: stream" "buffering operations." "" setbuf(3)
.xx "" "generate a dump of the operating system's profile" "buffers." "kgmon:" kgmon(8)
.xx "" "sendbug: mail a system" "bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "bugfiler: file" "bug reports in folders automatically." "" bugfiler(8)
.xx "automatically." "" "bugfiler: file bug reports in folders" "" bugfiler(8)
.xx "" "mknod:" "build special file." "" mknod(8)
.xx "" "config:" "build system configuration files." "" config(8)
.xx "" "" "bwtwo: monochromatic frame buffer." "" bwtwo(4)
.xx "" "wc: word, line, and" "byte count." "" wc(1)
.xx "" "memchr: locate" "byte in byte string." "" memchr(3)
.xx "" "ntohs: convert values between host and network" "byte order." "htonl, htons, ntohl," byteorder(3)
.xx "" "bcmp: compare" "byte string." "" bcmp(3)
.xx "" "bcopy: copy" "byte string." "" bcopy(3)
.xx "" "bzero: write zeroes to a" "byte string." "" bzero(3)
.xx "" "memchr: locate byte in" "byte string." "" memchr(3)
.xx "" "memcmp: compare" "byte string." "" memcmp(3)
.xx "" "memcpy: copy" "byte string." "" memcpy(3)
.xx "" "memmove: copy" "byte string." "" memmove(3)
.xx "" "memset: write a byte to" "byte string." "" memset(3)
.xx "" "memccpy, memchr, memcmp, memcpy, memmove, memset:" "byte string operations." "bcmp, bcopy, bzero," bstring(3)
.xx "" "toascii: convert a" "byte to 7-bit ASCII." "" toascii(3)
.xx "" "memset: write a" "byte to byte string." "" memset(3)
.xx "" "swab: swap adjacent" "bytes." "" swab(3)
.xx "memset: byte string operations." "bcmp, bcopy," "bzero, memccpy, memchr, memcmp, memcpy, memmove," "" bstring(3)
.xx "" "" "bzero: write zeroes to a byte string." "" bzero(3)
.xx "" "mbrune, mbrrune, mbmb: multibyte rune support for" "C." "" mbrune(3)
.xx "" "wcstombs, wctomb: multibyte character support for" "C." "mblen, mbstowcs, mbtowc," multibyte(3)
.xx "" "sgetrune, sputrune: rune support for" "C." "setrunelocale, setinvalidrune," rune(3)
.xx "" "localeconv: natural language formatting for" "C." "setlocale," setlocale(3)
.xx "" "yyfix: extract tables from y.tab." "c." "" yyfix(1)
.xx "" "cc, g++: GNU project" "C and C++ Compiler (v2 preliminary)." "" cc(1)
.xx "" "cc, g++: GNU project C and" "C++ Compiler (v2 preliminary)." "" cc(1)
.xx "" "g++: GNU project" "C++ Compiler (v2 preliminary)." "" g++(1)
.xx "" "intro: introduction to the" "C libraries." "" intro(3)
.xx "" "operator:" "C operator precedence and order of evaluation." "" operator(7)
.xx "" "indent: indent and format" "C program source." "" indent(1)
.xx "" "xstr: extract strings from" "C programs to implement shared strings." "" xstr(1)
.xx "" "mkstr: create an error message file by massaging" "C source." "" mkstr(1)
.xx "functions." "hypot," "cabs: euclidean distance and complex absolute value" "" hypot(3)
.xx "" "force completion of pending disk writes (flush" "cache)." "sync:" sync(8)
.xx "" "krb_set_tkt_string: set Kerberos ticket" "cache file name." "" krb_set_tkt_string(3)
.xx "" "pwcache:" "cache password and group entries." "" pwcache(3)
.xx "" "update: flush internal filesystem" "caches to disk frequently." "" update(8)
.xx "" "caesar: decrypt" "caesar cyphers." "" caesar(6)
.xx "" "" "caesar: decrypt caesar cyphers." "" caesar(6)
.xx "" "" "cal: displays a calendar." "" cal(1)
.xx "" "diskpart:" "calculate default disk partition sizes." "" diskpart(8)
.xx "" "sum:" "calculate file checksums and block counts." "" sum(1)
.xx "" "getgrouplist:" "calculate group access list." "" getgrouplist(3)
.xx "" "\&bc: arbitrary-precision arithmetic language and" "calculator." "" bc(1)
.xx "" "\&dc: desk" "calculator." "" dc(1)
.xx "" "cal: displays a" "calendar." "" cal(1)
.xx "" "" "calendar: reminder service." "" calendar(1)
.xx "" "syscall, __syscall: indirect system" "call." "" syscall(2)
.xx "" "gprof: display" "call graph profile data." "" gprof(1)
.xx "" "atexit: register a function to be" "called on exit." "" atexit(3)
.xx "" "_exit: terminate the" "calling process." "" _exit(2)
.xx "" "getpid, getppid: get parent or" "calling process identification." "" getpid(2)
.xx "operations." "malloc, free, realloc," "calloc, alloca: general memory allocation" "" memory(3)
.xx "space)." "" "calloc: allocate clean memory (zero initialized" "" calloc(3)
.xx "" "free: free up memory allocated with malloc," "calloc or realloc." "" free(3)
.xx "" "siginterrupt: allow signals to interrupt system" "calls." "" siginterrupt(3)
.xx "" "intro: introduction to system" "calls and error numbers." "" intro(2)
.xx "" "canfield, cfscores: the solitaire card game" "canfield." "" canfield(6)
.xx "canfield." "" "canfield, cfscores: the solitaire card game" "" canfield(6)
.xx "" "printcap: printer" "capability data base." "" printcap(5)
.xx "" "termcap: terminal" "capability data base." "" termcap(5)
.xx "" "cap_mkdb: create" "capability database." "" cap_mkdb(1)
.xx "" "cgetstr, cgetustr, cgetfirst, cgetnext, cgetclose:" "capability database access routines." "/cgetnum," getcap(3)
.xx "" "tput: terminal" "capability interface." "" tput(1)
.xx "" "" "cap_mkdb: create capability database." "" cap_mkdb(1)
.xx "" "canfield, cfscores: the solitaire" "card game canfield." "" canfield(6)
.xx "" "cribbage: the" "card game cribbage." "" cribbage(6)
.xx "" "bcd, ppt, morse: reformat input as punch" "cards, paper tape or morse code." "" bcd(6)
.xx "" "\&ct: CS/80" "cartridge tape interface." "" ct(4)
.xx "" "strcasecmp: compare strings, ignoring" "case." "" strcasecmp(3)
.xx "" "tolower: upper case to lower" "case letter conversion." "" tolower(3)
.xx "" "toupper: lower case to upper" "case letter conversion." "" toupper(3)
.xx "" "" "case: selector in switch." "" csh(1)
.xx "" "tolower: upper" "case to lower case letter conversion." "" tolower(3)
.xx "" "toupper: lower" "case to upper case letter conversion." "" toupper(3)
.xx "" "" "cat: concatenate and print files." "" cat(1)
.xx "" "uncompact, ccat: compress and uncompress files, and" "cat them." "compact," compact(1)
.xx "" "xneko:" "cat-and-mouse chase in an X window." "" xneko(6)
.xx "" "default:" "catchall clause in switch." "" csh(1)
.xx "" "\&tc: HP98544 98550 ``Topcat'' and" "``Catseye'' device interface." "" tc(4)
.xx "" "abort:" "cause abnormal program termination." "" abort(3)
.xx "" "named.reload:" "cause the name server to synchronize its database." "" named.reload(8)
.xx "" "wump: hunt the wumpus in an underground" "cave." "" wump(6)
.xx "" "larn: exploring the" "caverns of Larn." "" larn(6)
.xx "" "" "cbrt, sqrt: cube root and square root functions." "" sqrt(3)
.xx "preliminary)." "" "cc, g++: GNU project C and C++ Compiler (v2" "" cc(1)
.xx "" "compact, uncompact," "ccat: compress and uncompress files, and cat them." "" compact(1)
.xx "preprocessor." "" "cccp, cpp: the GNU C-compatible compiler" "" cpp(1)
.xx "" "cccp, cpp: the GNU" "C-compatible compiler preprocessor." "" cpp(1)
.xx "" "\&st:" "CCS SCSI tape driver." "" st(4)
.xx "" "" "cd: change directory." "" csh(1)
.xx "" "" "cd: change working directory." "" cd(1)
.xx "" "" "ceil: smallest integral value not greater than x." "" ceil(3)
.xx "" "service key files from Kerberos key distribution" "center database." "ext_srvtab: extract" ext_srvtab(8)
.xx "" "kdb_destroy: destroy Kerberos key distribution" "center database." "" kdb_destroy(8)
.xx "" "kdb_init: initialize Kerberos key distribution" "center database." "" kdb_init(8)
.xx "" "kdb_edit: Kerberos key distribution" "center database editing utility." "" kdb_edit(8)
.xx "" "kstash: stash Kerberos key distribution" "center database master key." "" kstash(8)
.xx "" "kdb_util: Kerberos key distribution" "center database utility." "" kdb_util(8)
.xx "cfsetspeed, cfmakeraw, tcgetattr, tcsetattr:/" "" "cfgetispeed, cfsetispeed, cfgetospeed, cfsetospeed," "" tcsetattr(3)
.xx "tcgetattr, tcsetattr:/" "cfgetispeed, cfsetispeed," "cfgetospeed, cfsetospeed, cfsetspeed, cfmakeraw," "" tcsetattr(3)
.xx "" "/cfsetispeed, cfgetospeed, cfsetospeed, cfsetspeed," "cfmakeraw, tcgetattr, tcsetattr: manipulating the/" "" tcsetattr(3)
.xx "" "canfield," "cfscores: the solitaire card game canfield." "" canfield(6)
.xx "cfmakeraw, tcgetattr, tcsetattr:/" "cfgetispeed," "cfsetispeed, cfgetospeed, cfsetospeed, cfsetspeed," "" tcsetattr(3)
.xx "tcsetattr:/" "cfgetispeed, cfsetispeed, cfgetospeed," "cfsetospeed, cfsetspeed, cfmakeraw, tcgetattr," "" tcsetattr(3)
.xx "" "cfgetispeed, cfsetispeed, cfgetospeed, cfsetospeed," "cfsetspeed, cfmakeraw, tcgetattr, tcsetattr:/" "" tcsetattr(3)
.xx "cgetnext, cgetclose:/" "cgetent, cgetset, cgetmatch," "cgetcap, cgetnum, cgetstr, cgetustr, cgetfirst," "" getcap(3)
.xx "" "/cgetnum, cgetstr, cgetustr, cgetfirst, cgetnext," "cgetclose: capability database access routines." "" getcap(3)
.xx "cgetstr, cgetustr, cgetfirst, cgetnext, cgetclose:/" "" "cgetent, cgetset, cgetmatch, cgetcap, cgetnum," "" getcap(3)
.xx "" "/cgetmatch, cgetcap, cgetnum, cgetstr, cgetustr," "cgetfirst, cgetnext, cgetclose: capability database/" "" getcap(3)
.xx "cgetfirst, cgetnext, cgetclose:/" "cgetent, cgetset," "cgetmatch, cgetcap, cgetnum, cgetstr, cgetustr," "" getcap(3)
.xx "" "/cgetcap, cgetnum, cgetstr, cgetustr, cgetfirst," "cgetnext, cgetclose: capability database access/" "" getcap(3)
.xx "cgetclose:/" "cgetent, cgetset, cgetmatch, cgetcap," "cgetnum, cgetstr, cgetustr, cgetfirst, cgetnext," "" getcap(3)
.xx "cgetustr, cgetfirst, cgetnext, cgetclose:/" "cgetent," "cgetset, cgetmatch, cgetcap, cgetnum, cgetstr," "" getcap(3)
.xx "" "cgetent, cgetset, cgetmatch, cgetcap, cgetnum," "cgetstr, cgetustr, cgetfirst, cgetnext, cgetclose:/" "" getcap(3)
.xx "" "cgetset, cgetmatch, cgetcap, cgetnum, cgetstr," "cgetustr, cgetfirst, cgetnext, cgetclose:/" "cgetent," getcap(3)
.xx "" "" "cgthree: 8-bit color frame buffer." "" cgthree(4)
.xx "" "chdir, fchdir:" "change current working directory." "" chdir(2)
.xx "" "brk, sbrk:" "change data segment size." "" brk(2)
.xx "" "cd:" "change directory." "" csh(1)
.xx "" "chdir:" "change directory." "" csh(1)
.xx "" "touch:" "change file access and modification times." "" touch(1)
.xx "" "chflags:" "change file flags." "" chflags(1)
.xx "" "chmod:" "change file modes." "" chmod(1)
.xx "" "chown:" "change file owner and group." "" chown(8)
.xx "" "chgrp:" "change group." "" chgrp(1)
.xx "" "chmod, fchmod:" "change mode of file." "" chmod(2)
.xx "" "umask:" "change or display file creation mask." "" csh(1)
.xx "" "chown, fchown:" "change owner and group of a file." "" chown(2)
.xx "" "rcs:" "change RCS file attributes." "" rcs(1)
.xx "" "chroot:" "change root directory." "" chroot(2)
.xx "" "chroot:" "change root directory." "" chroot(8)
.xx "" "rename:" "change the name of a file." "" rename(2)
.xx "" "chpass: add or" "change user database information." "" chpass(1)
.xx "" "set:" "change value of shell variable." "" csh(1)
.xx "" "cd:" "change working directory." "" cd(1)
.xx "" "chkey:" "change your encryption key." "" chkey(1)
.xx "" "ching: the book of" "changes and other cookies." "" ching(6)
.xx "" "kpasswdd: Kerberos password" "changing daemon." "" kpasswdd(8)
.xx "" "better random number generator; routines for" "changing generators." "/srandom, initstate, setstate:" random(3)
.xx "" "isascii: test for ASCII" "character." "" isascii(3)
.xx "" "isupper, isxdigit, toascii tolower, toupper,:" "character classification macros." "/ispunct, isspace," ctype(3)
.xx "" "eqnchar: special" "character definitions for eqn." "" eqnchar(7)
.xx "" "isgraph: printing character test (space" "character exculsive)." "" isgraph(3)
.xx "" "memccpy: copy string until" "character found." "" memccpy(3)
.xx "" "getopt: get option" "character from command line argument list." "" getopt(3)
.xx "" "ungetc: un-get" "character from input stream." "" ungetc(3)
.xx "" "index: locate" "character in string." "" index(3)
.xx "" "rindex: locate" "character in string." "" rindex(3)
.xx "" "strchr: locate" "character in string." "" strchr(3)
.xx "" "strrchr: locate" "character in string." "" strrchr(3)
.xx "" "isprint: printing character test (space" "character inclusive)." "" isprint(3)
.xx "" "groff_char: groff" "character names." "" groff_char(7)
.xx "" "fgetc, getc, getchar, getw: get next" "character or word from input stream." "" getc(3)
.xx "" "fputc, putc, putchar, putw: output a" "character or word to a stream." "" putc(3)
.xx "runes." "UTF2: Universal" "character set Transformation Format encoding of" "" utf2(4)
.xx "" "ascii: octal, hexadecimal and decimal ASCII" "character sets." "" ascii(7)
.xx "" "mbstowcs, mbtowc, wcstombs, wctomb: multibyte" "character support for C." "mblen," multibyte(3)
.xx "" "isalnum: alphanumeric" "character test." "" isalnum(3)
.xx "" "isalpha: alphabetic" "character test." "" isalpha(3)
.xx "" "isblank: space or tab" "character test." "" isblank(3)
.xx "" "iscntrl: control" "character test." "" iscntrl(3)
.xx "" "isdigit: decimal-digit" "character test." "" isdigit(3)
.xx "" "islower: lower-case" "character test." "" islower(3)
.xx "" "ispunct: punctuation" "character test." "" ispunct(3)
.xx "" "isspace: white-space" "character test." "" isspace(3)
.xx "" "isupper: upper-case" "character test." "" isupper(3)
.xx "" "isxdigit: hexadecimal-digit" "character test." "" isxdigit(3)
.xx "" "isgraph: printing" "character test (space character exculsive)." "" isgraph(3)
.xx "" "isprint: printing" "character test (space character inclusive)." "" isprint(3)
.xx "" "style: analyze surface" "characteristics of a document." "" style(1)
.xx "" "tr: translate" "characters." "" tr(1)
.xx "" "unvis, strunvis: decode a visual representation of" "characters." "" unvis(3)
.xx "" "vis: visually encode" "characters." "" vis(3)
.xx "" "vis: display non-printable" "characters in a visual format." "" vis(1)
.xx "" "strpbrk: locate multiple" "characters in string." "" strpbrk(3)
.xx "" "snake, snscore: display" "chase game." "" snake(6)
.xx "" "xneko: cat-and-mouse" "chase in an X window." "" xneko(6)
.xx "" "" "chdir: change directory." "" csh(1)
.xx "" "" "chdir, fchdir: change current working directory." "" chdir(2)
.xx "" "icheck: file system storage consistency" "check." "" icheck(8)
.xx "" "access:" "check access permissions of a file or pathname." "" access(2)
.xx "" "fsck: filesystem consistency" "check and interactive repair." "" fsck(8)
.xx "" "clearerr, feof, ferror, fileno:" "check and reset stream status." "" ferror(3)
.xx "" "ci:" "check in RCS revisions." "" ci(1)
.xx "" "checknr:" "check nroff/troff files." "" checknr(1)
.xx "" "co:" "check out RCS revisions." "" co(1)
.xx "" "rcsfreeze: freeze a configuration of sources" "checked in under RCS." "" rcsfreeze(1)
.xx "" "quotacheck: filesystem quota consistency" "checker." "" quotacheck(8)
.xx "" "fastboot, fasthalt: reboot/halt the system without" "checking the disks." "" fastboot(8)
.xx "" "" "checknr: check nroff/troff files." "" checknr(1)
.xx "" "cksum: display file" "checksums and block counts." "" cksum(1)
.xx "" "sum: calculate file" "checksums and block counts." "" sum(1)
.xx "" "chess: GNU" "chess." "" chess(6)
.xx "" "xchess: X" "chess display." "" xchess(1)
.xx "" "" "chess: GNU chess." "" chess(6)
.xx "" "" "chflags: change file flags." "" chflags(1)
.xx "" "" "chflags, fchflags: set file flags." "" chflags(2)
.xx "" "" "chgrp: change group." "" chgrp(1)
.xx "" "" "ching: the book of changes and other cookies." "" ching(6)
.xx "" "" "chkey: change your encryption key." "" chkey(1)
.xx "" "" "chmod: change file modes." "" chmod(1)
.xx "" "" "chmod, fchmod: change mode of file." "" chmod(2)
.xx "" "" "chown: change file owner and group." "" chown(8)
.xx "" "" "chown, fchown: change owner and group of a file." "" chown(2)
.xx "" "" "chpass: add or change user database information." "" chpass(1)
.xx "" "crontab:" "chronological services schedule file." "" crontab(5)
.xx "" "" "chroot: change root directory." "" chroot(2)
.xx "" "" "chroot: change root directory." "" chroot(8)
.xx "" "" "ci: check in RCS revisions." "" ci(1)
.xx "closepl:/" "plot: openpl, erase, label, line," "circle, arc, move, cont, point, linemod, space," "" plot(3)
.xx "" "" "cksum: display file checksums and block counts." "" cksum(1)
.xx "" "isxdigit, toascii tolower, toupper,: character" "classification macros." "/ispunct, isspace, isupper," ctype(3)
.xx "" "default: catchall" "clause in switch." "" csh(1)
.xx "" "calloc: allocate" "clean memory (zero initialized space)." "" calloc(3)
.xx "" "rcsclean:" "clean up working files." "" rcsclean(1)
.xx "" "uuclean: uucp spool directory" "clean-up." "" uuclean(8)
.xx "" "clri:" "clear i-node." "" clri(8)
.xx "stream status." "" "clearerr, feof, ferror, fileno: check and reset" "" ferror(3)
.xx "" "csh: a shell (command interpreter) with" "C-like syntax." "" csh(1)
.xx "" "" "clnp: Connectionless-Mode Network Protocol." "" clnp(4)
.xx "" "the time to allow synchronization of the system" "clock." "adjtime: correct" adjtime(2)
.xx "" "cron:" "clock daemon." "" cron(8)
.xx "" "" "clock: determine processor time used." "" clock(3)
.xx "" "fclose:" "close a stream." "" fclose(3)
.xx "" "" "close: delete a descriptor." "" close(2)
.xx "" "shutdown:" "close down the system at a given time." "" shutdown(8)
.xx "" "opendir, readdir, telldir, seekdir, rewinddir," "closedir, dirfd: directory operations." "" directory(3)
.xx "" "syslog, vsyslog, openlog," "closelog, setlogmask: control system log." "" syslog(3)
.xx "" "circle, arc, move, cont, point, linemod, space," "closepl: graphics interface." "/erase, label, line," plot(3)
.xx "" "" "clri: clear i-node." "" clri(8)
.xx "" "" "cltp: ISO Connectionless Transport Protocol." "" cltp(4)
.xx "" "L." "cmds: UUCP remote command permissions file." "" L.cmds(5)
.xx "" "" "cmp: compare two files." "" cmp(1)
.xx "" "" "co: check out RCS revisions." "" co(1)
.xx "" "xroach:" "cockroaches hide under your windows." "" xroach(6)
.xx "" "autoconf: diagnostics from the autoconfiguration" "code." "" autoconf(4)
.xx "" "reformat input as punch cards, paper tape or morse" "code." "bcd, ppt, morse:" bcd(6)
.xx "" "" "col: filter reverse line feeds from input." "" col(1)
.xx "" "" "colcrt: filter nroff output for CRT previewing." "" colcrt(1)
.xx "" "strcoll: compare strings according to current" "collation." "" strcoll(3)
.xx "" "lfs_cleanerd: garbage" "collect a log-structured file system." "" lfs_cleanerd(8)
.xx "" "cgthree: 8-bit" "color frame buffer." "" cgthree(4)
.xx "" "" "colrm: remove columns from a file." "" colrm(1)
.xx "" "" "column: columnate lists." "" column(1)
.xx "" "column:" "columnate lists." "" column(1)
.xx "" "colrm: remove" "columns from a file." "" colrm(1)
.xx "" "" "comm: select or reject lines common to two files." "" comm(1)
.xx "" "exec: overlay shell with specified" "command." "" csh(1)
.xx "" "time: time" "command." "" csh(1)
.xx "" "grog: guess options for groff" "command." "" grog(1)
.xx "" "routines for returning a stream to a remote" "command." "rcmd, rresvport, ruserok:" rcmd(3)
.xx "" "rexec: return stream to a remote" "command." "" rexec(3)
.xx "" "nice: execute a" "command at a low scheduling priority." "" nice(1)
.xx "" "switch: multi-way" "command branch." "" csh(1)
.xx "" "time: time" "command execution." "" time(1)
.xx "" "uux: unix to unix" "command execution." "" uux(1)
.xx "" "rehash: recompute" "command hash table." "" csh(1)
.xx "" "unhash: discard" "command hash table." "" csh(1)
.xx "" "hashstat: print" "command hashing statistics." "" csh(1)
.xx "" "nohup: run" "command immune to hangups." "" csh(1)
.xx "" "nohup: invoke a" "command immune to hangups." "" nohup(1)
.xx "" "sh:" "command interpreter (shell)." "" sh(1)
.xx "" "csh: a shell" "(command interpreter) with C-like syntax." "" csh(1)
.xx "" "whatis: describe what a" "command is." "" whatis(1)
.xx "" "getopt: get option character from" "command line argument list." "" getopt(3)
.xx "" "L.cmds: UUCP remote" "command permissions file." "" L.cmds(5)
.xx "" "repeat: execute" "command repeatedly." "" csh(1)
.xx "" "rc:" "command script for auto\-reboot and daemons." "" rc(8)
.xx "" "onintr: process interrupts in" "command scripts." "" csh(1)
.xx "" "apply: apply a" "command to a set of arguments." "" apply(1)
.xx "" "system: pass a" "command to the shell." "" system(3)
.xx "" "goto:" "command transfer." "" csh(1)
.xx "" "@g@nroff: emulate nroff" "command with groff." "" nroff(1)
.xx "" "else: alternative" "commands." "" csh(1)
.xx "" "introduction to system maintenance and operation" "commands." "intro:" intro(8)
.xx "" "rcsintro: introduction to RCS" "commands." "" rcsintro(1)
.xx "" "at: schedule execution of" "commands `at' a given time." "" at(1)
.xx "" "apropos: locate" "commands by keyword lookup." "" apropos(1)
.xx "" "while: repeat" "commands conditionally." "" csh(1)
.xx "" "lastcomm: show last" "commands executed in reverse order." "" lastcomm(1)
.xx "" "source: read" "commands from file." "" csh(1)
.xx "" "intro: introduction to general" "commands (tools and utilities)." "" intro(1)
.xx "" "comm: select or reject lines" "common to two files." "" comm(1)
.xx "" "pipe: create descriptor pair for interprocess" "communication." "" pipe(2)
.xx "" "socket: create an endpoint for" "communication." "" socket(2)
.xx "" "talkd: remote user" "communication server." "" talkd(8)
.xx "" "dca: HP 98644A" "communications interface." "" dca(4)
.xx "" "dcl: HP 98628A" "communications link." "" dcl(4)
.xx "" "dcm: HP 98642A" "communications multiplexer." "" dcm(4)
.xx "files, and cat them." "" "compact, uncompact, ccat: compress and uncompress" "" compact(1)
.xx "" "diff: differential file and directory" "comparator." "" diff(1)
.xx "" "bcmp:" "compare byte string." "" bcmp(3)
.xx "" "memcmp:" "compare byte string." "" memcmp(3)
.xx "" "rcsdiff:" "compare RCS revisions." "" rcsdiff(1)
.xx "" "strcmp:" "compare strings." "" strcmp(3)
.xx "" "strcoll:" "compare strings according to current collation." "" strcoll(3)
.xx "" "strcasecmp:" "compare strings, ignoring case." "" strcasecmp(3)
.xx "" "cmp:" "compare two files." "" cmp(1)
.xx "" "diff3: 3-way differential file" "comparison." "" diff3(1)
.xx "" "@g@pic:" "compile pictures for troff or TeX." "" pic(1)
.xx "" "rpcgen: an RPC protocol" "compiler." "" rpcgen(1)
.xx "" "zic: time zone" "compiler." "" zic(8)
.xx "" "error: analyze and disperse" "compiler error messages." "" error(1)
.xx "" "cccp, cpp: the GNU C-compatible" "compiler preprocessor." "" cpp(1)
.xx "" "cc, g++: GNU project C and C++" "Compiler (v2 preliminary)." "" cc(1)
.xx "" "g++: GNU project C++" "Compiler (v2 preliminary)." "" g++(1)
.xx "" "strcspn: span the" "complement of a string." "" strcspn(3)
.xx "" "wait: wait for background processes to" "complete." "" csh(1)
.xx "" "wait: await process" "completion." "" wait(1)
.xx "" "sync: force" "completion of pending disk writes (flush cache)." "" sync(8)
.xx "" "hypot, cabs: euclidean distance and" "complex absolute value functions." "" hypot(3)
.xx "" "floating-point number to fractional and integral" "components." "frexp: convert" frexp(3)
.xx "" "compress, uncompress, zcat:" "compress and expand data." "" compress(1)
.xx "" "compact, uncompact, ccat:" "compress and uncompress files, and cat them." "" compact(1)
.xx "" "gzip, gunzip, zcat:" "compress or expand files." "" gzip(1)
.xx "data." "" "compress, uncompress, zcat: compress and expand" "" compress(1)
.xx "" "zopen:" "compressed stream open function." "" zopen(3)
.xx "" "login: log into the" "computer." "" login(1)
.xx "" "learn:" "computer aided instruction about." "" learn(1)
.xx "" "" "comsat: biff server." "" comsat(8)
.xx "" "cat:" "concatenate and print files." "" cat(1)
.xx "" "strcat:" "concatenate strings." "" strcat(3)
.xx "" "test:" "condition evaluation utility." "" test(1)
.xx "" "endif: terminate" "conditional." "" csh(1)
.xx "" "if:" "conditional statement." "" csh(1)
.xx "" "while: repeat commands" "conditionally." "" csh(1)
.xx "" "man." "conf: configuration file for man(1)." "" man.conf(5)
.xx "" "dm." "conf: \&dm configuration file." "" dm.conf(5)
.xx "" "/etc/kerberosIV/krb." "conf: Kerberos configuration file." "" krb.conf(5)
.xx "" "syslog." "conf: syslogd(8) configuration file." "" syslog.conf(5)
.xx "" "" "config: build system configuration files." "" config(8)
.xx "" "pathconf, fpathconf: get" "configurable pathname variables." "" pathconf(2)
.xx "" "sysconf: get" "configurable system variables." "" sysconf(3)
.xx "" "confstr: get string-valued" "configurable variables." "" confstr(3)
.xx "" "gettytab: terminal" "configuration data base." "" gettytab(5)
.xx "" "dm.conf: \&dm" "configuration file." "" dm.conf(5)
.xx "" "/etc/kerberosIV/krb.conf: Kerberos" "configuration file." "" krb.conf(5)
.xx "" "resolver: resolver" "configuration file." "" resolver(5)
.xx "" "syslog.conf: syslogd(8)" "configuration file." "" syslog.conf(5)
.xx "" "man.conf:" "configuration file for man(1)." "" man.conf(5)
.xx "" "config: build system" "configuration files." "" config(8)
.xx "" "rcsfreeze: freeze a" "configuration of sources checked in under RCS." "" rcsfreeze(1)
.xx "" "ifconfig:" "configure network interface parameters." "" ifconfig(8)
.xx "" "" "confstr: get string-valued configurable variables." "" confstr(3)
.xx "" "" "connect: initiate a connection on a socket." "" connect(2)
.xx "" "ac: display" "connect time accounting." "" ac(8)
.xx "" "tip, cu:" "connect to a remote system." "" tip(1)
.xx "" "getpeername: get name of" "connected peer." "" getpeername(2)
.xx "" "socketpair: create a pair of" "connected sockets." "" socketpair(2)
.xx "" "shutdown: shut down part of a full-duplex" "connection." "" shutdown(2)
.xx "" "accept: accept a" "connection on a socket." "" accept(2)
.xx "" "connect: initiate a" "connection on a socket." "" connect(2)
.xx "" "cltp: ISO" "Connectionless Transport Protocol." "" cltp(4)
.xx "" "clnp:" "Connectionless-Mode Network Protocol." "" clnp(4)
.xx "" "listen: listen for" "connections on a socket." "" listen(2)
.xx "" "" "cons: HP300 console interface." "" cons(4)
.xx "" "icheck: file system storage" "consistency check." "" icheck(8)
.xx "" "fsck: filesystem" "consistency check and interactive repair." "" fsck(8)
.xx "" "quotacheck: filesystem quota" "consistency checker." "" quotacheck(8)
.xx "" "cons: HP300" "console interface." "" cons(4)
.xx "" "show what versions of object modules were used to" "construct a file." "what:" what(1)
.xx "" "newfs, mfs:" "construct a new file system." "" newfs(8)
.xx "" "newlfs:" "construct a new LFS file system." "" newlfs(8)
.xx "" "mkproto:" "construct a prototype file system." "" mkproto(8)
.xx "" "xargs:" "construct argument list(s) and execute utility." "" xargs(1)
.xx "" "mkdep:" "construct Makefile dependency list." "" mkdep(1)
.xx "" "deroff: remove nroff, troff, tbl and eqn" "constructs." "" deroff(1)
.xx "" "setrlimit: control maximum system resource" "consumption." "getrlimit," getrlimit(2)
.xx "" "vlimit: control maximum system resource" "consumption." "" vlimit(3)
.xx "" "/openpl, erase, label, line, circle, arc, move," "cont, point, linemod, space, closepl: graphics/" "" plot(3)
.xx "" "badsect: create files to" "contain bad sectors." "" badsect(8)
.xx "" "file: identify file" "content." "" file(1)
.xx "" "ls: list directory" "contents." "" ls(1)
.xx "" "sigaltstack: set and/or get signal stack" "context." "" sigaltstack(2)
.xx "" "sigstack: set and/or get signal stack" "context." "" sigstack(2)
.xx "" "" "continue: cycle in loop." "" csh(1)
.xx "" "arp: address resolution display and" "control." "" arp(8)
.xx "" "fcntl: file" "control." "" fcntl(2)
.xx "" "iscntrl:" "control character test." "" iscntrl(3)
.xx "" "ioctl:" "control device." "" ioctl(2)
.xx "" "moncontrol, monstartup:" "control execution profile." "" moncontrol(3)
.xx "" "tcsendbreak, tcdrain, tcflush, tcflow: line" "control functions." "" tcsendbreak(3)
.xx "" "init: process" "control initialization." "" init(8)
.xx "" "acl_add, acl_delete, acl_initialize: access" "control list routines." "/acl_check, acl_exact_match," acl_check(3)
.xx "" "getrlimit, setrlimit:" "control maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit:" "control maximum system resource consumption." "" vlimit(3)
.xx "" "icmp: Internet" "Control Message Protocol." "" icmp(4)
.xx "" "profil:" "control process profiling." "" profil(2)
.xx "" "lpc: line printer" "control program." "" lpc(8)
.xx "" "timedc: timed" "control program." "" timedc(8)
.xx "" "tcp: Internet Transmission" "Control Protocol." "" tcp(4)
.xx "" "syslog, vsyslog, openlog, closelog, setlogmask:" "control system log." "" syslog(3)
.xx "" "mprotect:" "control the protection of pages." "" mprotect(2)
.xx "" "eeprom: openprom" "control utility." "" eeprom(8)
.xx "" "atc: air traffic" "controller game." "" atc(6)
.xx "" "term:" "conventional names for terminals." "" term(7)
.xx "" "ecvt, fcvt, gcvt: output" "conversion." "" ecvt(3)
.xx "" "vfprintf, vsprintf, vsnprintf: formatted output" "conversion." "/fprintf, sprintf, snprintf, vprintf," printf(3)
.xx "" "sscanf, vscanf, vsscanf, vfscanf: input format" "conversion." "scanf, fscanf," scanf(3)
.xx "" "tolower: upper case to lower case letter" "conversion." "" tolower(3)
.xx "" "toupper: lower case to upper case letter" "conversion." "" toupper(3)
.xx "" "tzset, tzsetwall: initialize time" "conversion information." "" tzset(3)
.xx "" "units:" "conversion program." "" units(1)
.xx "" "ns_addr, ns_ntoa: Xerox NS Ns (tm) address" "conversion routines." "" ns(3)
.xx "" "iso_addr, iso_ntoa: elementary network address" "conversion routines for Open System/" "" iso_addr(3)
.xx "" "toascii:" "convert a byte to 7-bit ASCII." "" toascii(3)
.xx "integer." "strtoul, strtouq:" "convert a string to an unsigned long or uquad_t" "" strtoul(3)
.xx "" "dd:" "convert and copy a file." "" dd(1)
.xx "" "number:" "convert Arabic numerals to English." "" number(6)
.xx "" "atof:" "convert ASCII string to double." "" atof(3)
.xx "" "strtod:" "convert ASCII string to double." "" strtod(3)
.xx "" "atoi:" "convert ASCII string to integer." "" atoi(3)
.xx "" "atol:" "convert ASCII string to long integer." "" atol(3)
.xx "integral components." "frexp:" "convert floating-point number to fractional and" "" frexp(3)
.xx "" "grodvi:" "convert groff output to TeX dvi format." "" grodvi(1)
.xx "string." "strmode:" "convert inode status information into a symbolic" "" strmode(3)
.xx "" "strtol, strtoq:" "convert string value to a long or quad_t integer." "" strtol(3)
.xx "" "htonl, htons, ntohl, ntohs:" "convert values between host and network byte order." "" byteorder(3)
.xx "" "ching: the book of changes and other" "cookies." "" ching(6)
.xx "" "fsinfo:" "co-ordinate site-wide filesystem information." "" fsinfo(8)
.xx "" "rcp: remote file" "copy." "" rcp(1)
.xx "" "uucp: unix to unix" "copy." "" uucp(1)
.xx "" "dd: convert and" "copy a file." "" dd(1)
.xx "" "tcopy:" "copy and/or verify mag tapes." "" tcopy(1)
.xx "" "bcopy:" "copy byte string." "" bcopy(3)
.xx "" "memcpy:" "copy byte string." "" memcpy(3)
.xx "" "memmove:" "copy byte string." "" memmove(3)
.xx "" "pax: read and write file archives and" "copy directory hierarchies." "" pax(1)
.xx "" "cp:" "copy files." "" cp(1)
.xx "" "strdup: save a" "copy of a string." "" strdup(3)
.xx "" "mount_lofs: mount a virtual" "copy of an existing filesystem sub-tree." "" mount_lofs(8)
.xx "" "memccpy:" "copy string until character found." "" memccpy(3)
.xx "" "strcpy:" "copy strings." "" strcpy(3)
.xx "floating point support." "" "copysign, drem, finite, logb, scalb: IEEE 754" "" ieee(3)
.xx "" "savecore: save a" "core dump of the operating system." "" savecore(8)
.xx "" "gcore: get" "core images of running process." "" gcore(1)
.xx "" "" "core: memory image file format." "" core(5)
.xx "system clock." "adjtime:" "correct the time to allow synchronization of the" "" adjtime(2)
.xx "" "paste: merge" "corresponding or subsequent lines of files." "" paste(1)
.xx "" "" "cos: cosine function." "" cos(3)
.xx "" "" "cosh: hyperbolic cosine function." "" cosh(3)
.xx "" "acos: arc" "cosine function." "" acos(3)
.xx "" "acosh: inverse hyperbolic" "cosine function." "" acosh(3)
.xx "" "cos:" "cosine function." "" cos(3)
.xx "" "cosh: hyperbolic" "cosine function." "" cosh(3)
.xx "" "wc: word, line, and byte" "count." "" wc(1)
.xx "" "cksum: display file checksums and block" "counts." "" cksum(1)
.xx "" "sum: calculate file checksums and block" "counts." "" sum(1)
.xx "" "" "cp: copy files." "" cp(1)
.xx "" "cccp," "cpp: the GNU C-compatible compiler preprocessor." "" cpp(1)
.xx "" "" "crash: UNIX system failures." "" crash(8)
.xx "" "" "creat: create a new file." "" creat(2)
.xx "" "open: open or" "create a file for reading or writing." "" open(2)
.xx "" "creat:" "create a new file." "" creat(2)
.xx "" "fork:" "create a new process." "" fork(2)
.xx "" "socketpair:" "create a pair of connected sockets." "" socketpair(2)
.xx "" "strfile, unstr:" "create a random access file for storing strings." "" strfile(8)
.xx "" "shar:" "create a shell archive of files." "" shar(1)
.xx "" "ctags:" "create a tags file." "" ctags(1)
.xx "" "socket:" "create an endpoint for communication." "" socket(2)
.xx "" "mkstr:" "create an error message file by massaging C source." "" mkstr(1)
.xx "" "invert, lookup:" "create and access an inverted index." "" invert(1)
.xx "" "ar:" "create and maintain library archives." "" ar(1)
.xx "" "cap_mkdb:" "create capability database." "" cap_mkdb(1)
.xx "" "mk-amd-map:" "create database maps for Amd." "" mk-amd-map(8)
.xx "" "makemap:" "create database maps for sendmail." "" makemap(8)
.xx "communication." "pipe:" "create descriptor pair for interprocess" "" pipe(2)
.xx "" "dev_mkdb:" "create /dev database." "" dev_mkdb(8)
.xx "" "badsect:" "create files to contain bad sectors." "" badsect(8)
.xx "" "tfmtodit:" "create font files for use with groff \-Tdvi." "" tfmtodit(1)
.xx "" "afmtodit:" "create font files for use with groff \-Tps." "" afmtodit(1)
.xx "" "kvm_mkdb:" "create kernel database." "" kvm_mkdb(8)
.xx "" "setsid:" "create session and set process group ID." "" setsid(2)
.xx "" "MAKEDEV:" "create system and device special files." "" MAKEDEV(8)
.xx "" "umask: change or display file" "creation mask." "" csh(1)
.xx "" "umask: set file" "creation mode mask." "" umask(2)
.xx "" "cribbage: the card game" "cribbage." "" cribbage(6)
.xx "" "" "cribbage: the card game cribbage." "" cribbage(6)
.xx "" "" "cron: clock daemon." "" cron(8)
.xx "" "" "crontab: chronological services schedule file." "" crontab(5)
.xx "" "systat: display system statistics on a" "crt." "" systat(1)
.xx "" "colcrt: filter nroff output for" "CRT previewing." "" colcrt(1)
.xx "" "more: file perusal filter for" "crt viewing." "" more(1)
.xx "" "" "crypt: encode/decode." "" crypt(1)
.xx "encryption." "" "crypt, setkey, encrypt, des_setkey, des_cipher: DES" "" crypt(3)
.xx "" "\&ct:" "CS/80 cartridge tape interface." "" ct(4)
.xx "" "rd:" "CS/80 disk interface." "" rd(4)
.xx "syntax." "" "csh: a shell (command interpreter) with C-like" "" csh(1)
.xx "" "" "\&ct: CS/80 cartridge tape interface." "" ct(4)
.xx "" "" "ctags: create a tags file." "" ctags(1)
.xx "" "" "ctermid: generate terminal pathname." "" ctermid(3)
.xx "transform binary date and time value to/" "asctime," "ctime, difftime, gmtime, localtime, mktime:" "" ctime(3)
.xx "" "tip," "cu: connect to a remote system." "" tip(1)
.xx "" "cbrt, sqrt:" "cube root and square root functions." "" sqrt(3)
.xx "" "strcoll: compare strings according to" "current collation." "" strcoll(3)
.xx "" "gethostid, sethostid: get/set unique identifier of" "current host." "" gethostid(3)
.xx "" "gethostname, sethostname: get/set name of" "current host." "" gethostname(3)
.xx "" "hostname: set or print name of" "current host system." "" hostname(1)
.xx "" "jobs: print" "current job list." "" csh(1)
.xx "" "raise: send a signal to the" "current process." "" raise(3)
.xx "" "sigprocmask: manipulate" "current signal mask." "" sigprocmask(2)
.xx "" "sigsetmask: set" "current signal mask." "" sigsetmask(2)
.xx "" "users: list" "current users." "" users(1)
.xx "" "chdir, fchdir: change" "current working directory." "" chdir(2)
.xx "" "klist: list" "currently held Kerberos tickets." "" klist(1)
.xx "motion." "" "curses: screen functions with ``optimal'' cursor" "" curses(3)
.xx "" "curses: screen functions with ``optimal''" "cursor motion." "" curses(3)
.xx "" "spline: interpolate smooth" "curve." "" spline(1)
.xx "" "" "cut: select portions of each line of a file." "" cut(1)
.xx "" "continue:" "cycle in loop." "" csh(1)
.xx "" "caesar: decrypt caesar" "cyphers." "" caesar(6)
.xx "" "cron: clock" "daemon." "" cron(8)
.xx "" "kpasswdd: Kerberos password changing" "daemon." "" kpasswdd(8)
.xx "" "lpd: line printer spooler" "daemon." "" lpd(8)
.xx "" "mount_portal: mount the portal" "daemon." "" mount_portal(8)
.xx "" "registerd: Kerberos registration" "daemon." "" registerd(8)
.xx "" "routed: network routing" "daemon." "" routed(8)
.xx "" "timed: time server" "daemon." "" timed(8)
.xx "" "XNSrouted: NS Routing Information Protocol" "daemon." "" XNSrouted(8)
.xx "" "huntd: hunt" "daemon, back-end for hunt game." "" huntd(6)
.xx "" "" "daemon: run in the background." "" daemon(3)
.xx "" "rc: command script for auto\-reboot and" "daemons." "" rc(8)
.xx "" "portmap:" "DARPA port to RPC program number mapper." "" portmap(8)
.xx "" "telnetd:" "DARPA TELNET protocol server." "" telnetd(8)
.xx "" "compress, uncompress, zcat: compress and expand" "data." "" compress(1)
.xx "" "eval: re-evaluate shell" "data." "" csh(1)
.xx "" "gprof: display call graph profile" "data." "" gprof(1)
.xx "" "jot: print sequential or random" "data." "" jot(1)
.xx "" "kdump: display kernel trace" "data." "" kdump(1)
.xx "" "size: display object file segment sizes (text," "data and bss)." "" size(1)
.xx "" "rs: reshape a" "data array." "" rs(1)
.xx "" "unvis: revert a visual representation of" "data back to original form." "" unvis(1)
.xx "" "gettytab: terminal configuration" "data base." "" gettytab(5)
.xx "" "hosts: host name" "data base." "" hosts(5)
.xx "" "networks: network name" "data base." "" networks(5)
.xx "" "phones: remote host phone number" "data base." "" phones(5)
.xx "" "printcap: printer capability" "data base." "" printcap(5)
.xx "" "protocols: protocol name" "data base." "" protocols(5)
.xx "" "rpc: rpc program number" "data base." "" rpc(5)
.xx "" "services: service name" "data base." "" services(5)
.xx "" "termcap: terminal capability" "data base." "" termcap(5)
.xx "" "newaliases: rebuild the" "data base for the mail aliases file." "" newaliases(1)
.xx "" "vgrindefs: language definition" "data base for vgrind(1)." "" vgrindefs(5)
.xx "" "bdes: encrypt/decrypt using the" "Data Encryption Standard." "" bdes(1)
.xx "" "brk, sbrk: change" "data segment size." "" brk(2)
.xx "" "pstat: display system" "data structures." "" pstat(8)
.xx "" "types: system" "data types." "" types(5)
.xx "" "cap_mkdb: create capability" "database." "" cap_mkdb(1)
.xx "" "dev_mkdb: create /dev" "database." "" dev_mkdb(8)
.xx "" "key files from Kerberos key distribution center" "database." "ext_srvtab: extract service" ext_srvtab(8)
.xx "" "destroy Kerberos key distribution center" "database." "kdb_destroy:" kdb_destroy(8)
.xx "" "initialize Kerberos key distribution center" "database." "kdb_init:" kdb_init(8)
.xx "" "kvm_mkdb: create kernel" "database." "" kvm_mkdb(8)
.xx "" "cause the name server to synchronize its" "database." "named.reload:" named.reload(8)
.xx "" "publickey: public key" "database." "" publickey(5)
.xx "" "route: kernel packet forwarding" "database." "" route(4)
.xx "" "shells: shell" "database." "" shells(5)
.xx "" "btree: btree" "database access method." "" btree(3)
.xx "" "hash: hash" "database access method." "" hash(3)
.xx "" "recno: record number" "database access method." "" recno(3)
.xx "" "dbopen:" "database access methods." "" dbopen(3)
.xx "" "cgetfirst, cgetnext, cgetclose: capability" "database access routines." "/cgetstr, cgetustr," getcap(3)
.xx "" "kdb_edit: Kerberos key distribution center" "database editing utility." "" kdb_edit(8)
.xx "keys." "map3270:" "database for mapping ascii keystrokes into IBM 3270" "" map3270(5)
.xx "" "chpass: add or change user" "database information." "" chpass(1)
.xx "" "mk-amd-map: create" "database maps for Amd." "" mk-amd-map(8)
.xx "" "makemap: create" "database maps for sendmail." "" makemap(8)
.xx "" "kstash: stash Kerberos key distribution center" "database master key." "" kstash(8)
.xx "" ".Nm setgrfile, setgrent, endgrent: group" "database operations." "/getgrgid, setgroupent," getgrent(3)
.xx "" "innetgr, setnetgrent, endnetgrent: netgroup" "database operations." "getnetgrent," getnetgrent(3)
.xx "" "getpwuid, setpassent, setpwent, endpwent: password" "database operations." "getpwent, getpwnam," getpwent(3)
.xx "" "join: relational" "database operator." "" join(1)
.xx "" "kdb_util: Kerberos key distribution center" "database utility." "" kdb_util(8)
.xx "" "@g@indxbib: make inverted index for bibliographic" "databases." "" indxbib(1)
.xx "" "lkbib: search bibliographic" "databases." "" lkbib(1)
.xx "" "@g@lookbib: search bibliographic" "databases." "" lookbib(1)
.xx "" "pwd_mkdb: generate the password" "databases." "" pwd_mkdb(8)
.xx "" "idp: Xerox Internet" "Datagram Protocol." "" idp(4)
.xx "" "udp: Internet User" "Datagram Protocol." "" udp(4)
.xx "" "date: display or set" "date and time." "" date(1)
.xx "" "ftime: get" "date and time." "" ftime(3)
.xx "" "gettimeofday, settimeofday: get/set" "date and time." "" gettimeofday(2)
.xx "" "strftime: format" "date and time." "" strftime(3)
.xx "" "gmtime, localtime, mktime: transform binary" "date and time value to ASCII." "/ctime, difftime," ctime(3)
.xx "" "" "date: display or set date and time." "" date(1)
.xx "" "dv: HP98730" "``DaVinci'' device interface." "" dv(4)
.xx "" "time: get time of" "day." "" time(3)
.xx "" "" "dbopen: database access methods." "" dbopen(3)
.xx "" "" "\&dc: desk calculator." "" dc(1)
.xx "" "" "dca: HP 98644A communications interface." "" dca(4)
.xx "" "" "dcl: HP 98628A communications link." "" dcl(4)
.xx "" "" "dcm: HP 98642A communications multiplexer." "" dcm(4)
.xx "" "" "dd: convert and copy a file." "" dd(1)
.xx "" "adb:" "debugger." "" adb(1)
.xx "" "fsdb: file system" "debugger." "" fsdb(8)
.xx "" "gdb: the GNU" "debugger." "" gdb(1)
.xx "" "bad144: read/write" "dec standard 144 bad sector information." "" bad144(8)
.xx "" "ascii: octal, hexadecimal and" "decimal ASCII character sets." "" ascii(7)
.xx "" "od: octal," "decimal, hex, ascii dump." "" od(1)
.xx "" "hexdump: ascii," "decimal, hexadecimal, octal dump." "" hexdump(1)
.xx "" "isdigit:" "decimal-digit character test." "" isdigit(3)
.xx "" "unvis, strunvis:" "decode a visual representation of characters." "" unvis(3)
.xx "" "keylogin:" "decrypt and store secret key." "" keylogin(1)
.xx "" "caesar:" "decrypt caesar cyphers." "" caesar(6)
.xx "" "" "default: catchall clause in switch." "" csh(1)
.xx "" "diskpart: calculate" "default disk partition sizes." "" diskpart(8)
.xx "" "exports:" "define remote mount points for NFS mount requests." "" exports(5)
.xx "" "netgroup:" "defines network groups." "" netgroup(5)
.xx "" "vgrindefs: language" "definition data base for vgrind(1)." "" vgrindefs(5)
.xx "" "eqnchar: special character" "definitions for eqn." "" eqnchar(7)
.xx "" "stty, gtty: set and get terminal state" "(defunct)." "" stty(3)
.xx "" "close:" "delete a descriptor." "" close(2)
.xx "" "mount_null:" "demonstrate the use of a null file system layer." "" mount_null(8)
.xx "" "make: maintain program" "dependencies." "" make(1)
.xx "" "lorder: list" "dependencies for object files." "" lorder(1)
.xx "" "mkdep: construct Makefile" "dependency list." "" mkdep(1)
.xx "" "man:" "(deprecated) macros to typeset manual." "" man(7)
.xx "constructs." "" "deroff: remove nroff, troff, tbl and eqn" "" deroff(1)
.xx "" "crypt, setkey, encrypt, des_setkey, des_cipher:" "DES encryption." "" crypt(3)
.xx "" "des_cbc_cksum, des_quad_cksum,: (new)" "DES encryption." "/des_cbc_encrypt, des_pcbc_encrypt," des_crypt(3)
.xx "" "/des_ecb_encrypt, des_cbc_encrypt, des_pcbc_encrypt," "des_cbc_cksum, des_quad_cksum,: (new) DES/" "" des_crypt(3)
.xx "" "/des_random_key, des_set_key, des_ecb_encrypt," "des_cbc_encrypt, des_pcbc_encrypt, des_cbc_cksum,/" "" des_crypt(3)
.xx "" "crypt, setkey, encrypt, des_setkey," "des_cipher: DES encryption." "" crypt(3)
.xx "" "whatis:" "describe what a command is." "" whatis(1)
.xx "" "hostname: host name resolution" "description." "" hostname(7)
.xx "" "mailaddr: mail addressing" "description." "" mailaddr(7)
.xx "" "getdiskbyname: get generic disk" "description by its name." "" getdiskbyname(3)
.xx "" "disktab: disk" "description file." "" disktab(5)
.xx "" "L-devices: UUCP device" "description file." "" L-devices(5)
.xx "" "L.sys: UUCP remote host" "description file." "" L.sys(5)
.xx "" "remote: remote host" "description file." "" remote(5)
.xx "" "groff_font: format of groff device and font" "description files." "" groff_font(5)
.xx "" "close: delete a" "descriptor." "" close(2)
.xx "" "dup, dup2: duplicate an existing file" "descriptor." "" dup(2)
.xx "" "kvm_geterr: get error message on kvm" "descriptor." "" kvm_geterr(3)
.xx "" "kvm_getloadavg: get error message on kvm" "descriptor." "" kvm_getloadavg(3)
.xx "" "get name of associated terminal (tty) from file" "descriptor." "ttyname, isatty, ttyslot:" ttyname(3)
.xx "" "getfsfile, setfsent, endfsent: get file system" "descriptor file entry." "getfsent, getfsspec," getfsent(3)
.xx "" "fd, stdin, stdout, stderr: file" "descriptor files." "" fd(4)
.xx "" "pipe: create" "descriptor pair for interprocess communication." "" pipe(2)
.xx "" "getdtablesize: get" "descriptor table size." "" getdtablesize(2)
.xx "" "/des_string_to_key, des_random_key, des_set_key," "des_ecb_encrypt, des_cbc_encrypt, des_pcbc_encrypt,/" "" des_crypt(3)
.xx "" "\&dc:" "desk calculator." "" dc(1)
.xx "" "/des_set_key, des_ecb_encrypt, des_cbc_encrypt," "des_pcbc_encrypt, des_cbc_cksum, des_quad_cksum,:/" "" des_crypt(3)
.xx "" "/des_cbc_encrypt, des_pcbc_encrypt, des_cbc_cksum," "des_quad_cksum,: (new) DES encryption." "" des_crypt(3)
.xx "" "des_read_password, des_string_to_key," "des_random_key, des_set_key, des_ecb_encrypt,/" "" des_crypt(3)
.xx "des_random_key, des_set_key, des_ecb_encrypt,/" "" "des_read_password, des_string_to_key," "" des_crypt(3)
.xx "" "crypt, setkey, encrypt," "des_setkey, des_cipher: DES encryption." "" crypt(3)
.xx "" "/des_string_to_key, des_random_key," "des_set_key, des_ecb_encrypt, des_cbc_encrypt,/" "" des_crypt(3)
.xx "des_ecb_encrypt,/" "des_read_password," "des_string_to_key, des_random_key, des_set_key," "" des_crypt(3)
.xx "" "kdb_destroy:" "destroy Kerberos key distribution center database." "" kdb_destroy(8)
.xx "" "kdestroy:" "destroy Kerberos tickets." "" kdestroy(1)
.xx "" "clock:" "determine processor time used." "" clock(3)
.xx "" "dev_mkdb: create" "/dev database." "" dev_mkdb(8)
.xx "" "drum: paging" "device." "" drum(4)
.xx "" "fold: fold long lines for finite width output" "device." "" fold(1)
.xx "" "ioctl: control" "device." "" ioctl(2)
.xx "" "null: the null" "device." "" null(4)
.xx "" "groff_font: format of groff" "device and font description files." "" groff_font(5)
.xx "" "L-devices: UUCP" "device description file." "" L-devices(5)
.xx "" "hil: Human Interface Link" "device driver." "" hil(4)
.xx "" "swapon: add a swap" "device for interleaved paging/swapping." "" swapon(2)
.xx "" "swapon: specify additional" "device for paging and swapping." "" swapon(8)
.xx "" "dv: HP98730 ``DaVinci''" "device interface." "" dv(4)
.xx "" "gb: HP98700 ``Gatorbox''" "device interface." "" gb(4)
.xx "" "grf: HP graphics frame buffer" "device interface." "" grf(4)
.xx "" "rb: HP98720 ``Renaissance''" "device interface." "" rb(4)
.xx "" "stty: set the options for a terminal" "device interface." "" stty(1)
.xx "" "\&tc: HP98544 98550 ``Topcat'' and ``Catseye''" "device interface." "" tc(4)
.xx "" "devname: get" "device name." "" devname(3)
.xx "" "MAKEDEV: create system and" "device special files." "" MAKEDEV(8)
.xx "" "grotty: groff driver for typewriter-like" "devices." "" grotty(1)
.xx "" "mmap: map files or" "devices into memory." "" mmap(2)
.xx "" "" "dev_mkdb: create /dev database." "" dev_mkdb(8)
.xx "" "" "devname: get device name." "" devname(3)
.xx "" "" "df: display free disk space." "" df(1)
.xx "" "autoconf:" "diagnostics from the autoconfiguration code." "" autoconf(4)
.xx "" "startslip:" "dial up and login to a slip server." "" startslip(1)
.xx "" "acucntrl: turn around tty line between" "dialin and dialout." "" acucntrl(8)
.xx "" "acucntrl: turn around tty line between dialin and" "dialout." "" acucntrl(8)
.xx "" "explain: print wordy sentences; thesaurus for" "diction." "diction," diction(1)
.xx "for diction." "" "diction, explain: print wordy sentences; thesaurus" "" diction(1)
.xx "" "" "diff: differential file and directory comparator." "" diff(1)
.xx "" "patch: a program for applying a" "diff file to an original." "" patch(1)
.xx "" "" "diff3: 3-way differential file comparison." "" diff3(1)
.xx "" "diff:" "differential file and directory comparator." "" diff(1)
.xx "" "diff3: 3-way" "differential file comparison." "" diff3(1)
.xx "binary date and time value to/" "asctime, ctime," "difftime, gmtime, localtime, mktime: transform" "" ctime(3)
.xx "servers." "" "dig: send domain name query packets to name" "" dig(1)
.xx "" "" "dir, dirent: directory file format." "" dir(5)
.xx "" "tsort: topological sort of a" "directed graph." "" tsort(1)
.xx "" "mkdir: make" "directories." "" mkdir(1)
.xx "" "rmdir: remove" "directories." "" rmdir(1)
.xx "" "sticky: sticky text and append-only" "directories." "" sticky(8)
.xx "" "cd: change working" "directory." "" cd(1)
.xx "" "chdir, fchdir: change current working" "directory." "" chdir(2)
.xx "" "chroot: change root" "directory." "" chroot(2)
.xx "" "chroot: change root" "directory." "" chroot(8)
.xx "" "cd: change" "directory." "" csh(1)
.xx "" "chdir: change" "directory." "" csh(1)
.xx "" "scandir, alphasort: scan a" "directory." "" scandir(3)
.xx "" "uuclean: uucp spool" "directory clean-up." "" uuclean(8)
.xx "" "diff: differential file and" "directory comparator." "" diff(1)
.xx "" "ls: list" "directory contents." "" ls(1)
.xx "" "rm: remove" "directory entries." "" rm(1)
.xx "format." "getdirentries: get" "directory entries in a filesystem independent" "" getdirentries(2)
.xx "" "remove: remove" "directory entry." "" remove(3)
.xx "" "unlink: remove" "directory entry." "" unlink(2)
.xx "" "mkdir: make a" "directory file." "" mkdir(2)
.xx "" "rmdir: remove a" "directory file." "" rmdir(2)
.xx "" "dir, dirent:" "directory file format." "" dir(5)
.xx "" "pax: read and write file archives and copy" "directory hierarchies." "" pax(1)
.xx "" "mtree: map a" "directory hierarchy." "" mtree(8)
.xx "" "pwd: return working" "directory name." "" pwd(1)
.xx "" "telldir, seekdir, rewinddir, closedir, dirfd:" "directory operations." "opendir, readdir," directory(3)
.xx "" "getwd: get working" "directory pathname." "" getcwd(3)
.xx "" "basename, dirname: return filename or" "directory portion of pathname." "" basename(1)
.xx "" "whois: Internet user name" "directory service." "" whois(1)
.xx "" "popd: pop shell" "directory stack." "" csh(1)
.xx "" "pushd: push shell" "directory stack." "" csh(1)
.xx "" "dir," "dirent: directory file format." "" dir(5)
.xx "" "readdir, telldir, seekdir, rewinddir, closedir," "dirfd: directory operations." "opendir," directory(3)
.xx "pathname." "basename," "dirname: return filename or directory portion of" "" basename(1)
.xx "" "acct: enable or" "disable process accounting." "" acct(2)
.xx "" "unhash:" "discard command hash table." "" csh(1)
.xx "" "unset:" "discard shell variables." "" csh(1)
.xx "" "termios: general terminal line" "discipline." "" termios(4)
.xx "" "synchronize a file's in-core state with that on" "disk." "fsync:" fsync(2)
.xx "" "synchronize disk block in-core status with that on" "disk." "sync:" sync(2)
.xx "" "sync: synchronize" "disk block in-core status with that on disk." "" sync(2)
.xx "" "getdiskbyname: get generic" "disk description by its name." "" getdiskbyname(3)
.xx "" "disktab:" "disk description file." "" disktab(5)
.xx "" "update: flush internal filesystem caches to" "disk frequently." "" update(8)
.xx "" "rd: CS/80" "disk interface." "" rd(4)
.xx "" "disklabel:" "disk pack label." "" disklabel.5(5)
.xx "" "disklabel: read and write" "disk pack label." "" disklabel(8)
.xx "" "diskpart: calculate default" "disk partition sizes." "" diskpart(8)
.xx "" "df: display free" "disk space." "" df(1)
.xx "" "quota: display" "disk usage and limits." "" quota(1)
.xx "" "du: display" "disk usage statistics." "" du(1)
.xx "" "sync: force completion of pending" "disk writes (flush cache)." "" sync(8)
.xx "" "" "disklabel: disk pack label." "" disklabel.5(5)
.xx "" "" "disklabel: read and write disk pack label." "" disklabel(8)
.xx "" "" "diskpart: calculate default disk partition sizes." "" diskpart(8)
.xx "" "reboot/halt the system without checking the" "disks." "fastboot, fasthalt:" fastboot(8)
.xx "" "scsiformat: format SCSI" "disks and show SCSI parameters." "" scsiformat(8)
.xx "" "format: how to format" "disks and tapes." "" format(8)
.xx "" "" "disktab: disk description file." "" disktab(5)
.xx "" "mount, unmount: mount or" "dismount a filesystem." "" mount(2)
.xx "" "mount, umount: mount and" "dismount file systems." "" mount(8)
.xx "" "error: analyze and" "disperse compiler error messages." "" error(1)
.xx "" "rain: animated raindrops" "display." "" rain(6)
.xx "" "rstat: remote status" "display." "" rstat(1)
.xx "" "xchess: X chess" "display." "" xchess(1)
.xx "" "arp: address resolution" "display and control." "" arp(8)
.xx "" "gprof:" "display call graph profile data." "" gprof(1)
.xx "" "snake, snscore:" "display chase game." "" snake(6)
.xx "" "ac:" "display connect time accounting." "" ac(8)
.xx "" "quota:" "display disk usage and limits." "" quota(1)
.xx "" "du:" "display disk usage statistics." "" du(1)
.xx "" "mesg:" "display (do not display) messages from other users." "" mesg(1)
.xx "" "\&vi, view: screen oriented (visual)" "display editor based on ex." "" vi(1)
.xx "" "whoami:" "display effective user id." "" whoami(1)
.xx "" "cksum:" "display file checksums and block counts." "" cksum(1)
.xx "" "umask: change or" "display file creation mask." "" csh(1)
.xx "" "head:" "display first lines of a file." "" head(1)
.xx "" "df:" "display free disk space." "" df(1)
.xx "" "uname:" "display information about the system." "" uname(1)
.xx "" "kdump:" "display kernel trace data." "" kdump(1)
.xx "" "look:" "display lines beginning with a given string." "" look(1)
.xx "" "mesg: display (do not" "display) messages from other users." "" mesg(1)
.xx "" "nm:" "display name list (symbol table)." "" nm(1)
.xx "" "nfsstat:" "display NFS statistics." "" nfsstat(1)
.xx "format." "vis:" "display non-printable characters in a visual" "" vis(1)
.xx "bss)." "size:" "display object file segment sizes (text, data and" "" size(1)
.xx "" "date:" "display or set date and time." "" date(1)
.xx "" "pstat:" "display system data structures." "" pstat(8)
.xx "" "systat:" "display system statistics on a crt." "" systat(1)
.xx "" "worms: animate worms on a" "display terminal." "" worms(6)
.xx "" "atq:" "display the at(1) job queue." "" atq(1)
.xx "" "tail:" "display the last part of a file." "" tail(1)
.xx "" "man:" "display the on-line manual pages." "" man(1)
.xx "" "pom:" "display the phase of the moon." "" pom(6)
.xx "" "dmesg:" "display the system message buffer." "" dmesg(8)
.xx "system." "quot:" "display total block usage per user for a file" "" quot(8)
.xx "" "logname:" "display user's login name." "" logname(1)
.xx "" "uulog:" "display UUCP log entries." "" uulog(1)
.xx "" "who:" "display who is logged in." "" who(1)
.xx "" "cal:" "displays a calendar." "" cal(1)
.xx "" "hypot, cabs: euclidean" "distance and complex absolute value functions." "" hypot(3)
.xx "" "extract service key files from Kerberos key" "distribution center database." "ext_srvtab:" ext_srvtab(8)
.xx "" "kdb_destroy: destroy Kerberos key" "distribution center database." "" kdb_destroy(8)
.xx "" "kdb_init: initialize Kerberos key" "distribution center database." "" kdb_init(8)
.xx "" "kdb_edit: Kerberos key" "distribution center database editing utility." "" kdb_edit(8)
.xx "" "kstash: stash Kerberos key" "distribution center database master key." "" kstash(8)
.xx "" "kdb_util: Kerberos key" "distribution center database utility." "" kdb_util(8)
.xx "" "rdist: remote file" "distribution program." "" rdist(1)
.xx "" "" "div: return quotient and remainder from division." "" div(3)
.xx "" "div: return quotient and remainder from" "division." "" div(3)
.xx "" "ldiv: return quotient and remainder from" "division." "" ldiv(3)
.xx "" "dm.conf:" "\&dm configuration file." "" dm.conf(5)
.xx "" "" "dm: dungeon master." "" dm(8)
.xx "" "" "dm.conf: \&dm configuration file." "" dm.conf(5)
.xx "" "" "dmesg: display the system message buffer." "" dmesg(8)
.xx "" "res_search, res_mkquery, res_send, res_init," "dn_comp, dn_expand: resolver routines." "res_query," resolver(3)
.xx "" "res_mkquery, res_send, res_init, dn_comp," "dn_expand: resolver routines." "/res_search," resolver(3)
.xx "" "mesg: display" "(do not display) messages from other users." "" mesg(1)
.xx "" "psbb: extract bounding box from PostScript" "document." "" psbb(1)
.xx "" "style: analyze surface characteristics of a" "document." "" style(1)
.xx "" "groff: front end for the groff" "document formatting system." "" groff(1)
.xx "" "@g@troff: format" "documents." "" troff(1)
.xx "" "w: who present users are and what they are" "doing." "" w(1)
.xx "" "dig: send" "domain name query packets to name servers." "" dig(1)
.xx "" "named: Internet" "domain name server." "" named(8)
.xx "" "rhost: look up host names using" "domain server." "" host(1)
.xx "" "hack: exploring The Dungeons of" "Doom." "" hack(6)
.xx "" "rogue: exploring The Dungeons of" "Doom." "" rogue(6)
.xx "" "atof: convert ASCII string to" "double." "" atof(3)
.xx "" "strtod: convert ASCII string to" "double." "" strtod(3)
.xx "" "shutdown: shut" "down part of a full-duplex connection." "" shutdown(2)
.xx "" "shutdown: close" "down the system at a given time." "" shutdown(8)
.xx "" "graph:" "draw a graph." "" graph(1)
.xx "support." "copysign," "drem, finite, logb, scalb: IEEE 754 floating point" "" ieee(3)
.xx "" "hil: Human Interface Link device" "driver." "" hil(4)
.xx "" "pty: pseudo terminal" "driver." "" pty(4)
.xx "" "\&st: CCS SCSI tape" "driver." "" st(4)
.xx "" "grops: PostScript" "driver for groff." "" grops(1)
.xx "" "grotty: groff" "driver for typewriter-like devices." "" grotty(1)
.xx "" "" "drum: paging device." "" drum(4)
.xx "" "" "du: display disk usage statistics." "" du(1)
.xx "" "hexdump: ascii, decimal, hexadecimal, octal" "dump." "" hexdump(1)
.xx "" "od: octal, decimal, hex, ascii" "dump." "" od(1)
.xx "" "files or file systems from backups made with" "dump." "restore: restore" restore(8)
.xx "" "" "dump, dumpdates: incremental dump format." "" dump(5)
.xx "" "dumpfs:" "dump file system information." "" dumpfs(8)
.xx "" "dumplfs:" "dump file system information." "" dumplfs(8)
.xx "" "" "dump: filesystem backup." "" dump(8)
.xx "" "dump, dumpdates: incremental" "dump format." "" dump(5)
.xx "" "savecore: save a core" "dump of the operating system." "" savecore(8)
.xx "" "kgmon: generate a" "dump of the operating system's profile buffers." "" kgmon(8)
.xx "" "dump," "dumpdates: incremental dump format." "" dump(5)
.xx "" "" "dumpfs: dump file system information." "" dumpfs(8)
.xx "" "" "dumplfs: dump file system information." "" dumplfs(8)
.xx "" "dm:" "dungeon master." "" dm(8)
.xx "" "hack: exploring The" "Dungeons of Doom." "" hack(6)
.xx "" "rogue: exploring The" "Dungeons of Doom." "" rogue(6)
.xx "" "" "dup, dup2: duplicate an existing file descriptor." "" dup(2)
.xx "" "dup," "dup2: duplicate an existing file descriptor." "" dup(2)
.xx "" "dup, dup2:" "duplicate an existing file descriptor." "" dup(2)
.xx "" "" "dv: HP98730 ``DaVinci'' device interface." "" dv(4)
.xx "" "grodvi: convert groff output to TeX" "dvi format." "" grodvi(1)
.xx "" "cut: select portions of" "each line of a file." "" cut(1)
.xx "" "echo:" "echo arguments." "" csh(1)
.xx "" "" "echo: echo arguments." "" csh(1)
.xx "" "" "echo: produce message in a shell script." "" echo(1)
.xx "" "ping: send ICMP" "ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "" "ecvt, fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "" "\&ed: text editor." "" ed(1)
.xx "" "end, etext," "edata: end boundaries of image segments." "" end(3)
.xx "" "ex," "edit: text editor." "" ex(1)
.xx "" "vipw:" "edit the password file." "" vipw(8)
.xx "" "edquota:" "edit user quotas." "" edquota(8)
.xx "" "kdb_edit: Kerberos key distribution center database" "editing utility." "" kdb_edit(8)
.xx "" "\&ed: text" "editor." "" ed(1)
.xx "" "ex, edit: text" "editor." "" ex(1)
.xx "" "ld: link" "editor." "" ld(1)
.xx "" "sed: stream" "editor." "" sed(1)
.xx "" "\&vi, view: screen oriented (visual) display" "editor based on ex." "" vi(1)
.xx "" "" "edquota: edit user quotas." "" edquota(8)
.xx "" "openprom: OPENPROM and" "EEPROM interface." "" openprom(4)
.xx "" "" "eeprom: openprom control utility." "" eeprom(8)
.xx "" "setregid: set real and" "effective group ID." "" setregid(2)
.xx "" "whoami: display" "effective user id." "" whoami(1)
.xx "" "setreuid: set real and" "effective user ID's." "" setreuid(2)
.xx "" "vfork: spawn new process in a virtual memory" "efficient way." "" vfork(2)
.xx "" "pig:" "eformatray inputway asway Igpay Atinlay." "" pig(6)
.xx "" "insque, remque: insert/remove" "element from a queue." "" insque(3)
.xx "level access." "link_addr, link_ntoa:" "elementary address specification routines for link" "" link_addr(3)
.xx "level access." "link_addr, link_ntoa:" "elementary address specification routines for link" "" linkaddr(3)
.xx "Open System Interconnection." "iso_addr, iso_ntoa:" "elementary network address conversion routines for" "" iso_addr(3)
.xx "" "soelim:" "eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "" "else: alternative commands." "" csh(1)
.xx "" "emacs: GNU project" "Emacs." "" emacs(1)
.xx "" "" "emacs: GNU project Emacs." "" emacs(1)
.xx "" "@g@nroff:" "emulate nroff command with groff." "" nroff(1)
.xx "" "ite: HP Internal Terminal" "Emulator." "" ite(4)
.xx "" "ktrace:" "enable kernel process tracing." "" ktrace(1)
.xx "" "acct:" "enable or disable process accounting." "" acct(2)
.xx "" "nsip: software network interface" "encapsulating NS packets in IP packets." "" nsip(4)
.xx "" "vis: visually" "encode characters." "" vis(3)
.xx "" "uuencode: format of an" "encoded uuencode file." "" uuencode.format(5)
.xx "" "crypt:" "encode/decode." "" crypt(1)
.xx "" "uuencode, uudecode:" "encode/decode a binary file." "" uuencode(1)
.xx "" "EUC: EUC" "encoding of runes." "" euc(4)
.xx "" "UTF2: Universal character set Transformation Format" "encoding of runes." "" utf2(4)
.xx "" "crypt, setkey," "encrypt, des_setkey, des_cipher: DES encryption." "" crypt(3)
.xx "" "bdes:" "encrypt/decrypt using the Data Encryption Standard." "" bdes(1)
.xx "" "makekey: make" "encrypted keys or passwords." "" makekey(8)
.xx "" "xsend, xget, enroll: private" "encrypted mail." "" xsend(1)
.xx "" "crypt, setkey, encrypt, des_setkey, des_cipher: DES" "encryption." "" crypt(3)
.xx "" "des_cbc_cksum, des_quad_cksum,: (new) DES" "encryption." "/des_cbc_encrypt, des_pcbc_encrypt," des_crypt(3)
.xx "" "chkey: change your" "encryption key." "" chkey(1)
.xx "" "bdes: encrypt/decrypt using the Data" "Encryption Standard." "" bdes(1)
.xx "" "end, etext, edata:" "end boundaries of image segments." "" end(3)
.xx "segments." "" "end, etext, edata: end boundaries of image" "" end(3)
.xx "" "groff: front" "end for the groff document formatting system." "" groff(1)
.xx "" "sccs: front" "end for the SCCS subsystem." "" sccs(1)
.xx "" "logout:" "end session." "" csh(1)
.xx "" "es-is:" "End System to Intermediate System Routing Protocol." "" esis(4)
.xx "" "" "end: terminate loop." "" csh(1)
.xx "" "getfsent, getfsspec, getfsfile, setfsent," "endfsent: get file system descriptor file entry." "" getfsent(3)
.xx "" "getgrgid, setgroupent, .Nm setgrfile, setgrent," "endgrent: group database operations." "/getgrnam," getgrent(3)
.xx "" "/gethostbyaddr, gethostent, sethostent," "endhostent, herror: get network host entry." "" gethostbyname(3)
.xx "" "" "endif: terminate conditional." "" csh(1)
.xx "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "endnetent: get network entry." "" getnetent(3)
.xx "" "getnetgrent, innetgr, setnetgrent," "endnetgrent: netgroup database operations." "" getnetgrent(3)
.xx "" "socket: create an" "endpoint for communication." "" socket(2)
.xx "" "getprotobynumber, getprotobyname, setprotoent," "endprotoent: get protocol entry." "getprotoent," getprotoent(3)
.xx "" "getpwent, getpwnam, getpwuid, setpassent, setpwent," "endpwent: password database operations." "" getpwent(3)
.xx "" "getservbyport, getservbyname, setservent," "endservent: get service entry." "getservent," getservent(3)
.xx "" "" "endsw: terminate switch." "" csh(1)
.xx "" "getttyent, getttynam, setttyent," "endttyent: get ttys file entry." "" getttyent(3)
.xx "" "getusershell, setusershell," "endusershell: get legal user shells." "" getusershell(3)
.xx "" "number: convert Arabic numerals to" "English." "" number(6)
.xx "" "xsend, xget," "enroll: private encrypted mail." "" xsend(1)
.xx "" "pwcache: cache password and group" "entries." "" pwcache(3)
.xx "" "rm: remove directory" "entries." "" rm(1)
.xx "" "uulog: display UUCP log" "entries." "" uulog(1)
.xx "" "getdirentries: get directory" "entries in a filesystem independent format." "" getdirentries(2)
.xx "" "logger: make" "entries in the system log." "" logger(1)
.xx "" "setfsent, endfsent: get file system descriptor file" "entry." "getfsent, getfsspec, getfsfile," getfsent(3)
.xx "" "sethostent, endhostent, herror: get network host" "entry." "gethostbyname, gethostbyaddr, gethostent," gethostbyname(3)
.xx "" "getnetbyname, setnetent, endnetent: get network" "entry." "getnetent, getnetbyaddr," getnetent(3)
.xx "" "setprotoent, endprotoent: get protocol" "entry." "/getprotobynumber, getprotobyname," getprotoent(3)
.xx "" "getservbyname, setservent, endservent: get service" "entry." "getservent, getservbyport," getservent(3)
.xx "" "getttynam, setttyent, endttyent: get ttys file" "entry." "getttyent," getttyent(3)
.xx "" "remove: remove directory" "entry." "" remove(3)
.xx "" "unlink: remove directory" "entry." "" unlink(2)
.xx "environment." "printenv," "env: print out the environment, set and print" "" printenv(1)
.xx "" "" "environ: user environment." "" environ(7)
.xx "" "setenv: set variable in" "environment." "" csh(1)
.xx "" "environ: user" "environment." "" environ(7)
.xx "" "env: print out the environment, set and print" "environment." "printenv," printenv(1)
.xx "" "window: window" "environment." "" window(1)
.xx "" "printenv, env: print out the" "environment, set and print environment." "" printenv(1)
.xx "" "getenv, putenv, setenv, unsetenv:" "environment variable functions." "" getenv(3)
.xx "" "unsetenv: remove" "environment variables." "" csh(1)
.xx "" "eqnchar: special character definitions for" "eqn." "" eqnchar(7)
.xx "" "deroff: remove nroff, troff, tbl and" "eqn constructs." "" deroff(1)
.xx "" "" "eqnchar: special character definitions for eqn." "" eqnchar(7)
.xx "" "@g@eqn: format" "equations for troff." "" eqn(1)
.xx "linemod, space, closepl: graphics/" "plot: openpl," "erase, label, line, circle, arc, move, cont, point," "" plot(3)
.xx "" "" "erf, erfc: error function operators." "" erf(3)
.xx "" "erf," "erfc: error function operators." "" erf(3)
.xx "formatted error messages." "" "err, verr, errx, verrx, warn, vwarn, warnx, vwarnx:" "" err(3)
.xx "messages." "" "error: analyze and disperse compiler error" "" error(1)
.xx "" "erf, erfc:" "error function operators." "" erf(3)
.xx "" "mkstr: create an" "error message file by massaging C source." "" mkstr(1)
.xx "" "kvm_geterr: get" "error message on kvm descriptor." "" kvm_geterr(3)
.xx "" "kvm_getloadavg: get" "error message on kvm descriptor." "" kvm_getloadavg(3)
.xx "" "errx, verrx, warn, vwarn, warnx, vwarnx: formatted" "error messages." "err, verr," err(3)
.xx "" "error: analyze and disperse compiler" "error messages." "" error(1)
.xx "" "perror, strerror, sys_errlist, sys_nerr: system" "error messages." "" strerror(3)
.xx "" "intro: introduction to system calls and" "error numbers." "" intro(2)
.xx "" "spell, spellin, spellout: find spelling" "errors." "" spell(1)
.xx "error messages." "err, verr," "errx, verrx, warn, vwarn, warnx, vwarnx: formatted" "" err(3)
.xx "Protocol." "" "es-is: End System to Intermediate System Routing" "" esis(4)
.xx "file." "" "/etc/kerberosIV/krb.conf: Kerberos configuration" "" krb.conf(5)
.xx "translation file." "" "/etc/kerberosIV/krb.realms: host to Kerberos realm" "" krb.realms(5)
.xx "" "end," "etext, edata: end boundaries of image segments." "" end(3)
.xx "" "le: AMD 7990 LANCE" "ethernet interface." "" le(4)
.xx "" "le: HP AMD 7990 LANCE" "Ethernet interface." "" le(4)
.xx "" "EUC:" "EUC encoding of runes." "" euc(4)
.xx "" "" "EUC: EUC encoding of runes." "" euc(4)
.xx "functions." "hypot, cabs:" "euclidean distance and complex absolute value" "" hypot(3)
.xx "" "" "eval: re-evaluate shell data." "" csh(1)
.xx "" "expr:" "evaluate arguments as an expression." "" expr(1)
.xx "" "operator: C operator precedence and order of" "evaluation." "" operator(7)
.xx "" "test: condition" "evaluation utility." "" test(1)
.xx "" "history: print history" "event list." "" csh(1)
.xx "" "screen oriented (visual) display editor based on" "ex." "\&vi, view:" vi(1)
.xx "" "" "ex, edit: text editor." "" ex(1)
.xx "" "lpq: spool queue" "examination program." "" lpq(1)
.xx "" "uuq:" "examine or manipulate the uucp queue." "" uuq(1)
.xx "" "isgraph: printing character test (space character" "exculsive)." "" isgraph(3)
.xx "" "" "exec: overlay shell with specified command." "" csh(1)
.xx "execute a file." "" "execl, execlp, execle, exect, execv, execvp:" "" exec(3)
.xx "" "execl, execlp," "execle, exect, execv, execvp: execute a file." "" exec(3)
.xx "file." "execl," "execlp, execle, exect, execv, execvp: execute a" "" exec(3)
.xx "" "execl, execlp, execle," "exect, execv, execvp: execute a file." "" exec(3)
.xx "" "a.out: format of" "executable binary files." "" a.out(5)
.xx "" "nlist: retrieve symbol table name list from an" "executable file." "" nlist(3)
.xx "" "strip: remove unnecessary information from" "executable files." "" strip(1)
.xx "" "nice:" "execute a command at a low scheduling priority." "" nice(1)
.xx "" "execl, execlp, execle, exect, execv, execvp:" "execute a file." "" exec(3)
.xx "" "execve:" "execute a file." "" execve(2)
.xx "" "repeat:" "execute command repeatedly." "" csh(1)
.xx "" "xargs: construct argument list(s) and" "execute utility." "" xargs(1)
.xx "" "lastcomm: show last commands" "executed in reverse order." "" lastcomm(1)
.xx "" "time: time command" "execution." "" time(1)
.xx "" "uux: unix to unix command" "execution." "" uux(1)
.xx "" "acct:" "execution accounting file." "" acct(5)
.xx "" "uuxqt: UUCP" "execution file interpreter." "" uuxqt(8)
.xx "" "sleep: suspend" "execution for an interval of time." "" sleep(1)
.xx "" "usleep: suspend" "execution for interval of microseconds." "" usleep(3)
.xx "" "sleep: suspend process" "execution for interval of seconds." "" sleep(3)
.xx "" "at: schedule" "execution of commands `at' a given time." "" at(1)
.xx "" "moncontrol, monstartup: control" "execution profile." "" moncontrol(3)
.xx "" "rexecd: remote" "execution server." "" rexecd(8)
.xx "" "execl, execlp, execle, exect," "execv, execvp: execute a file." "" exec(3)
.xx "" "" "execve: execute a file." "" execve(2)
.xx "" "execl, execlp, execle, exect, execv," "execvp: execute a file." "" exec(3)
.xx "" "dup, dup2: duplicate an" "existing file descriptor." "" dup(2)
.xx "" "tunefs: tune up an" "existing file system." "" tunefs(8)
.xx "" "mount_lofs: mount a virtual copy of an" "existing filesystem sub-tree." "" mount_lofs(8)
.xx "" "atexit: register a function to be called on" "exit." "" atexit(3)
.xx "" "breaksw:" "exit from switch." "" csh(1)
.xx "" "" "exit: leave shell." "" csh(1)
.xx "" "" "exit: perform normal program termination." "" exit(3)
.xx "" "" "_exit: terminate the calling process." "" _exit(2)
.xx "" "break:" "exit while/foreach loop." "" csh(1)
.xx "logarithm, power functions." "" "exp, expm1, log, log10, log1p, pow: exponential," "" exp(3)
.xx "" "glob: filename" "expand argument list." "" csh(1)
.xx "" "compress, uncompress, zcat: compress and" "expand data." "" compress(1)
.xx "" "gzip, gunzip, zcat: compress or" "expand files." "" gzip(1)
.xx "" "expand, unexpand:" "expand tabs to spaces, and vice versa." "" expand(1)
.xx "versa." "" "expand, unexpand: expand tabs to spaces, and vice" "" expand(1)
.xx "diction." "diction," "explain: print wordy sentences; thesaurus for" "" diction(1)
.xx "" "adventure: an" "exploration game." "" adventure(6)
.xx "" "larn:" "exploring the caverns of Larn." "" larn(6)
.xx "" "hack:" "exploring The Dungeons of Doom." "" hack(6)
.xx "" "rogue:" "exploring The Dungeons of Doom." "" rogue(6)
.xx "logarithm, power functions." "exp," "expm1, log, log10, log1p, pow: exponential," "" exp(3)
.xx "" "exp, expm1, log, log10, log1p, pow:" "exponential, logarithm, power functions." "" exp(3)
.xx "requests." "" "exports: define remote mount points for NFS mount" "" exports(5)
.xx "" "" "expr: evaluate arguments as an expression." "" expr(1)
.xx "" "expr: evaluate arguments as an" "expression." "" expr(1)
.xx "" "re_comp, re_exec: regular" "expression handler." "" re_comp(3)
.xx "" "regcomp, regexec, regsub, regerror: regular" "expression handlers." "" regexp(3)
.xx "" "assert:" "expression verification macro." "" assert(3)
.xx "" "re_format: POSIX 1003.2 regular" "expressions." "" re_format(7)
.xx "" "psbb:" "extract bounding box from PostScript document." "" psbb(1)
.xx "distribution center database." "ext_srvtab:" "extract service key files from Kerberos key" "" ext_srvtab(8)
.xx "floating-point number." "modf:" "extract signed integral and fractional values from" "" modf(3)
.xx "strings." "xstr:" "extract strings from C programs to implement shared" "" xstr(1)
.xx "" "yyfix:" "extract tables from y.tab.c." "" yyfix(1)
.xx "" "perl: practical" "extraction and report language." "" perl(1)
.xx "key distribution center database." "" "ext_srvtab: extract service key files from Kerberos" "" ext_srvtab(8)
.xx "" "" "fabs: floating-point absolute value function." "" fabs(3)
.xx "" "networking: introduction to networking" "facilities." "" netintro(4)
.xx "" "sigaction: software signal" "facilities." "" sigaction(2)
.xx "" "signal: simplified software signal" "facilities." "" signal(3)
.xx "" "sigvec: software signal" "facilities." "" sigvec(2)
.xx "" "factor, primes:" "factor a number, generate primes." "" factor(6)
.xx "" "" "factor, primes: factor a number, generate primes." "" factor(6)
.xx "" "crash: UNIX system" "failures." "" crash(8)
.xx "" "" "false: return false value." "" false(1)
.xx "" "false: return" "false value." "" false(1)
.xx "" "inet: Internet protocol" "family." "" inet(4)
.xx "" "iso: ISO protocol" "family." "" iso(4)
.xx "" "ns: Xerox Network Systems(tm) protocol" "family." "" ns(4)
.xx "" "unix: UNIX-domain protocol" "family." "" unix(4)
.xx "" "phantasia: an interterminal" "fantasy game." "" phantasia(6)
.xx "" "lex:" "fast lexical analyzer generator." "" lex(1)
.xx "checking the disks." "" "fastboot, fasthalt: reboot/halt the system without" "" fastboot(8)
.xx "the disks." "fastboot," "fasthalt: reboot/halt the system without checking" "" fastboot(8)
.xx "" "chdir," "fchdir: change current working directory." "" chdir(2)
.xx "" "chflags," "fchflags: set file flags." "" chflags(2)
.xx "" "chmod," "fchmod: change mode of file." "" chmod(2)
.xx "" "chown," "fchown: change owner and group of a file." "" chown(2)
.xx "" "" "fclose: close a stream." "" fclose(3)
.xx "" "" "fcntl: file control." "" fcntl(2)
.xx "" "ecvt," "fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "" "fd, stdin, stdout, stderr: file descriptor files." "" fd(4)
.xx "" "fopen," "fdopen, freopen: stream open functions." "" fopen(3)
.xx "status." "clearerr," "feof, ferror, fileno: check and reset stream" "" ferror(3)
.xx "" "clearerr, feof," "ferror, fileno: check and reset stream status." "" ferror(3)
.xx "using a service key." "ksrvtgt:" "fetch and store Kerberos ticket-granting-ticket" "" ksrvtgt(1)
.xx "" "" "fflush, fpurge: flush a stream." "" fflush(3)
.xx "" "" "ffs: find first bit set in a bit string." "" ffs(3)
.xx "" "" "fg: bring job into foreground." "" csh(1)
.xx "word from input stream." "" "fgetc, getc, getchar, getw: get next character or" "" getc(3)
.xx "" "" "fgetline: get a line from a stream." "" fgetline(3)
.xx "a stream." "" "fgetpos, fseek, fsetpos, ftell, rewind: reposition" "" fseek(3)
.xx "" "" "fgets, gets: get a line from a stream." "" fgets(3)
.xx "" "mkfifo: make a" "fifo file." "" mkfifo(2)
.xx "" "mkfifo: make" "fifos." "" mkfifo(1)
.xx "" "robots:" "fight off villainous robots." "" robots(6)
.xx "" "acct: execution accounting" "file." "" acct(5)
.xx "" "chmod, fchmod: change mode of" "file." "" chmod(2)
.xx "" "chown, fchown: change owner and group of a" "file." "" chown(2)
.xx "" "colrm: remove columns from a" "file." "" colrm(1)
.xx "" "creat: create a new" "file." "" creat(2)
.xx "" "crontab: chronological services schedule" "file." "" crontab(5)
.xx "" "source: read commands from" "file." "" csh(1)
.xx "" "ctags: create a tags" "file." "" ctags(1)
.xx "" "cut: select portions of each line of a" "file." "" cut(1)
.xx "" "dd: convert and copy a" "file." "" dd(1)
.xx "" "disktab: disk description" "file." "" disktab(5)
.xx "" "dm.conf: \&dm configuration" "file." "" dm.conf(5)
.xx "" "execlp, execle, exect, execv, execvp: execute a" "file." "execl," exec(3)
.xx "" "execve: execute a" "file." "" execve(2)
.xx "" "flock: apply or remove an advisory lock on an open" "file." "" flock(2)
.xx "" "fpr: print Fortran" "file." "" fpr(1)
.xx "" "group: format of the group permissions" "file." "" group(5)
.xx "" "head: display first lines of a" "file." "" head(1)
.xx "" "/etc/kerberosIV/krb.conf: Kerberos configuration" "file." "" krb.conf(5)
.xx "" "host to Kerberos realm translation" "file." "/etc/kerberosIV/krb.realms:" krb.realms(5)
.xx "" "L.aliases: UUCP hostname alias" "file." "" L.aliases(5)
.xx "" "L.cmds: UUCP remote command permissions" "file." "" L.cmds(5)
.xx "" "L-devices: UUCP device description" "file." "" L-devices(5)
.xx "" "L-dialcodes: UUCP phone number index" "file." "" L-dialcodes(5)
.xx "" "L.sys: UUCP remote host description" "file." "" L.sys(5)
.xx "" "mkdir: make a directory" "file." "" mkdir(2)
.xx "" "mkfifo: make a fifo" "file." "" mkfifo(2)
.xx "" "mknod: build special" "file." "" mknod(8)
.xx "" "rebuild the data base for the mail aliases" "file." "newaliases:" newaliases(1)
.xx "" "retrieve symbol table name list from an executable" "file." "nlist:" nlist(3)
.xx "" "passwd: format of the password" "file." "" passwd(5)
.xx "" "rcsfile: format of RCS" "file." "" rcsfile(5)
.xx "" "remote: remote host description" "file." "" remote(5)
.xx "" "rename: change the name of a" "file." "" rename(2)
.xx "" "resolver: resolver configuration" "file." "" resolver(5)
.xx "" "rev: reverse lines of a" "file." "" rev(1)
.xx "" "rmdir: remove a directory" "file." "" rmdir(2)
.xx "" "strings: find printable strings in a" "file." "" strings(1)
.xx "" "symlink: make symbolic link to a" "file." "" symlink(2)
.xx "" "syslog.conf: syslogd(8) configuration" "file." "" syslog.conf(5)
.xx "" "tail: display the last part of a" "file." "" tail(1)
.xx "" "routines for manipulating a Kerberos ticket" "file." "/tf_get_pinst, tf_get_cred, tf_close:" tf_util(3)
.xx "" "uniq: report or filter out repeated lines in a" "file." "" uniq(1)
.xx "" "USERFILE: UUCP pathname permissions" "file." "" USERFILE(5)
.xx "" "uuencode, uudecode: encode/decode a binary" "file." "" uuencode(1)
.xx "" "uuencode: format of an encoded uuencode" "file." "" uuencode.format(5)
.xx "" "vipw: edit the password" "file." "" vipw(8)
.xx "" "versions of object modules were used to construct a" "file." "what: show what" what(1)
.xx "" "revoke: revoke" "file access." "" revoke(2)
.xx "" "touch: change" "file access and modification times." "" touch(1)
.xx "" "utimes: set" "file access and modification times." "" utimes(2)
.xx "" "diff: differential" "file and directory comparator." "" diff(1)
.xx "" "pax: read and write" "file archives and copy directory hierarchies." "" pax(1)
.xx "" "rcs: change RCS" "file attributes." "" rcs(1)
.xx "" "bugfiler:" "file bug reports in folders automatically." "" bugfiler(8)
.xx "" "mkstr: create an error message" "file by massaging C source." "" mkstr(1)
.xx "" "cksum: display" "file checksums and block counts." "" cksum(1)
.xx "" "sum: calculate" "file checksums and block counts." "" sum(1)
.xx "" "diff3: 3-way differential" "file comparison." "" diff3(1)
.xx "" "file: identify" "file content." "" file(1)
.xx "" "fcntl:" "file control." "" fcntl(2)
.xx "" "rcp: remote" "file copy." "" rcp(1)
.xx "" "umask: change or display" "file creation mask." "" csh(1)
.xx "" "umask: set" "file creation mode mask." "" umask(2)
.xx "" "dup, dup2: duplicate an existing" "file descriptor." "" dup(2)
.xx "" "ttyslot: get name of associated terminal (tty) from" "file descriptor." "ttyname, isatty," ttyname(3)
.xx "" "fd, stdin, stdout, stderr:" "file descriptor files." "" fd(4)
.xx "" "rdist: remote" "file distribution program." "" rdist(1)
.xx "" "setfsent, endfsent: get file system descriptor" "file entry." "getfsent, getfsspec, getfsfile," getfsent(3)
.xx "" "getttynam, setttyent, endttyent: get ttys" "file entry." "getttyent," getttyent(3)
.xx "" "chflags: change" "file flags." "" chflags(1)
.xx "" "chflags, fchflags: set" "file flags." "" chflags(2)
.xx "" "man.conf: configuration" "file for man(1)." "" man.conf(5)
.xx "" "open: open or create a" "file for reading or writing." "" open(2)
.xx "" "aliases: aliases" "file for sendmail." "" aliases(5)
.xx "" "strfile, unstr: create a random access" "file for storing strings." "" strfile(8)
.xx "" "ar: archive (library)" "file format." "" ar.5(5)
.xx "" "core: memory image" "file format." "" core(5)
.xx "" "dir, dirent: directory" "file format." "" dir(5)
.xx "" "tar: tape archive" "file format." "" tarformat(5)
.xx "" "getfh: get" "file handle." "" getfh(2)
.xx "" "find: walk a" "file hierarchy." "" find(1)
.xx "" "fts: traverse a" "file hierarchy." "" fts(3)
.xx "" "" "file: identify file content." "" file(1)
.xx "" "which: locate a program" "file including aliases and paths." "" which(1)
.xx "" "uuxqt: UUCP execution" "file interpreter." "" uuxqt(8)
.xx "" "fsplit: split a multi-routine Fortran" "file into individual files." "" fsplit(1)
.xx "" "split: split a" "file into pieces." "" split(1)
.xx "" "link: make a hard" "file link." "" link(2)
.xx "" "merge: three-way" "file merge." "" merge(1)
.xx "" "chmod: change" "file modes." "" chmod(1)
.xx "" "krb_set_tkt_string: set Kerberos ticket cache" "file name." "" krb_set_tkt_string(3)
.xx "" "mktemp: make temporary" "file name (unique)." "" mktemp(3)
.xx "" "mknod: make a special" "file node." "" mknod(2)
.xx "" "lseek: reposition read/write" "file offset." "" lseek(2)
.xx "" "access: check access permissions of a" "file or pathname." "" access(2)
.xx "" "chown: change" "file owner and group." "" chown(8)
.xx "" "grep:" "file pattern searcher." "" grep(1)
.xx "" "more:" "file perusal filter for crt viewing." "" more(1)
.xx "" "tempnam, tmpfile, tmpnam: temporary" "file routines." "" tmpnam(3)
.xx "" "size: display object" "file segment sizes (text, data and bss)." "" size(1)
.xx "" "fstat:" "file status." "" fstat(1)
.xx "" "stat, lstat, fstat: get" "file status." "" stat(2)
.xx "" "lfs_cleanerd: garbage collect a log-structured" "file system." "" lfs_cleanerd(8)
.xx "" "mkproto: construct a prototype" "file system." "" mkproto(8)
.xx "" "mount_fdesc: mount the file-descriptor" "file system." "" mount_fdesc(8)
.xx "" "mount_kernfs: mount the /kern" "file system." "" mount_kernfs(8)
.xx "" "mount_lfs: mount a log-structured" "file system." "" mount_lfs(8)
.xx "" "newfs, mfs: construct a new" "file system." "" newfs(8)
.xx "" "newlfs: construct a new LFS" "file system." "" newlfs(8)
.xx "" "quot: display total block usage per user for a" "file system." "" quot(8)
.xx "" "repquota: summarize quotas for a" "file system." "" repquota(8)
.xx "" "tunefs: tune up an existing" "file system." "" tunefs(8)
.xx "" "fsdb:" "file system debugger." "" fsdb(8)
.xx "" "getfsspec, getfsfile, setfsent, endfsent: get" "file system descriptor file entry." "getfsent," getfsent(3)
.xx "" "dumpfs: dump" "file system information." "" dumpfs(8)
.xx "" "dumplfs: dump" "file system information." "" dumplfs(8)
.xx "" "mount_null: demonstrate the use of a null" "file system layer." "" mount_null(8)
.xx "" "mount_umap: sample" "file system layer." "" mount_umap(8)
.xx "" "statfs: get" "file system statistics." "" statfs(2)
.xx "" "icheck:" "file system storage consistency check." "" icheck(8)
.xx "" "fs, inode: format of" "file system volume." "" fs(5)
.xx "" "amd: automatically mount" "file systems." "" amd(8)
.xx "" "getmntinfo: get information about mounted" "file systems." "" getmntinfo(3)
.xx "" "mount, umount: mount and dismount" "file systems." "" mount(8)
.xx "" "mount_nfs: mount nfs" "file systems." "" mount_nfs(8)
.xx "" "restore: restore files or" "file systems from backups made with dump." "" restore(8)
.xx "" "utime: set" "file times." "" utime(3)
.xx "" "uusend: send a" "file to a remote host." "" uusend(1)
.xx "" "truncate, ftruncate: truncate a" "file to a specified length." "" truncate(2)
.xx "" "patch: a program for applying a diff" "file to an original." "" patch(1)
.xx "" "ftp: ARPANET" "file transfer program." "" ftp(1)
.xx "" "tftp: trivial" "file transfer program." "" tftp(1)
.xx "" "ftpd: Internet" "File Transfer Protocol server." "" ftpd(8)
.xx "" "tftpd: Internet Trivial" "File Transfer Protocol server." "" tftpd(8)
.xx "" "mount_fdesc: mount the" "file-descriptor file system." "" mount_fdesc(8)
.xx "" "glob:" "filename expand argument list." "" csh(1)
.xx "" "basename, dirname: return" "filename or directory portion of pathname." "" basename(1)
.xx "" "fnmatch: match" "filename or pathname." "" fnmatch(3)
.xx "" "clearerr, feof, ferror," "fileno: check and reset stream status." "" ferror(3)
.xx "" "a.out: format of executable binary" "files." "" a.out(5)
.xx "" "cat: concatenate and print" "files." "" cat(1)
.xx "" "checknr: check nroff/troff" "files." "" checknr(1)
.xx "" "cmp: compare two" "files." "" cmp(1)
.xx "" "comm: select or reject lines common to two" "files." "" comm(1)
.xx "" "config: build system configuration" "files." "" config(8)
.xx "" "cp: copy" "files." "" cp(1)
.xx "" "fd, stdin, stdout, stderr: file descriptor" "files." "" fd(4)
.xx "" "split a multi-routine Fortran file into individual" "files." "fsplit:" fsplit(1)
.xx "" "format of groff device and font description" "files." "groff_font:" groff_font(5)
.xx "" "gzip, gunzip, zcat: compress or expand" "files." "" gzip(1)
.xx "" "ident: identify" "files." "" ident(1)
.xx "" "kvm_getfiles: survey open" "files." "" kvm_getfiles(3)
.xx "" "lam: laminate" "files." "" lam(1)
.xx "" "locate: find" "files." "" locate(1)
.xx "" "lorder: list dependencies for object" "files." "" lorder(1)
.xx "" "MAKEDEV: create system and device special" "files." "" MAKEDEV(8)
.xx "" "makedev: make system special" "files." "" makedev(8)
.xx "" "mklocale: make LC_CTYPE locale" "files." "" mklocale(1)
.xx "" "mv: move" "files." "" mv(1)
.xx "" "nvi.recover: send mail about recoverable" "files." "" nvi.recover(8)
.xx "" "paste: merge corresponding or subsequent lines of" "files." "" paste(1)
.xx "" "pr: print" "files." "" pr(1)
.xx "" "rcsclean: clean up working" "files." "" rcsclean(1)
.xx "" "print log messages and other information about RCS" "files." "rlog:" rlog(1)
.xx "" "shar: create a shell archive of" "files." "" shar(1)
.xx "" "sort: sort or merge text" "files." "" sort(1)
.xx "" "remove unnecessary information from executable" "files." "strip:" strip(1)
.xx "" "compact, uncompact, ccat: compress and uncompress" "files, and cat them." "" compact(1)
.xx "" "intro: introduction to special" "files and hardware support." "" intro(4)
.xx "" "addftinfo: add information to troff font" "files for use with groff." "" addftinfo(1)
.xx "" "tfmtodit: create font" "files for use with groff \-Tdvi." "" tfmtodit(1)
.xx "" "afmtodit: create font" "files for use with groff \-Tps." "" afmtodit(1)
.xx "database." "ext_srvtab: extract service key" "files from Kerberos key distribution center" "" ext_srvtab(8)
.xx "" "fsync: synchronize a" "file's in-core state with that on disk." "" fsync(2)
.xx "" "mmap: map" "files or devices into memory." "" mmap(2)
.xx "" "restore: restore" "files or file systems from backups made with dump." "" restore(8)
.xx "" "uucico, uucpd: transfer" "files queued by uucp or uux." "" uucico(8)
.xx "" "badsect: create" "files to contain bad sectors." "" badsect(8)
.xx "" "mount, unmount: mount or dismount a" "filesystem." "" mount(2)
.xx "" "dump:" "filesystem backup." "" dump(8)
.xx "" "update: flush internal" "filesystem caches to disk frequently." "" update(8)
.xx "repair." "fsck:" "filesystem consistency check and interactive" "" fsck(8)
.xx "" "getdirentries: get directory entries in a" "filesystem independent format." "" getdirentries(2)
.xx "" "fsinfo: co-ordinate site-wide" "filesystem information." "" fsinfo(8)
.xx "" "quotacheck:" "filesystem quota consistency checker." "" quotacheck(8)
.xx "" "quotactl: manipulate" "filesystem quotas." "" quotactl(2)
.xx "" "quotaon, quotaoff: turn" "filesystem quotas on and off." "" quotaon(8)
.xx "" "mount_lofs: mount a virtual copy of an existing" "filesystem sub-tree." "" mount_lofs(8)
.xx "" "fstab: static information about the" "filesystems." "" fstab(5)
.xx "" "getfsstat: get list of all mounted" "filesystems." "" getfsstat(2)
.xx "" "hier: layout of" "filesystems." "" hier(7)
.xx "" "more: file perusal" "filter for crt viewing." "" more(1)
.xx "" "colcrt:" "filter nroff output for CRT previewing." "" colcrt(1)
.xx "" "uniq: report or" "filter out repeated lines in a file." "" uniq(1)
.xx "" "col:" "filter reverse line feeds from input." "" col(1)
.xx "" "plot: graphics" "filters." "" plot(1)
.xx "" "locate:" "find files." "" locate(1)
.xx "" "ffs:" "find first bit set in a bit string." "" ffs(3)
.xx "" "strlen:" "find length of string." "" strlen(3)
.xx "" "strings:" "find printable strings in a file." "" strings(1)
.xx "" "spell, spellin, spellout:" "find spelling errors." "" spell(1)
.xx "" "" "find: walk a file hierarchy." "" find(1)
.xx "" "" "finger: user information lookup program." "" finger(1)
.xx "" "" "fingerd: remote user information server." "" fingerd(8)
.xx "support." "copysign, drem," "finite, logb, scalb: IEEE 754 floating point" "" ieee(3)
.xx "" "fold: fold long lines for" "finite width output device." "" fold(1)
.xx "" "j0, j1, jn, y0, y1, yn: bessel functions of" "first and second kind." "" j0(3)
.xx "" "ffs: find" "first bit set in a bit string." "" ffs(3)
.xx "" "head: display" "first lines of a file." "" head(1)
.xx "" "fish: play ``Go" "Fish''." "" fish(6)
.xx "" "" "fish: play ``Go Fish''." "" fish(6)
.xx "" "chflags: change file" "flags." "" chflags(1)
.xx "" "chflags, fchflags: set file" "flags." "" chflags(2)
.xx "" "copysign, drem, finite, logb, scalb: IEEE 754" "floating point support." "" ieee(3)
.xx "" "fabs:" "floating-point absolute value function." "" fabs(3)
.xx "" "extract signed integral and fractional values from" "floating-point number." "modf:" modf(3)
.xx "" "ldexp: mutliply" "floating-point number by integral power of 2." "" ldexp(3)
.xx "components." "frexp: convert" "floating-point number to fractional and integral" "" frexp(3)
.xx "" "infnan: signals invalid" "floating\-point operations on a VAX (temporary)." "" infnan(3)
.xx "" "fmod:" "floating-point remainder function." "" fmod(3)
.xx "file." "" "flock: apply or remove an advisory lock on an open" "" flock(2)
.xx "" "" "floor: largest integral value not greater than x." "" floor(3)
.xx "" "fflush, fpurge:" "flush a stream." "" fflush(3)
.xx "" "sync: force completion of pending disk writes" "(flush cache)." "" sync(8)
.xx "frequently." "update:" "flush internal filesystem caches to disk" "" update(8)
.xx "mcmp, mdiv, min, mout, move, msqrt, msub, mult,/" "" "fmin, fmout, gcd, invert, itom m_in, m_out, madd," "" mp(3)
.xx "" "" "fmod: floating-point remainder function." "" fmod(3)
.xx "mdiv, min, mout, move, msqrt, msub, mult,/" "fmin," "fmout, gcd, invert, itom m_in, m_out, madd, mcmp," "" mp(3)
.xx "" "" "fmt: simple text formatter." "" fmt(1)
.xx "" "" "fnmatch: match filename or pathname." "" fnmatch(3)
.xx "device." "" "fold: fold long lines for finite width output" "" fold(1)
.xx "" "fold:" "fold long lines for finite width output device." "" fold(1)
.xx "" "bugfiler: file bug reports in" "folders automatically." "" bugfiler(8)
.xx "" "groff_font: format of groff device and" "font description files." "" groff_font(5)
.xx "" "addftinfo: add information to troff" "font files for use with groff." "" addftinfo(1)
.xx "" "tfmtodit: create" "font files for use with groff \-Tdvi." "" tfmtodit(1)
.xx "" "afmtodit: create" "font files for use with groff \-Tps." "" afmtodit(1)
.xx "" "pfbtops: translate a PostScript" "font in .pfb format to ASCII." "" pfbtops(1)
.xx "" "" "fopen, fdopen, freopen: stream open functions." "" fopen(3)
.xx "cache)." "sync:" "force completion of pending disk writes (flush" "" sync(8)
.xx "" "" "foreach: loop over list of names." "" csh(1)
.xx "" "fg: bring job into" "foreground." "" csh(1)
.xx "" "tcgetpgrp: get" "foreground process group ID." "" tcgetpgrp(3)
.xx "" "tcsetpgrp: set" "foreground process group ID." "" tcsetpgrp(3)
.xx "" "" "fork: create a new process." "" fork(2)
.xx "" "a visual representation of data back to original" "form." "unvis: revert" unvis(1)
.xx "" "ar: archive (library) file" "format." "" ar.5(5)
.xx "" "core: memory image file" "format." "" core(5)
.xx "" "dir, dirent: directory file" "format." "" dir(5)
.xx "" "dump, dumpdates: incremental dump" "format." "" dump(5)
.xx "" "get directory entries in a filesystem independent" "format." "getdirentries:" getdirentries(2)
.xx "" "grodvi: convert groff output to TeX dvi" "format." "" grodvi(1)
.xx "" "groff_out: groff intermediate output" "format." "" groff_out(5)
.xx "" "ranlib: archive (library) table-of-contents" "format." "" ranlib.5(5)
.xx "" "tar: tape archive file" "format." "" tarformat(5)
.xx "" "vis: display non-printable characters in a visual" "format." "" vis(1)
.xx "" "indent: indent and" "format C program source." "" indent(1)
.xx "" "fscanf, sscanf, vscanf, vsscanf, vfscanf: input" "format conversion." "scanf," scanf(3)
.xx "" "strftime:" "format date and time." "" strftime(3)
.xx "" "format: how to" "format disks and tapes." "" format(8)
.xx "" "@g@troff:" "format documents." "" troff(1)
.xx "" "UTF2: Universal character set Transformation" "Format encoding of runes." "" utf2(4)
.xx "" "@g@eqn:" "format equations for troff." "" eqn(1)
.xx "" "" "format: how to format disks and tapes." "" format(8)
.xx "" "uuencode:" "format of an encoded uuencode file." "" uuencode.format(5)
.xx "" "a.out:" "format of executable binary files." "" a.out(5)
.xx "" "fs, inode:" "format of file system volume." "" fs(5)
.xx "" "groff_font:" "format of groff device and font description files." "" groff_font(5)
.xx "" "rcsfile:" "format of RCS file." "" rcsfile(5)
.xx "" "group:" "format of the group permissions file." "" group(5)
.xx "" "passwd:" "format of the password file." "" passwd(5)
.xx "" "scsiformat:" "format SCSI disks and show SCSI parameters." "" scsiformat(8)
.xx "" "@g@tbl:" "format tables for troff." "" tbl(1)
.xx "" "pfbtops: translate a PostScript font in .pfb" "format to ASCII." "" pfbtops(1)
.xx "" "err, verr, errx, verrx, warn, vwarn, warnx, vwarnx:" "formatted error messages." "" err(3)
.xx "" "printf:" "formatted output." "" printf(1)
.xx "" "snprintf, vprintf, vfprintf, vsprintf, vsnprintf:" "formatted output conversion." "/fprintf, sprintf," printf(3)
.xx "" "bib, listrefs, bibinc, bib2tib: bibliographic" "formatter." "" bib(1)
.xx "" "fmt: simple text" "formatter." "" fmt(1)
.xx "" "setlocale, localeconv: natural language" "formatting for C." "" setlocale(3)
.xx "" "ms: text" "formatting macros." "" ms(7)
.xx "" "me: macros for" "formatting papers." "" me(7)
.xx "" "groff: front end for the groff document" "formatting system." "" groff(1)
.xx "" "fpr: print" "Fortran file." "" fpr(1)
.xx "" "fsplit: split a multi-routine" "Fortran file into individual files." "" fsplit(1)
.xx "" "struct: structure" "Fortran programs." "" struct(1)
.xx "adage." "" "fortune: print a random, hopefully interesting," "" fortune(6)
.xx "" "route: kernel packet" "forwarding database." "" route(4)
.xx "" "memccpy: copy string until character" "found." "" memccpy(3)
.xx "" "pathconf," "fpathconf: get configurable pathname variables." "" pathconf(2)
.xx "" "" "fpr: print Fortran file." "" fpr(1)
.xx "vsprintf, vsnprintf: formatted output/" "printf," "fprintf, sprintf, snprintf, vprintf, vfprintf," "" printf(3)
.xx "" "fflush," "fpurge: flush a stream." "" fflush(3)
.xx "word to a stream." "" "fputc, putc, putchar, putw: output a character or" "" putc(3)
.xx "" "" "fputs, puts: output a line to a stream." "" fputs(3)
.xx "" "frexp: convert floating-point number to" "fractional and integral components." "" frexp(3)
.xx "" "modf: extract signed integral and" "fractional values from floating-point number." "" modf(3)
.xx "" "bwtwo: monochromatic" "frame buffer." "" bwtwo(4)
.xx "" "cgthree: 8-bit color" "frame buffer." "" cgthree(4)
.xx "" "grf: HP graphics" "frame buffer device interface." "" grf(4)
.xx "" "" "fread, fwrite: binary stream input/output." "" fread(3)
.xx "" "df: display" "free disk space." "" df(1)
.xx "or realloc." "" "free: free up memory allocated with malloc, calloc" "" free(3)
.xx "allocation operations." "malloc," "free, realloc, calloc, alloca: general memory" "" memory(3)
.xx "realloc." "free:" "free up memory allocated with malloc, calloc or" "" free(3)
.xx "RCS." "rcsfreeze:" "freeze a configuration of sources checked in under" "" rcsfreeze(1)
.xx "" "fopen, fdopen," "freopen: stream open functions." "" fopen(3)
.xx "" "update: flush internal filesystem caches to disk" "frequently." "" update(8)
.xx "and integral components." "" "frexp: convert floating-point number to fractional" "" frexp(3)
.xx "" "groff:" "front end for the groff document formatting system." "" groff(1)
.xx "" "sccs:" "front end for the SCCS subsystem." "" sccs(1)
.xx "" "funopen," "fropen, fwopen: open a stream." "" funopen(3)
.xx "" "" "fs, inode: format of file system volume." "" fs(5)
.xx "format conversion." "scanf," "fscanf, sscanf, vscanf, vsscanf, vfscanf: input" "" scanf(3)
.xx "repair." "" "fsck: filesystem consistency check and interactive" "" fsck(8)
.xx "" "" "fsdb: file system debugger." "" fsdb(8)
.xx "" "fgetpos," "fseek, fsetpos, ftell, rewind: reposition a stream." "" fseek(3)
.xx "" "fgetpos, fseek," "fsetpos, ftell, rewind: reposition a stream." "" fseek(3)
.xx "information." "" "fsinfo: co-ordinate site-wide filesystem" "" fsinfo(8)
.xx "individual files." "" "fsplit: split a multi-routine Fortran file into" "" fsplit(1)
.xx "" "" "fstab: static information about the filesystems." "" fstab(5)
.xx "" "" "fstat: file status." "" fstat(1)
.xx "" "stat, lstat," "fstat: get file status." "" stat(2)
.xx "on disk." "" "fsync: synchronize a file's in-core state with that" "" fsync(2)
.xx "" "fgetpos, fseek, fsetpos," "ftell, rewind: reposition a stream." "" fseek(3)
.xx "" "" "ftime: get date and time." "" ftime(3)
.xx "" "" "ftp: ARPANET file transfer program." "" ftp(1)
.xx "" "" "ftpd: Internet File Transfer Protocol server." "" ftpd(8)
.xx "" "truncate," "ftruncate: truncate a file to a specified length." "" truncate(2)
.xx "" "" "fts: traverse a file hierarchy." "" fts(3)
.xx "" "shutdown: shut down part of a" "full-duplex connection." "" shutdown(2)
.xx "" "tn3270:" "full-screen remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "abs: integer absolute value" "function." "" abs(3)
.xx "" "acos: arc cosine" "function." "" acos(3)
.xx "" "acosh: inverse hyperbolic cosine" "function." "" acosh(3)
.xx "" "asin: arc sine" "function." "" asin(3)
.xx "" "asinh: inverse hyperbolic sine" "function." "" asinh(3)
.xx "" "atanh: inverse hyperbolic tangent" "function." "" atanh(3)
.xx "" "cos: cosine" "function." "" cos(3)
.xx "" "cosh: hyperbolic cosine" "function." "" cosh(3)
.xx "" "fabs: floating-point absolute value" "function." "" fabs(3)
.xx "" "fmod: floating-point remainder" "function." "" fmod(3)
.xx "" "lgamma gamma: log gamma function, gamma" "function." "" lgamma(3)
.xx "" "malloc,: general memory allocation" "function." "" malloc(3)
.xx "" "realloc: reallocation of memory" "function." "" realloc(3)
.xx "" "sin: sine" "function." "" sin(3)
.xx "" "sinh: hyperbolic sine" "function." "" sinh(3)
.xx "" "tan: tangent" "function." "" tan(3)
.xx "" "tanh: hyperbolic tangent" "function." "" tanh(3)
.xx "" "valloc: aligned memory allocation" "function." "" valloc(3)
.xx "" "zopen: compressed stream open" "function." "" zopen(3)
.xx "" "lgamma gamma: log gamma" "function, gamma function." "" lgamma(3)
.xx "" "atan: arc tangent" "function of one variable." "" atan(3)
.xx "" "atan2: arc tangent" "function of two variables." "" atan2(3)
.xx "" "erf, erfc: error" "function operators." "" erf(3)
.xx "" "atexit: register a" "function to be called on exit." "" atexit(3)
.xx "" "log10, log1p, pow: exponential, logarithm, power" "functions." "exp, expm1, log," exp(3)
.xx "" "fopen, fdopen, freopen: stream open" "functions." "" fopen(3)
.xx "" "putenv, setenv, unsetenv: environment variable" "functions." "getenv," getenv(3)
.xx "" "cabs: euclidean distance and complex absolute value" "functions." "hypot," hypot(3)
.xx "" "math: introduction to mathematical library" "functions." "" math(3)
.xx "" "qsort, heapsort, mergesort: sort" "functions." "" qsort(3)
.xx "" "rint: and round-to-closest integer" "functions." "" rint(3)
.xx "" "cbrt, sqrt: cube root and square root" "functions." "" sqrt(3)
.xx "" "stdio: standard input/output library" "functions." "" stdio(3)
.xx "" "tcsendbreak, tcdrain, tcflush, tcflow: line control" "functions." "" tcsendbreak(3)
.xx "" "j0, j1, jn, y0, y1, yn: bessel" "functions of first and second kind." "" j0(3)
.xx "" "curses: screen" "functions with ``optimal'' cursor motion." "" curses(3)
.xx "" "" "funopen, fropen, fwopen: open a stream." "" funopen(3)
.xx "" "funopen, fropen," "fwopen: open a stream." "" funopen(3)
.xx "" "fread," "fwrite: binary stream input/output." "" fread(3)
.xx "preliminary)." "cc," "g++: GNU project C and C++ Compiler (v2" "" cc(1)
.xx "" "" "g++: GNU project C++ Compiler (v2 preliminary)." "" g++(1)
.xx "" "adventure: an exploration" "game." "" adventure(6)
.xx "" "atc: air traffic controller" "game." "" atc(6)
.xx "" "battlestar: a tropical adventure" "game." "" battlestar(6)
.xx "" "boggle: word search" "game." "" boggle(6)
.xx "" "hunt: a multi-player multi-terminal" "game." "" hunt(6)
.xx "" "huntd: hunt daemon, back-end for hunt" "game." "" huntd(6)
.xx "" "monop: Monopoly" "game." "" monop(6)
.xx "" "phantasia: an interterminal fantasy" "game." "" phantasia(6)
.xx "" "snake, snscore: display chase" "game." "" snake(6)
.xx "" "trek: trekkie" "game." "" trek(6)
.xx "" "worm: play the growing worm" "game." "" worm(6)
.xx "" "canfield, cfscores: the solitaire card" "game canfield." "" canfield(6)
.xx "" "cribbage: the card" "game cribbage." "" cribbage(6)
.xx "" "backgammon: the" "game of backgammon." "" backgammon(6)
.xx "" "hangman: the" "game of hangman." "" hangman(6)
.xx "" "tetris: the" "game of tetris." "" tetris(6)
.xx "" "lgamma gamma: log gamma function," "gamma function." "" lgamma(3)
.xx "" "lgamma gamma: log" "gamma function, gamma function." "" lgamma(3)
.xx "" "lgamma" "gamma: log gamma function, gamma function." "" lgamma(3)
.xx "" "lfs_cleanerd:" "garbage collect a log-structured file system." "" lfs_cleanerd(8)
.xx "" "gb: HP98700" "``Gatorbox'' device interface." "" gb(4)
.xx "" "" "gb: HP98700 ``Gatorbox'' device interface." "" gb(4)
.xx "min, mout, move, msqrt, msub, mult,/" "fmin, fmout," "gcd, invert, itom m_in, m_out, madd, mcmp, mdiv," "" mp(3)
.xx "" "" "gcore: get core images of running process." "" gcore(1)
.xx "" "ecvt, fcvt," "gcvt: output conversion." "" ecvt(3)
.xx "" "" "gdb: the GNU debugger." "" gdb(1)
.xx "buffers." "kgmon:" "generate a dump of the operating system's profile" "" kgmon(8)
.xx "" "make_keypair:" "generate Kerberos host key pair." "" make_keypair(8)
.xx "" "lptest:" "generate lineprinter ripple pattern." "" lptest(1)
.xx "" "ncheck:" "generate names from i-numbers." "" ncheck(8)
.xx "" "glob, globfree:" "generate pathnames matching a pattern." "" glob(3)
.xx "" "factor, primes: factor a number," "generate primes." "" factor(6)
.xx "" "ctermid:" "generate terminal pathname." "" ctermid(3)
.xx "" "pwd_mkdb:" "generate the password databases." "" pwd_mkdb(8)
.xx "" "lex: fast lexical analyzer" "generator." "" lex(1)
.xx "" "rand, srand: bad random number" "generator." "" rand(3)
.xx "" "yacc: an LALR(1) parser" "generator." "" yacc(1)
.xx "" "/srandom, initstate, setstate: better random number" "generator; routines for changing generators." "" random(3)
.xx "" "random number generator; routines for changing" "generators." "/srandom, initstate, setstate: better" random(3)
.xx "" "getdiskbyname: get" "generic disk description by its name." "" getdiskbyname(3)
.xx "" "" "@g@eqn: format equations for troff." "" eqn(1)
.xx "" "" "getbsize: get user block size." "" getbsize(3)
.xx "from input stream." "fgetc," "getc, getchar, getw: get next character or word" "" getc(3)
.xx "input stream." "fgetc, getc," "getchar, getw: get next character or word from" "" getc(3)
.xx "filesystem independent format." "" "getdirentries: get directory entries in a" "" getdirentries(2)
.xx "name." "" "getdiskbyname: get generic disk description by its" "" getdiskbyname(3)
.xx "" "" "getdtablesize: get descriptor table size." "" getdtablesize(2)
.xx "" "getgid," "getegid: get group process identification." "" getgid(2)
.xx "variable functions." "" "getenv, putenv, setenv, unsetenv: environment" "" getenv(3)
.xx "" "getuid," "geteuid: get user identification." "" getuid(2)
.xx "" "" "getfh: get file handle." "" getfh(2)
.xx "get file system descriptor file entry." "" "getfsent, getfsspec, getfsfile, setfsent, endfsent:" "" getfsent(3)
.xx "descriptor file entry." "getfsent, getfsspec," "getfsfile, setfsent, endfsent: get file system" "" getfsent(3)
.xx "system descriptor file entry." "getfsent," "getfsspec, getfsfile, setfsent, endfsent: get file" "" getfsent(3)
.xx "" "" "getfsstat: get list of all mounted filesystems." "" getfsstat(2)
.xx "" "" "getgid, getegid: get group process identification." "" getgid(2)
.xx "setgrfile, setgrent, endgrent: group database/" "" "getgrent, getgrnam, getgrgid, setgroupent, .Nm" "" getgrent(3)
.xx "endgrent: group database/" "getgrent, getgrnam," "getgrgid, setgroupent, .Nm setgrfile, setgrent," "" getgrent(3)
.xx "setgrent, endgrent: group database/" "getgrent," "getgrnam, getgrgid, setgroupent, .Nm setgrfile," "" getgrent(3)
.xx "" "" "getgrouplist: calculate group access list." "" getgrouplist(3)
.xx "" "" "getgroups: get group access list." "" getgroups(2)
.xx "herror: get network host entry." "gethostbyname," "gethostbyaddr, gethostent, sethostent, endhostent," "" gethostbyname(3)
.xx "sethostent, endhostent, herror: get network host/" "" "gethostbyname, gethostbyaddr, gethostent," "" gethostbyname(3)
.xx "network host entry." "gethostbyname, gethostbyaddr," "gethostent, sethostent, endhostent, herror: get" "" gethostbyname(3)
.xx "current host." "" "gethostid, sethostid: get/set unique identifier of" "" gethostid(3)
.xx "host." "" "gethostname, sethostname: get/set name of current" "" gethostname(3)
.xx "timer." "" "getitimer, setitimer: get/set value of interval" "" getitimer(2)
.xx "" "" "getloadavg: get system load averages." "" getloadavg(3)
.xx "" "" "getlogin, setlogin: get/set login name." "" getlogin(2)
.xx "systems." "" "getmntinfo: get information about mounted file" "" getmntinfo(3)
.xx "" "" "getmode, setmode: modify mode bits." "" setmode(3)
.xx "get network entry." "getnetent," "getnetbyaddr, getnetbyname, setnetent, endnetent:" "" getnetent(3)
.xx "entry." "getnetent, getnetbyaddr," "getnetbyname, setnetent, endnetent: get network" "" getnetent(3)
.xx "endnetent: get network entry." "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "" getnetent(3)
.xx "netgroup database operations." "" "getnetgrent, innetgr, setnetgrent, endnetgrent:" "" getnetgrent(3)
.xx "argument list." "" "getopt: get option character from command line" "" getopt(3)
.xx "" "" "getpagesize: get system page size." "" getpagesize(3)
.xx "" "" "getpass: get a password." "" getpass(3)
.xx "" "" "getpeername: get name of connected peer." "" getpeername(2)
.xx "" "" "getpgrp: get process group." "" getpgrp(2)
.xx "identification." "" "getpid, getppid: get parent or calling process" "" getpid(2)
.xx "identification." "getpid," "getppid: get parent or calling process" "" getpid(2)
.xx "scheduling priority." "" "getpriority, setpriority: get/set program" "" getpriority(2)
.xx "protocol entry." "getprotoent, getprotobynumber," "getprotobyname, setprotoent, endprotoent: get" "" getprotoent(3)
.xx "endprotoent: get protocol entry." "getprotoent," "getprotobynumber, getprotobyname, setprotoent," "" getprotoent(3)
.xx "setprotoent, endprotoent: get protocol entry." "" "getprotoent, getprotobynumber, getprotobyname," "" getprotoent(3)
.xx "" "" "getpw: get name from uid." "" getpw(3)
.xx "endpwent: password database operations." "" "getpwent, getpwnam, getpwuid, setpassent, setpwent," "" getpwent(3)
.xx "password database operations." "getpwent," "getpwnam, getpwuid, setpassent, setpwent, endpwent:" "" getpwent(3)
.xx "database operations." "getpwent, getpwnam," "getpwuid, setpassent, setpwent, endpwent: password" "" getpwent(3)
.xx "resource consumption." "" "getrlimit, setrlimit: control maximum system" "" getrlimit(2)
.xx "utilization." "" "getrusage: get information about resource" "" getrusage(2)
.xx "" "fgets," "gets: get a line from a stream." "" fgets(3)
.xx "entry." "getservent, getservbyport," "getservbyname, setservent, endservent: get service" "" getservent(3)
.xx "endservent: get service entry." "getservent," "getservbyport, getservbyname, setservent," "" getservent(3)
.xx "setservent, endservent: get service entry." "" "getservent, getservbyport, getservbyname," "" getservent(3)
.xx "" "gettimeofday, settimeofday:" "get/set date and time." "" gettimeofday(2)
.xx "" "getlogin, setlogin:" "get/set login name." "" getlogin(2)
.xx "" "gethostname, sethostname:" "get/set name of current host." "" gethostname(3)
.xx "" "getpriority, setpriority:" "get/set program scheduling priority." "" getpriority(2)
.xx "" "gethostid, sethostid:" "get/set unique identifier of current host." "" gethostid(3)
.xx "" "getitimer, setitimer:" "get/set value of interval timer." "" getitimer(2)
.xx "" "" "getsockname: get socket name." "" getsockname(2)
.xx "sockets." "" "getsockopt, setsockopt: get and set options on" "" getsockopt(2)
.xx "" "" "getsubopt: get sub options from an argument." "" getsubopt(3)
.xx "" "" "gettimeofday, settimeofday: get/set date and time." "" gettimeofday(2)
.xx "ttys file entry." "" "getttyent, getttynam, setttyent, endttyent: get" "" getttyent(3)
.xx "entry." "getttyent," "getttynam, setttyent, endttyent: get ttys file" "" getttyent(3)
.xx "" "" "getty: set terminal mode." "" getty(8)
.xx "" "" "gettytab: terminal configuration data base." "" gettytab(5)
.xx "" "" "getuid, geteuid: get user identification." "" getuid(2)
.xx "user shells." "" "getusershell, setusershell, endusershell: get legal" "" getusershell(3)
.xx "" "fgetc, getc, getchar," "getw: get next character or word from input stream." "" getc(3)
.xx "" "" "getwd: get working directory pathname." "" getcwd(3)
.xx "databases." "" "@g@indxbib: make inverted index for bibliographic" "" indxbib(1)
.xx "" "madvise:" "give advise about use of memory." "" madvise(2)
.xx "" "look: display lines beginning with a" "given string." "" look(1)
.xx "" "at: schedule execution of commands `at' a" "given time." "" at(1)
.xx "" "shutdown: close down the system at a" "given time." "" shutdown(8)
.xx "" "" "glob: filename expand argument list." "" csh(1)
.xx "pattern." "" "glob, globfree: generate pathnames matching a" "" glob(3)
.xx "" "glob," "globfree: generate pathnames matching a pattern." "" glob(3)
.xx "" "" "@g@lookbib: search bibliographic databases." "" lookbib(1)
.xx "and time value to ASCII." "asctime, ctime, difftime," "gmtime, localtime, mktime: transform binary date" "" ctime(3)
.xx "" "" "@g@nroff: emulate nroff command with groff." "" nroff(1)
.xx "" "cccp, cpp: the" "GNU C-compatible compiler preprocessor." "" cpp(1)
.xx "" "chess:" "GNU chess." "" chess(6)
.xx "" "gdb: the" "GNU debugger." "" gdb(1)
.xx "" "cc, g++:" "GNU project C and C++ Compiler (v2 preliminary)." "" cc(1)
.xx "" "g++:" "GNU project C++ Compiler (v2 preliminary)." "" g++(1)
.xx "" "emacs:" "GNU project Emacs." "" emacs(1)
.xx "" "fish: play" "``Go Fish''." "" fish(6)
.xx "" "" "goto: command transfer." "" csh(1)
.xx "" "" "@g@pic: compile pictures for troff or TeX." "" pic(1)
.xx "" "" "gprof: display call graph profile data." "" gprof(1)
.xx "" "graph: draw a" "graph." "" graph(1)
.xx "" "tsort: topological sort of a directed" "graph." "" tsort(1)
.xx "" "" "graph: draw a graph." "" graph(1)
.xx "" "gprof: display call" "graph profile data." "" gprof(1)
.xx "" "plot:" "graphics filters." "" plot(1)
.xx "" "grf: HP" "graphics frame buffer device interface." "" grf(4)
.xx "" "arc, move, cont, point, linemod, space, closepl:" "graphics interface." "/erase, label, line, circle," plot(3)
.xx "" "plot:" "graphics interface." "" plot(5)
.xx "" "ceil: smallest integral value not" "greater than x." "" ceil(3)
.xx "" "floor: largest integral value not" "greater than x." "" floor(3)
.xx "groff." "" "@g@refer: preprocess bibliographic references for" "" refer(1)
.xx "" "" "grep: file pattern searcher." "" grep(1)
.xx "" "" "grf: HP graphics frame buffer device interface." "" grf(4)
.xx "" "vgrind:" "grind nice listings of programs." "" vgrind(1)
.xx "" "" "grodvi: convert groff output to TeX dvi format." "" grodvi(1)
.xx "" "add information to troff font files for use with" "groff." "addftinfo:" addftinfo(1)
.xx "" "grops: PostScript driver for" "groff." "" grops(1)
.xx "" "@g@nroff: emulate nroff command with" "groff." "" nroff(1)
.xx "" "@g@refer: preprocess bibliographic references for" "groff." "" refer(1)
.xx "" "groff_char:" "groff character names." "" groff_char(7)
.xx "" "grog: guess options for" "groff command." "" grog(1)
.xx "" "groff_font: format of" "groff device and font description files." "" groff_font(5)
.xx "" "groff: front end for the" "groff document formatting system." "" groff(1)
.xx "" "grotty:" "groff driver for typewriter-like devices." "" grotty(1)
.xx "system." "" "groff: front end for the groff document formatting" "" groff(1)
.xx "" "groff_out:" "groff intermediate output format." "" groff_out(5)
.xx "" "mm:" "groff mm macros." "" mm(7)
.xx "" "grodvi: convert" "groff output to TeX dvi format." "" grodvi(1)
.xx "" "tfmtodit: create font files for use with" "groff \-Tdvi." "" tfmtodit(1)
.xx "" "afmtodit: create font files for use with" "groff \-Tps." "" afmtodit(1)
.xx "" "" "groff_char: groff character names." "" groff_char(7)
.xx "description files." "" "groff_font: format of groff device and font" "" groff_font(5)
.xx "" "" "groff_out: groff intermediate output format." "" groff_out(5)
.xx "" "" "grog: guess options for groff command." "" grog(1)
.xx "" "" "grops: PostScript driver for groff." "" grops(1)
.xx "" "" "grotty: groff driver for typewriter-like devices." "" grotty(1)
.xx "" "chgrp: change" "group." "" chgrp(1)
.xx "" "chown: change file owner and" "group." "" chown(8)
.xx "" "getpgrp: get process" "group." "" getpgrp(2)
.xx "" "killpg: send signal to a process" "group." "" killpg(2)
.xx "" "setpgid, setpgrp: set process" "group." "" setpgid(2)
.xx "" "getgrouplist: calculate" "group access list." "" getgrouplist(3)
.xx "" "getgroups: get" "group access list." "" getgroups(2)
.xx "" "initgroups: initialize" "group access list." "" initgroups(3)
.xx "" "setgroups: set" "group access list." "" setgroups(2)
.xx "" "setgroupent, .Nm setgrfile, setgrent, endgrent:" "group database operations." "/getgrnam, getgrgid," getgrent(3)
.xx "" "pwcache: cache password and" "group entries." "" pwcache(3)
.xx "" "" "group: format of the group permissions file." "" group(5)
.xx "" "setregid: set real and effective" "group ID." "" setregid(2)
.xx "" "setruid, setrgid: set user and" "group ID." "" setruid(3)
.xx "" "setsid: create session and set process" "group ID." "" setsid(2)
.xx "" "setuid, seteuid, setgid, setegid,: set user and" "group ID." "" setuid(2)
.xx "" "tcgetpgrp: get foreground process" "group ID." "" tcgetpgrp(3)
.xx "" "tcsetpgrp: set foreground process" "group ID." "" tcsetpgrp(3)
.xx "" "groups: show" "group memberships." "" groups(1)
.xx "" "chown, fchown: change owner and" "group of a file." "" chown(2)
.xx "" "group: format of the" "group permissions file." "" group(5)
.xx "" "getgid, getegid: get" "group process identification." "" getgid(2)
.xx "" "netgroup: defines network" "groups." "" netgroup(5)
.xx "" "" "groups: show group memberships." "" groups(1)
.xx "" "worm: play the" "growing worm game." "" worm(6)
.xx "" "" "@g@tbl: format tables for troff." "" tbl(1)
.xx "" "" "@g@troff: format documents." "" troff(1)
.xx "" "stty," "gtty: set and get terminal state (defunct)." "" stty(3)
.xx "" "grog:" "guess options for groff command." "" grog(1)
.xx "" "mdoc: quick reference" "guide for the \-mdoc macro package." "" mdoc(7)
.xx "" "gzip," "gunzip, zcat: compress or expand files." "" gzip(1)
.xx "" "" "gzip, gunzip, zcat: compress or expand files." "" gzip(1)
.xx "" "" "hack: exploring The Dungeons of Doom." "" hack(6)
.xx "" "stop:" "halt a job or process." "" csh(1)
.xx "" "reboot: reboot system or" "halt processor." "" reboot(2)
.xx "" "reboot," "halt: stopping and restarting the system." "" reboot(8)
.xx "" "getfh: get file" "handle." "" getfh(2)
.xx "" "rmail:" "handle remote mail received via uucp." "" rmail(8)
.xx "" "ansitape: ANSI standard tape" "handler." "" ansitape(1)
.xx "" "mh: Message" "Handler." "" mh(1)
.xx "" "re_comp, re_exec: regular expression" "handler." "" re_comp(3)
.xx "" "regexec, regsub, regerror: regular expression" "handlers." "regcomp," regexp(3)
.xx "" "symlink: symbolic link" "handling." "" symlink(7)
.xx "" "hangman: the game of" "hangman." "" hangman(6)
.xx "" "" "hangman: the game of hangman." "" hangman(6)
.xx "" "nohup: run command immune to" "hangups." "" csh(1)
.xx "" "nohup: invoke a command immune to" "hangups." "" nohup(1)
.xx "" "link: make a" "hard file link." "" link(2)
.xx "" "intro: introduction to special files and" "hardware support." "" intro(4)
.xx "" "hash:" "hash database access method." "" hash(3)
.xx "" "" "hash: hash database access method." "" hash(3)
.xx "" "rehash: recompute command" "hash table." "" csh(1)
.xx "" "unhash: discard command" "hash table." "" csh(1)
.xx "" "hashstat: print command" "hashing statistics." "" csh(1)
.xx "" "" "hashstat: print command hashing statistics." "" csh(1)
.xx "" "from: print names of those who" "have sent mail." "" from(1)
.xx "" "leave: remind you when you" "have to leave." "" leave(1)
.xx "" "qsort," "heapsort, mergesort: sort functions." "" qsort(3)
.xx "" "klist: list currently" "held Kerberos tickets." "" klist(1)
.xx "" "vacation: return ``I am not" "here'' indication." "" vacation(1)
.xx "" "gethostbyaddr, gethostent, sethostent, endhostent," "herror: get network host entry." "gethostbyname," gethostbyname(3)
.xx "" "od: octal, decimal," "hex, ascii dump." "" od(1)
.xx "" "ascii: octal," "hexadecimal and decimal ASCII character sets." "" ascii(7)
.xx "" "hexdump: ascii, decimal," "hexadecimal, octal dump." "" hexdump(1)
.xx "" "isxdigit:" "hexadecimal-digit character test." "" isxdigit(3)
.xx "" "" "hexdump: ascii, decimal, hexadecimal, octal dump." "" hexdump(1)
.xx "" "xroach: cockroaches" "hide under your windows." "" xroach(6)
.xx "" "" "hier: layout of filesystems." "" hier(7)
.xx "" "read and write file archives and copy directory" "hierarchies." "pax:" pax(1)
.xx "" "find: walk a file" "hierarchy." "" find(1)
.xx "" "fts: traverse a file" "hierarchy." "" fts(3)
.xx "" "mtree: map a directory" "hierarchy." "" mtree(8)
.xx "" "" "hil: Human Interface Link device driver." "" hil(4)
.xx "" "history: print" "history event list." "" csh(1)
.xx "" "" "history: print history event list." "" csh(1)
.xx "" "fortune: print a random," "hopefully interesting, adage." "" fortune(6)
.xx "" "sethostid: get/set unique identifier of current" "host." "gethostid," gethostid(3)
.xx "" "gethostname, sethostname: get/set name of current" "host." "" gethostname(3)
.xx "" "showmount: show remote nfs mounts on" "host." "" showmount(8)
.xx "" "traceroute: print the route packets take to network" "host." "" traceroute(8)
.xx "" "uusend: send a file to a remote" "host." "" uusend(1)
.xx "" "htonl, htons, ntohl, ntohs: convert values between" "host and network byte order." "" byteorder(3)
.xx "" "L.sys: UUCP remote" "host description file." "" L.sys(5)
.xx "" "remote: remote" "host description file." "" remote(5)
.xx "" "sethostent, endhostent, herror: get network" "host entry." "/gethostbyaddr, gethostent," gethostbyname(3)
.xx "" "make_keypair: generate Kerberos" "host key pair." "" make_keypair(8)
.xx "" "hosts:" "host name data base." "" hosts(5)
.xx "" "hostname:" "host name resolution description." "" hostname(7)
.xx "" "rhost: look up" "host names using domain server." "" host(1)
.xx "" "phones: remote" "host phone number data base." "" phones(5)
.xx "" "ruptime: show" "host status of local machines." "" ruptime(1)
.xx "" "hostname: set or print name of current" "host system." "" hostname(1)
.xx "" "/etc/kerberosIV/krb.realms:" "host to Kerberos realm translation file." "" krb.realms(5)
.xx "" "L.aliases: UUCP" "hostname alias file." "" L.aliases(5)
.xx "" "" "hostname: host name resolution description." "" hostname(7)
.xx "" "" "hostname: set or print name of current host system." "" hostname(1)
.xx "" "ping: send ICMP ECHO_REQUEST packets to network" "hosts." "" ping(8)
.xx "" "uuname: list names of UUCP" "hosts." "" uuname(1)
.xx "" "" "hosts: host name data base." "" hosts(5)
.xx "" "uptime: show" "how long system has been running." "" uptime(1)
.xx "" "format:" "how to format disks and tapes." "" format(8)
.xx "" "dcl:" "HP 98628A communications link." "" dcl(4)
.xx "" "dcm:" "HP 98642A communications multiplexer." "" dcm(4)
.xx "" "dca:" "HP 98644A communications interface." "" dca(4)
.xx "" "le:" "HP AMD 7990 LANCE Ethernet interface." "" le(4)
.xx "" "grf:" "HP graphics frame buffer device interface." "" grf(4)
.xx "" "ite:" "HP Internal Terminal Emulator." "" ite(4)
.xx "" "rbootd:" "HP remote boot server." "" rbootd(8)
.xx "" "cons:" "HP300 console interface." "" cons(4)
.xx "interface." "\&tc:" "HP98544 98550 ``Topcat'' and ``Catseye'' device" "" tc(4)
.xx "" "gb:" "HP98700 ``Gatorbox'' device interface." "" gb(4)
.xx "" "rb:" "HP98720 ``Renaissance'' device interface." "" rb(4)
.xx "" "dv:" "HP98730 ``DaVinci'' device interface." "" dv(4)
.xx "" "ppi:" "HP-IB printer/plotter interface." "" ppi(4)
.xx "host and network byte order." "" "htonl, htons, ntohl, ntohs: convert values between" "" byteorder(3)
.xx "and network byte order." "htonl," "htons, ntohl, ntohs: convert values between host" "" byteorder(3)
.xx "" "hil:" "Human Interface Link device driver." "" hil(4)
.xx "" "" "hunt: a multi-player multi-terminal game." "" hunt(6)
.xx "" "huntd:" "hunt daemon, back-end for hunt game." "" huntd(6)
.xx "" "huntd: hunt daemon, back-end for" "hunt game." "" huntd(6)
.xx "" "wump:" "hunt the wumpus in an underground cave." "" wump(6)
.xx "" "" "huntd: hunt daemon, back-end for hunt game." "" huntd(6)
.xx "" "acosh: inverse" "hyperbolic cosine function." "" acosh(3)
.xx "" "cosh:" "hyperbolic cosine function." "" cosh(3)
.xx "" "asinh: inverse" "hyperbolic sine function." "" asinh(3)
.xx "" "sinh:" "hyperbolic sine function." "" sinh(3)
.xx "" "atanh: inverse" "hyperbolic tangent function." "" atanh(3)
.xx "" "tanh:" "hyperbolic tangent function." "" tanh(3)
.xx "absolute value functions." "" "hypot, cabs: euclidean distance and complex" "" hypot(3)
.xx "" "vacation: return" "``I am not here'' indication." "" vacation(1)
.xx "" "mset: retrieve ASCII to" "IBM 3270 keyboard map." "" mset(1)
.xx "" "map3270: database for mapping ascii keystrokes into" "IBM 3270 keys." "" map3270(5)
.xx "" "tn3270: full-screen remote login to" "IBM VM/CMS." "" tn3270(1)
.xx "" "" "icheck: file system storage consistency check." "" icheck(8)
.xx "" "ping: send" "ICMP ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "" "icmp: Internet Control Message Protocol." "" icmp(4)
.xx "" "setregid: set real and effective group" "ID." "" setregid(2)
.xx "" "setruid, setrgid: set user and group" "ID." "" setruid(3)
.xx "" "setsid: create session and set process group" "ID." "" setsid(2)
.xx "" "seteuid, setgid, setegid,: set user and group" "ID." "setuid," setuid(2)
.xx "" "tcgetpgrp: get foreground process group" "ID." "" tcgetpgrp(3)
.xx "" "tcsetpgrp: set foreground process group" "ID." "" tcsetpgrp(3)
.xx "" "whoami: display effective user" "id." "" whoami(1)
.xx "" "" "id: return user identity." "" id(1)
.xx "" "" "ident: identify files." "" ident(1)
.xx "" "getgid, getegid: get group process" "identification." "" getgid(2)
.xx "" "getpid, getppid: get parent or calling process" "identification." "" getpid(2)
.xx "" "getuid, geteuid: get user" "identification." "" getuid(2)
.xx "" "gethostid, sethostid: get/set unique" "identifier of current host." "" gethostid(3)
.xx "" "file:" "identify file content." "" file(1)
.xx "" "ident:" "identify files." "" ident(1)
.xx "" "id: return user" "identity." "" id(1)
.xx "" "su: substitute user" "identity." "" su(1)
.xx "" "" "idp: Xerox Internet Datagram Protocol." "" idp(4)
.xx "" "setreuid: set real and effective user" "ID's." "" setreuid(2)
.xx "" "copysign, drem, finite, logb, scalb:" "IEEE 754 floating point support." "" ieee(3)
.xx "" "" "if: conditional statement." "" csh(1)
.xx "" "biff: be notified" "if mail arrives and who it is from." "" biff(1)
.xx "" "" "ifconfig: configure network interface parameters." "" ifconfig(8)
.xx "" "unifdef: remove" "ifdef'ed lines." "" unifdef(1)
.xx "" "strcasecmp: compare strings," "ignoring case." "" strcasecmp(3)
.xx "" "pig: eformatray inputway asway" "Igpay Atinlay." "" pig(6)
.xx "" "retrieve symbol table names from a kernel" "image." "kvm_nlist:" kvm_nlist(3)
.xx "" "core: memory" "image file format." "" core(5)
.xx "" "end, etext, edata: end boundaries of" "image segments." "" end(3)
.xx "" "gcore: get core" "images of running process." "" gcore(1)
.xx "" "notify: request" "immediate notification." "" csh(1)
.xx "" "nohup: run command" "immune to hangups." "" csh(1)
.xx "" "nohup: invoke a command" "immune to hangups." "" nohup(1)
.xx "" "xstr: extract strings from C programs to" "implement shared strings." "" xstr(1)
.xx "" "named-xfer: ancillary agent for" "inbound zone transfers." "" named-xfer(8)
.xx "" "which: locate a program file" "including aliases and paths." "" which(1)
.xx "" "isprint: printing character test (space character" "inclusive)." "" isprint(3)
.xx "" "fsync: synchronize a file's" "in-core state with that on disk." "" fsync(2)
.xx "" "sync: synchronize disk block" "in-core status with that on disk." "" sync(2)
.xx "" "dump, dumpdates:" "incremental dump format." "" dump(5)
.xx "" "indent:" "indent and format C program source." "" indent(1)
.xx "" "" "indent: indent and format C program source." "" indent(1)
.xx "" "get directory entries in a filesystem" "independent format." "getdirentries:" getdirentries(2)
.xx "" "tgetnum, tgetflag, tgetstr, tgoto, tputs: terminal" "independent operation routines." "tgetent," termcap(3)
.xx "" "invert, lookup: create and access an inverted" "index." "" invert(1)
.xx "" "ptx: permuted" "index." "" ptx(1)
.xx "" "L-dialcodes: UUCP phone number" "index file." "" L-dialcodes(5)
.xx "" "@g@indxbib: make inverted" "index for bibliographic databases." "" indxbib(1)
.xx "" "" "index: locate character in string." "" index(3)
.xx "" "strpbrk, strsep, strspn, strcspn, strstr, strtok," "index, rindex: string specifi" "/strerror, strlen," string(3)
.xx "" "last:" "indicate last logins of users and ttys." "" last(1)
.xx "" "vacation: return ``I am not here''" "indication." "" vacation(1)
.xx "" "syscall, __syscall:" "indirect system call." "" syscall(2)
.xx "" "fsplit: split a multi-routine Fortran file into" "individual files." "" fsplit(1)
.xx "" "" "inet: Internet protocol family." "" inet(4)
.xx "inet_lnaof, inet_netof: Internet/" "inet_aton," "inet_addr, inet_network, inet_ntoa, inet_makeaddr," "" inet(3)
.xx "inet_makeaddr, inet_lnaof, inet_netof: Internet/" "" "inet_aton, inet_addr, inet_network, inet_ntoa," "" inet(3)
.xx "" "" "inetd: internet super-server." "" inetd(8)
.xx "" "/inet_addr, inet_network, inet_ntoa, inet_makeaddr," "inet_lnaof, inet_netof: Internet address/" "" inet(3)
.xx "" "inet_aton, inet_addr, inet_network, inet_ntoa," "inet_makeaddr, inet_lnaof, inet_netof: Internet/" "" inet(3)
.xx "" "/inet_network, inet_ntoa, inet_makeaddr, inet_lnaof," "inet_netof: Internet address manipulation routines." "" inet(3)
.xx "inet_netof: Internet address/" "inet_aton, inet_addr," "inet_network, inet_ntoa, inet_makeaddr, inet_lnaof," "" inet(3)
.xx "Internet/" "inet_aton, inet_addr, inet_network," "inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof:" "" inet(3)
.xx "" "isinf, isnan: test for" "infinity or not-a-number (\*(Na)." "" isinf(3)
.xx "on a VAX (temporary)." "" "infnan: signals invalid floating\-point operations" "" infnan(3)
.xx "" "bad144: read/write dec standard 144 bad sector" "information." "" bad144(8)
.xx "" "chpass: add or change user database" "information." "" chpass(1)
.xx "" "dumpfs: dump file system" "information." "" dumpfs(8)
.xx "" "dumplfs: dump file system" "information." "" dumplfs(8)
.xx "" "fsinfo: co-ordinate site-wide filesystem" "information." "" fsinfo(8)
.xx "" "pac: printer/plotter accounting" "information." "" pac(8)
.xx "" "sysctl: get or set system" "information." "" sysctl(3)
.xx "" "ttys: terminal initialization" "information." "" ttys(5)
.xx "" "tzfile: time zone" "information." "" tzfile(5)
.xx "" "tzset, tzsetwall: initialize time conversion" "information." "" tzset(3)
.xx "" "getmntinfo: get" "information about mounted file systems." "" getmntinfo(3)
.xx "" "rlog: print log messages and other" "information about RCS files." "" rlog(1)
.xx "" "getrusage: get" "information about resource utilization." "" getrusage(2)
.xx "" "vtimes: get" "information about resource utilization." "" vtimes(3)
.xx "" "fstab: static" "information about the filesystems." "" fstab(5)
.xx "" "uname: display" "information about the system." "" uname(1)
.xx "" "strip: remove unnecessary" "information from executable files." "" strip(1)
.xx "" "strmode: convert inode status" "information into a symbolic string." "" strmode(3)
.xx "" "finger: user" "information lookup program." "" finger(1)
.xx "" "intro: miscellaneous" "information pages." "" intro(7)
.xx "" "XNSrouted: NS Routing" "Information Protocol daemon." "" XNSrouted(8)
.xx "" "fingerd: remote user" "information server." "" fingerd(8)
.xx "" "addftinfo: add" "information to troff font files for use with groff." "" addftinfo(1)
.xx "" "" "init: process control initialization." "" init(8)
.xx "" "" "initgroups: initialize group access list." "" initgroups(3)
.xx "" "init: process control" "initialization." "" init(8)
.xx "" "tset: terminal" "initialization." "" tset(1)
.xx "" "ttys: terminal" "initialization information." "" ttys(5)
.xx "" "initgroups:" "initialize group access list." "" initgroups(3)
.xx "database." "kdb_init:" "initialize Kerberos key distribution center" "" kdb_init(8)
.xx "" "kvm_open, kvm_openfiles, kvm_close:" "initialize kernel virtual memory access." "" kvm_open(3)
.xx "" "tzset, tzsetwall:" "initialize time conversion information." "" tzset(3)
.xx "" "calloc: allocate clean memory (zero" "initialized space)." "" calloc(3)
.xx "" "connect:" "initiate a connection on a socket." "" connect(2)
.xx "generator; routines for changing/" "random, srandom," "initstate, setstate: better random number" "" random(3)
.xx "database operations." "getnetgrent," "innetgr, setnetgrent, endnetgrent: netgroup" "" getnetgrent(3)
.xx "" "clri: clear" "i-node." "" clri(8)
.xx "" "fs," "inode: format of file system volume." "" fs(5)
.xx "" "strmode: convert" "inode status information into a symbolic string." "" strmode(3)
.xx "" "col: filter reverse line feeds from" "input." "" col(1)
.xx "" "read, readv: read" "input." "" read(2)
.xx "" "soelim: eliminate \&.so's from nroff" "input." "" soelim(1)
.xx "" "bcd, ppt, morse: reformat" "input as punch cards, paper tape or morse code." "" bcd(6)
.xx "" "scanf, fscanf, sscanf, vscanf, vsscanf, vfscanf:" "input format conversion." "" scanf(3)
.xx "" "getchar, getw: get next character or word from" "input stream." "fgetc, getc," getc(3)
.xx "" "ungetc: un-get character from" "input stream." "" ungetc(3)
.xx "" "fread, fwrite: binary stream" "input/output." "" fread(3)
.xx "" "stdio: standard" "input/output library functions." "" stdio(3)
.xx "" "pig: eformatray" "inputway asway Igpay Atinlay." "" pig(6)
.xx "" "insque, remque:" "insert/remove element from a queue." "" insque(3)
.xx "" "" "insque, remque: insert/remove element from a queue." "" insque(3)
.xx "" "install:" "install binaries." "" install(1)
.xx "" "" "install: install binaries." "" install(1)
.xx "" "learn: computer aided" "instruction about." "" learn(1)
.xx "number." "modf: extract signed" "integral and fractional values from floating-point" "" modf(3)
.xx "" "convert floating-point number to fractional and" "integral components." "frexp:" frexp(3)
.xx "" "ldexp: mutliply floating-point number by" "integral power of 2." "" ldexp(3)
.xx "" "ceil: smallest" "integral value not greater than x." "" ceil(3)
.xx "" "floor: largest" "integral value not greater than x." "" floor(3)
.xx "" "fsck: filesystem consistency check and" "interactive repair." "" fsck(8)
.xx "" "nslookup: query Internet name servers" "interactively." "" nslookup(1)
.xx "" "network address conversion routines for Open System" "Interconnection." "iso_addr, iso_ntoa: elementary" iso_addr(3)
.xx "" "fortune: print a random, hopefully" "interesting, adage." "" fortune(6)
.xx "" "cons: HP300 console" "interface." "" cons(4)
.xx "" "\&ct: CS/80 cartridge tape" "interface." "" ct(4)
.xx "" "dca: HP 98644A communications" "interface." "" dca(4)
.xx "" "dv: HP98730 ``DaVinci'' device" "interface." "" dv(4)
.xx "" "gb: HP98700 ``Gatorbox'' device" "interface." "" gb(4)
.xx "" "grf: HP graphics frame buffer device" "interface." "" grf(4)
.xx "" "kvm: kernel memory" "interface." "" kvm(3)
.xx "" "le: AMD 7990 LANCE ethernet" "interface." "" le(4)
.xx "" "le: HP AMD 7990 LANCE Ethernet" "interface." "" le(4)
.xx "" "lo: software loopback network" "interface." "" lo(4)
.xx "" "openprom: OPENPROM and EEPROM" "interface." "" openprom(4)
.xx "" "cont, point, linemod, space, closepl: graphics" "interface." "/erase, label, line, circle, arc, move," plot(3)
.xx "" "plot: graphics" "interface." "" plot(5)
.xx "" "ppi: HP-IB printer/plotter" "interface." "" ppi(4)
.xx "" "rb: HP98720 ``Renaissance'' device" "interface." "" rb(4)
.xx "" "rd: CS/80 disk" "interface." "" rd(4)
.xx "" "sliplogin: attach a serial line network" "interface." "" sliplogin(8)
.xx "" "stty: set the options for a terminal device" "interface." "" stty(1)
.xx "" "HP98544 98550 ``Topcat'' and ``Catseye'' device" "interface." "\&tc:" tc(4)
.xx "" "tput: terminal capability" "interface." "" tput(1)
.xx "" "tty: general terminal" "interface." "" tty(4)
.xx "" "nsip: software network" "interface encapsulating NS packets in IP packets." "" nsip(4)
.xx "" "hil: Human" "Interface Link device driver." "" hil(4)
.xx "" "ifconfig: configure network" "interface parameters." "" ifconfig(8)
.xx "" "telnet: user" "interface to the  TELNET protocol." "" telnet(1)
.xx "" "slattach: attach serial lines as network" "interfaces." "" slattach(8)
.xx "" "route: manually manipulate the routing tables" "(Interim)." "" route(8)
.xx "" "swapon: add a swap device for" "interleaved paging/swapping." "" swapon(2)
.xx "" "groff_out: groff" "intermediate output format." "" groff_out(5)
.xx "" "es-is: End System to" "Intermediate System Routing Protocol." "" esis(4)
.xx "" "update: flush" "internal filesystem caches to disk frequently." "" update(8)
.xx "" "ite: HP" "Internal Terminal Emulator." "" ite(4)
.xx "" "sendmail: send mail over the" "internet." "" sendmail(8)
.xx "" "/inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof:" "Internet address manipulation routines." "" inet(3)
.xx "" "icmp:" "Internet Control Message Protocol." "" icmp(4)
.xx "" "idp: Xerox" "Internet Datagram Protocol." "" idp(4)
.xx "" "named:" "Internet domain name server." "" named(8)
.xx "" "ftpd:" "Internet File Transfer Protocol server." "" ftpd(8)
.xx "" "nslookup: query" "Internet name servers interactively." "" nslookup(1)
.xx "" "ip:" "Internet Protocol." "" ip(4)
.xx "" "inet:" "Internet protocol family." "" inet(4)
.xx "" "inetd:" "internet super-server." "" inetd(8)
.xx "" "tcp:" "Internet Transmission Control Protocol." "" tcp(4)
.xx "" "tftpd:" "Internet Trivial File Transfer Protocol server." "" tftpd(8)
.xx "" "udp:" "Internet User Datagram Protocol." "" udp(4)
.xx "" "whois:" "Internet user name directory service." "" whois(1)
.xx "" "spline:" "interpolate smooth curve." "" spline(1)
.xx "" "uuxqt: UUCP execution file" "interpreter." "" uuxqt(8)
.xx "" "sh: command" "interpreter (shell)." "" sh(1)
.xx "" "csh: a shell (command" "interpreter) with C-like syntax." "" csh(1)
.xx "" "pipe: create descriptor pair for" "interprocess communication." "" pipe(2)
.xx "" "atomically release blocked signals and wait for" "interrupt." "sigpause:" sigpause(2)
.xx "" "atomically release blocked signals and wait for" "interrupt." "sigsuspend:" sigsuspend(2)
.xx "" "siginterrupt: allow signals to" "interrupt system calls." "" siginterrupt(3)
.xx "" "onintr: process" "interrupts in command scripts." "" csh(1)
.xx "" "phantasia: an" "interterminal fantasy game." "" phantasia(6)
.xx "utilities)." "intro:" "introduction to general commands (tools and" "" intro(1)
.xx "" "math:" "introduction to mathematical library functions." "" math(3)
.xx "" "networking:" "introduction to networking facilities." "" netintro(4)
.xx "" "rcsintro:" "introduction to RCS commands." "" rcsintro(1)
.xx "" "intro:" "introduction to special files and hardware support." "" intro(4)
.xx "" "intro:" "introduction to system calls and error numbers." "" intro(2)
.xx "commands." "intro:" "introduction to system maintenance and operation" "" intro(8)
.xx "" "intro:" "introduction to the C libraries." "" intro(3)
.xx "" "kerberos:" "introduction to the Kerberos system." "" kerberos(1)
.xx "" "ncheck: generate names from" "i-numbers." "" ncheck(8)
.xx "(temporary)." "infnan: signals" "invalid floating\-point operations on a VAX" "" infnan(3)
.xx "" "acosh:" "inverse hyperbolic cosine function." "" acosh(3)
.xx "" "asinh:" "inverse hyperbolic sine function." "" asinh(3)
.xx "" "atanh:" "inverse hyperbolic tangent function." "" atanh(3)
.xx "mout, move, msqrt, msub, mult,/" "fmin, fmout, gcd," "invert, itom m_in, m_out, madd, mcmp, mdiv, min," "" mp(3)
.xx "index." "" "invert, lookup: create and access an inverted" "" invert(1)
.xx "" "invert, lookup: create and access an" "inverted index." "" invert(1)
.xx "" "@g@indxbib: make" "inverted index for bibliographic databases." "" indxbib(1)
.xx "" "nohup:" "invoke a command immune to hangups." "" nohup(1)
.xx "" "popen, pclose: process" "I/O." "" popen(3)
.xx "" "select: synchronous" "I/O multiplexing." "" select(2)
.xx "" "nfsiod: local NFS asynchronous" "I/O server." "" nfsiod(8)
.xx "" "iostat: report" "I/O statistics." "" iostat(8)
.xx "" "" "ioctl: control device." "" ioctl(2)
.xx "" "" "iostat: report I/O statistics." "" iostat(8)
.xx "" "" "ip: Internet Protocol." "" ip(4)
.xx "" "network interface encapsulating NS packets in" "IP packets." "nsip: software" nsip(4)
.xx "" "sail: multi-user wooden ships and" "iron men." "" sail(6)
.xx "" "" "isalnum: alphanumeric character test." "" isalnum(3)
.xx "isdigit, isgraph, islower, isprint, ispunct,/" "" "isalnum, isalpha, isascii, isblank, iscntrl," "" ctype(3)
.xx "" "" "isalpha: alphabetic character test." "" isalpha(3)
.xx "isgraph, islower, isprint, ispunct,/" "isalnum," "isalpha, isascii, isblank, iscntrl, isdigit," "" ctype(3)
.xx "islower, isprint, ispunct,/" "isalnum, isalpha," "isascii, isblank, iscntrl, isdigit, isgraph," "" ctype(3)
.xx "" "" "isascii: test for ASCII character." "" isascii(3)
.xx "(tty) from file descriptor." "ttyname," "isatty, ttyslot: get name of associated terminal" "" ttyname(3)
.xx "isprint, ispunct,/" "isalnum, isalpha, isascii," "isblank, iscntrl, isdigit, isgraph, islower," "" ctype(3)
.xx "" "" "isblank: space or tab character test." "" isblank(3)
.xx "" "" "iscntrl: control character test." "" iscntrl(3)
.xx "ispunct,/" "isalnum, isalpha, isascii, isblank," "iscntrl, isdigit, isgraph, islower, isprint," "" ctype(3)
.xx "" "" "isdigit: decimal-digit character test." "" isdigit(3)
.xx "" "isalnum, isalpha, isascii, isblank, iscntrl," "isdigit, isgraph, islower, isprint, ispunct,/" "" ctype(3)
.xx "" "/isalpha, isascii, isblank, iscntrl, isdigit," "isgraph, islower, isprint, ispunct, isspace,/" "" ctype(3)
.xx "exculsive)." "" "isgraph: printing character test (space character" "" isgraph(3)
.xx "(\*(Na)." "" "isinf, isnan: test for infinity or not-a-number" "" isinf(3)
.xx "" "/isascii, isblank, iscntrl, isdigit, isgraph," "islower, isprint, ispunct, isspace, isupper,/" "" ctype(3)
.xx "" "" "islower: lower-case character test." "" islower(3)
.xx "" "isinf," "isnan: test for infinity or not-a-number (\*(Na)." "" isinf(3)
.xx "" "cltp:" "ISO Connectionless Transport Protocol." "" cltp(4)
.xx "" "" "iso: ISO protocol family." "" iso(4)
.xx "" "iso:" "ISO protocol family." "" iso(4)
.xx "" "TP:" "ISO Transport Protocol." "" tp(4)
.xx "conversion routines for Open System/" "" "iso_addr, iso_ntoa: elementary network address" "" iso_addr(3)
.xx "routines for Open System/" "iso_addr," "iso_ntoa: elementary network address conversion" "" iso_addr(3)
.xx "" "/isblank, iscntrl, isdigit, isgraph, islower," "isprint, ispunct, isspace, isupper, isxdigit,/" "" ctype(3)
.xx "inclusive)." "" "isprint: printing character test (space character" "" isprint(3)
.xx "" "/iscntrl, isdigit, isgraph, islower, isprint," "ispunct, isspace, isupper, isxdigit, toascii/" "" ctype(3)
.xx "" "" "ispunct: punctuation character test." "" ispunct(3)
.xx "" "/isdigit, isgraph, islower, isprint, ispunct," "isspace, isupper, isxdigit, toascii tolower,/" "" ctype(3)
.xx "" "" "isspace: white-space character test." "" isspace(3)
.xx "" "/isgraph, islower, isprint, ispunct, isspace," "isupper, isxdigit, toascii tolower, toupper,:/" "" ctype(3)
.xx "" "" "isupper: upper-case character test." "" isupper(3)
.xx "" "" "isxdigit: hexadecimal-digit character test." "" isxdigit(3)
.xx "" "/islower, isprint, ispunct, isspace, isupper," "isxdigit, toascii tolower, toupper,: character/" "" ctype(3)
.xx "" "" "ite: HP Internal Terminal Emulator." "" ite(4)
.xx "move, msqrt, msub, mult,/" "fmin, fmout, gcd, invert," "itom m_in, m_out, madd, mcmp, mdiv, min, mout," "" mp(3)
.xx "and second kind." "" "j0, j1, jn, y0, y1, yn: bessel functions of first" "" j0(3)
.xx "second kind." "j0," "j1, jn, y0, y1, yn: bessel functions of first and" "" j0(3)
.xx "second kind." "j0, j1," "jn, y0, y1, yn: bessel functions of first and" "" j0(3)
.xx "" "bg: place" "job in background." "" csh(1)
.xx "" "fg: bring" "job into foreground." "" csh(1)
.xx "" "jobs: print current" "job list." "" csh(1)
.xx "" "stop: halt a" "job or process." "" csh(1)
.xx "" "atq: display the at(1)" "job queue." "" atq(1)
.xx "" "kill: kill" "jobs and processes." "" csh(1)
.xx "" "lprm: remove" "jobs from the line printer spooling queue." "" lprm(1)
.xx "" "" "jobs: print current job list." "" csh(1)
.xx "" "atrm: remove" "jobs spooled by at(1)." "" atrm(1)
.xx "" "" "join: relational database operator." "" join(1)
.xx "" "" "jot: print sequential or random data." "" jot(1)
.xx "" "longjmp, _setjmp, _longjmp longjmperror: non-local" "jumps." "sigsetjmp, siglongjmp, setjmp," setjmp(3)
.xx "" "msgs: system messages and" "junk mail program." "" msgs(1)
.xx "center database." "" "kdb_destroy: destroy Kerberos key distribution" "" kdb_destroy(8)
.xx "editing utility." "" "kdb_edit: Kerberos key distribution center database" "" kdb_edit(8)
.xx "center database." "" "kdb_init: initialize Kerberos key distribution" "" kdb_init(8)
.xx "utility." "" "kdb_util: Kerberos key distribution center database" "" kdb_util(8)
.xx "" "" "kdestroy: destroy Kerberos tickets." "" kdestroy(1)
.xx "" "" "kdump: display kernel trace data." "" kdump(1)
.xx "" "register: register with" "Kerberos." "" register(1)
.xx "" "krb_rd_safe, krb_mk_err, krb_rd_err, krb_ck_repl:" "Kerberos authentication library." "/krb_mk_safe," krb(3)
.xx "" "/etc/kerberosIV/krb.conf:" "Kerberos configuration file." "" krb.conf(5)
.xx "" "make_keypair: generate" "Kerberos host key pair." "" make_keypair(8)
.xx "" "" "kerberos: introduction to the Kerberos system." "" kerberos(1)
.xx "" "ext_srvtab: extract service key files from" "Kerberos key distribution center database." "" ext_srvtab(8)
.xx "" "kdb_destroy: destroy" "Kerberos key distribution center database." "" kdb_destroy(8)
.xx "" "kdb_init: initialize" "Kerberos key distribution center database." "" kdb_init(8)
.xx "utility." "kdb_edit:" "Kerberos key distribution center database editing" "" kdb_edit(8)
.xx "key." "kstash: stash" "Kerberos key distribution center database master" "" kstash(8)
.xx "" "kdb_util:" "Kerberos key distribution center database utility." "" kdb_util(8)
.xx "" "kinit:" "Kerberos login utility." "" kinit(1)
.xx "" "kpasswdd:" "Kerberos password changing daemon." "" kpasswdd(8)
.xx "" "/etc/kerberosIV/krb.realms: host to" "Kerberos realm translation file." "" krb.realms(5)
.xx "" "registerd:" "Kerberos registration daemon." "" registerd(8)
.xx "network/" "/krb_recvauth, krb_net_write, krb_net_read:" "Kerberos routines for sending authentication via" "" krb_sendauth(3)
.xx "" "kerberos: introduction to the" "Kerberos system." "" kerberos(1)
.xx "" "krb_set_tkt_string: set" "Kerberos ticket cache file name." "" krb_set_tkt_string(3)
.xx "" "tf_get_cred, tf_close: routines for manipulating a" "Kerberos ticket file." "/tf_get_pname, tf_get_pinst," tf_util(3)
.xx "key." "ksrvtgt: fetch and store" "Kerberos ticket-granting-ticket using a service" "" ksrvtgt(1)
.xx "" "kdestroy: destroy" "Kerberos tickets." "" kdestroy(1)
.xx "" "klist: list currently held" "Kerberos tickets." "" klist(1)
.xx "" "krb_get_admhst, krb_get_lrealm: additional" "Kerberos utility routines." "/krb_get_krbhst," krb_realmofhost(3)
.xx "" "kuserok:" "Kerberos version of ruserok." "" kuserok(3)
.xx "" "mount_kernfs: mount the" "/kern file system." "" mount_kernfs(8)
.xx "" "kvm_mkdb: create" "kernel database." "" kvm_mkdb(8)
.xx "" "kvm_nlist: retrieve symbol table names from a" "kernel image." "" kvm_nlist(3)
.xx "" "kvm:" "kernel memory interface." "" kvm(3)
.xx "" "route:" "kernel packet forwarding database." "" route(4)
.xx "" "ktrace: enable" "kernel process tracing." "" ktrace(1)
.xx "" "sysctl: get or set" "kernel state." "" sysctl(8)
.xx "" "kdump: display" "kernel trace data." "" kdump(1)
.xx "" "kvm_read, kvm_write: read or write" "kernel virtual memory." "" kvm_read(3)
.xx "" "kvm_open, kvm_openfiles, kvm_close: initialize" "kernel virtual memory access." "" kvm_open(3)
.xx "" "chkey: change your encryption" "key." "" chkey(1)
.xx "" "keylogin: decrypt and store secret" "key." "" keylogin(1)
.xx "" "Kerberos ticket-granting-ticket using a service" "key." "ksrvtgt: fetch and store" ksrvtgt(1)
.xx "" "Kerberos key distribution center database master" "key." "kstash: stash" kstash(8)
.xx "" "publickey: public" "key database." "" publickey(5)
.xx "" "ext_srvtab: extract service key files from Kerberos" "key distribution center database." "" ext_srvtab(8)
.xx "" "kdb_destroy: destroy Kerberos" "key distribution center database." "" kdb_destroy(8)
.xx "" "kdb_init: initialize Kerberos" "key distribution center database." "" kdb_init(8)
.xx "" "kdb_edit: Kerberos" "key distribution center database editing utility." "" kdb_edit(8)
.xx "" "kstash: stash Kerberos" "key distribution center database master key." "" kstash(8)
.xx "" "kdb_util: Kerberos" "key distribution center database utility." "" kdb_util(8)
.xx "database." "ext_srvtab: extract service" "key files from Kerberos key distribution center" "" ext_srvtab(8)
.xx "" "make_keypair: generate Kerberos host" "key pair." "" make_keypair(8)
.xx "" "mset: retrieve ASCII to IBM 3270" "keyboard map." "" mset(1)
.xx "" "" "keylogin: decrypt and store secret key." "" keylogin(1)
.xx "" "database for mapping ascii keystrokes into IBM 3270" "keys." "map3270:" map3270(5)
.xx "" "makekey: make encrypted" "keys or passwords." "" makekey(8)
.xx "" "map3270: database for mapping ascii" "keystrokes into IBM 3270 keys." "" map3270(5)
.xx "" "apropos: locate commands by" "keyword lookup." "" apropos(1)
.xx "profile buffers." "" "kgmon: generate a dump of the operating system's" "" kgmon(8)
.xx "" "kill:" "kill jobs and processes." "" csh(1)
.xx "" "" "kill: kill jobs and processes." "" csh(1)
.xx "" "" "kill: send signal to a process." "" kill(2)
.xx "" "" "kill: terminate or signal a process." "" kill(1)
.xx "" "" "killpg: send signal to a process group." "" killpg(2)
.xx "" "y0, y1, yn: bessel functions of first and second" "kind." "j0, j1, jn," j0(3)
.xx "" "" "kinit: Kerberos login utility." "" kinit(1)
.xx "" "" "klist: list currently held Kerberos tickets." "" klist(1)
.xx "" "mem," "kmem: main memory." "" mem(4)
.xx "" "" "kpasswdd: Kerberos password changing daemon." "" kpasswdd(8)
.xx "" "/krb_mk_safe, krb_rd_safe, krb_mk_err, krb_rd_err," "krb_ck_repl: Kerberos authentication library." "" krb(3)
.xx "" "krb_realmofhost, krb_get_phost, krb_get_krbhst," "krb_get_admhst, krb_get_lrealm: additional Kerberos/" "" krb_realmofhost(3)
.xx "" "krb_mk_req, krb_rd_req, krb_kntoln, krb_set_key," "krb_get_cred, krb_mk_priv, krb_rd_priv,/" "" krb(3)
.xx "additional/" "krb_realmofhost, krb_get_phost," "krb_get_krbhst, krb_get_admhst, krb_get_lrealm:" "" krb_realmofhost(3)
.xx "" "/krb_get_phost, krb_get_krbhst, krb_get_admhst," "krb_get_lrealm: additional Kerberos utility/" "" krb_realmofhost(3)
.xx "krb_get_lrealm: additional/" "krb_realmofhost," "krb_get_phost, krb_get_krbhst, krb_get_admhst," "" krb_realmofhost(3)
.xx "krb_rd_priv, krb_mk_safe,/" "krb_mk_req, krb_rd_req," "krb_kntoln, krb_set_key, krb_get_cred, krb_mk_priv," "" krb(3)
.xx "" "/krb_mk_priv, krb_rd_priv, krb_mk_safe, krb_rd_safe," "krb_mk_err, krb_rd_err, krb_ck_repl: Kerberos/" "" krb(3)
.xx "" "/krb_rd_req, krb_kntoln, krb_set_key, krb_get_cred," "krb_mk_priv, krb_rd_priv, krb_mk_safe, krb_rd_safe,/" "" krb(3)
.xx "krb_get_cred, krb_mk_priv, krb_rd_priv,/" "" "krb_mk_req, krb_rd_req, krb_kntoln, krb_set_key," "" krb(3)
.xx "" "/krb_get_cred, krb_mk_priv, krb_rd_priv," "krb_mk_safe, krb_rd_safe, krb_mk_err, krb_rd_err,/" "" krb(3)
.xx "" "krb_sendauth, krb_recvauth, krb_net_write," "krb_net_read: Kerberos routines for sending/" "" krb_sendauth(3)
.xx "sending authentication/" "krb_sendauth, krb_recvauth," "krb_net_write, krb_net_read: Kerberos routines for" "" krb_sendauth(3)
.xx "" "/krb_rd_priv, krb_mk_safe, krb_rd_safe, krb_mk_err," "krb_rd_err, krb_ck_repl: Kerberos authentication/" "" krb(3)
.xx "" "/krb_kntoln, krb_set_key, krb_get_cred, krb_mk_priv," "krb_rd_priv, krb_mk_safe, krb_rd_safe, krb_mk_err,/" "" krb(3)
.xx "krb_mk_priv, krb_rd_priv, krb_mk_safe,/" "krb_mk_req," "krb_rd_req, krb_kntoln, krb_set_key, krb_get_cred," "" krb(3)
.xx "Kerberos/" "/krb_mk_priv, krb_rd_priv, krb_mk_safe," "krb_rd_safe, krb_mk_err, krb_rd_err, krb_ck_repl:" "" krb(3)
.xx "krb_get_admhst, krb_get_lrealm: additional/" "" "krb_realmofhost, krb_get_phost, krb_get_krbhst," "" krb_realmofhost(3)
.xx "routines for sending authentication/" "krb_sendauth," "krb_recvauth, krb_net_write, krb_net_read: Kerberos" "" krb_sendauth(3)
.xx "krb_net_read: Kerberos routines for sending/" "" "krb_sendauth, krb_recvauth, krb_net_write," "" krb_sendauth(3)
.xx "krb_rd_priv,/" "krb_mk_req, krb_rd_req, krb_kntoln," "krb_set_key, krb_get_cred, krb_mk_priv," "" krb(3)
.xx "name." "" "krb_set_tkt_string: set Kerberos ticket cache file" "" krb_set_tkt_string(3)
.xx "ticket-granting-ticket using a service key." "" "ksrvtgt: fetch and store Kerberos" "" ksrvtgt(1)
.xx "database master key." "" "kstash: stash Kerberos key distribution center" "" kstash(8)
.xx "" "" "ktrace: enable kernel process tracing." "" ktrace(1)
.xx "" "" "ktrace: process tracing." "" ktrace(2)
.xx "" "" "kuserok: Kerberos version of ruserok." "" kuserok(3)
.xx "" "kvm_geterr: get error message on" "kvm descriptor." "" kvm_geterr(3)
.xx "" "kvm_getloadavg: get error message on" "kvm descriptor." "" kvm_getloadavg(3)
.xx "" "" "kvm: kernel memory interface." "" kvm(3)
.xx "" "kvm_open, kvm_openfiles," "kvm_close: initialize kernel virtual memory access." "" kvm_open(3)
.xx "state." "kvm_getprocs," "kvm_getargv, kvm_getenvv: access user process" "" kvm_getprocs(3)
.xx "" "kvm_getprocs, kvm_getargv," "kvm_getenvv: access user process state." "" kvm_getprocs(3)
.xx "" "" "kvm_geterr: get error message on kvm descriptor." "" kvm_geterr(3)
.xx "" "" "kvm_getfiles: survey open files." "" kvm_getfiles(3)
.xx "descriptor." "" "kvm_getloadavg: get error message on kvm" "" kvm_getloadavg(3)
.xx "process state." "" "kvm_getprocs, kvm_getargv, kvm_getenvv: access user" "" kvm_getprocs(3)
.xx "" "" "kvm_mkdb: create kernel database." "" kvm_mkdb(8)
.xx "kernel image." "" "kvm_nlist: retrieve symbol table names from a" "" kvm_nlist(3)
.xx "kernel virtual memory access." "" "kvm_open, kvm_openfiles, kvm_close: initialize" "" kvm_open(3)
.xx "memory access." "kvm_open," "kvm_openfiles, kvm_close: initialize kernel virtual" "" kvm_open(3)
.xx "memory." "" "kvm_read, kvm_write: read or write kernel virtual" "" kvm_read(3)
.xx "" "kvm_read," "kvm_write: read or write kernel virtual memory." "" kvm_read(3)
.xx "" "disklabel: disk pack" "label." "" disklabel.5(5)
.xx "" "disklabel: read and write disk pack" "label." "" disklabel(8)
.xx "linemod, space, closepl:/" "plot: openpl, erase," "label, line, circle, arc, move, cont, point," "" plot(3)
.xx "" "" "labs: return the absolute value of a long integer." "" labs(3)
.xx "" "" "L.aliases: UUCP hostname alias file." "" L.aliases(5)
.xx "" "yacc: an" "LALR(1) parser generator." "" yacc(1)
.xx "" "" "lam: laminate files." "" lam(1)
.xx "" "lam:" "laminate files." "" lam(1)
.xx "" "le: AMD 7990" "LANCE ethernet interface." "" le(4)
.xx "" "le: HP AMD 7990" "LANCE Ethernet interface." "" le(4)
.xx "" "awk: pattern scanning and processing" "language." "" awk(1)
.xx "" "perl: practical extraction and report" "language." "" perl(1)
.xx "" "\&bc: arbitrary-precision arithmetic" "language and calculator." "" bc(1)
.xx "" "vgrindefs:" "language definition data base for vgrind(1)." "" vgrindefs(5)
.xx "" "setlocale, localeconv: natural" "language formatting for C." "" setlocale(3)
.xx "" "m4: macro" "language preprocessor for ratfor(1) and pascal(1)." "" m4(1)
.xx "" "floor:" "largest integral value not greater than x." "" floor(3)
.xx "" "larn: exploring the caverns of" "Larn." "" larn(6)
.xx "" "" "larn: exploring the caverns of Larn." "" larn(6)
.xx "order." "" "lastcomm: show last commands executed in reverse" "" lastcomm(1)
.xx "" "utmp, wtmp," "lastlog: login records." "" utmp(5)
.xx "" "demonstrate the use of a null file system" "layer." "mount_null:" mount_null(8)
.xx "" "mount_umap: sample file system" "layer." "" mount_umap(8)
.xx "" "hier:" "layout of filesystems." "" hier(7)
.xx "" "mklocale: make" "LC_CTYPE locale files." "" mklocale(1)
.xx "" "" "L.cmds: UUCP remote command permissions file." "" L.cmds(5)
.xx "" "" "ld: link editor." "" ld(1)
.xx "" "" "L-devices: UUCP device description file." "" L-devices(5)
.xx "power of 2." "" "ldexp: mutliply floating-point number by integral" "" ldexp(3)
.xx "" "" "L-dialcodes: UUCP phone number index file." "" L-dialcodes(5)
.xx "" "" "ldiv: return quotient and remainder from division." "" ldiv(3)
.xx "" "" "le: AMD 7990 LANCE ethernet interface." "" le(4)
.xx "" "" "le: HP AMD 7990 LANCE Ethernet interface." "" le(4)
.xx "" "" "learn: computer aided instruction about." "" learn(1)
.xx "" "leave: remind you when you have to" "leave." "" leave(1)
.xx "" "" "leave: remind you when you have to leave." "" leave(1)
.xx "" "exit:" "leave shell." "" csh(1)
.xx "" "getusershell, setusershell, endusershell: get" "legal user shells." "" getusershell(3)
.xx "" "truncate, ftruncate: truncate a file to a specified" "length." "" truncate(2)
.xx "" "strlen: find" "length of string." "" strlen(3)
.xx "" "tolower: upper case to lower case" "letter conversion." "" tolower(3)
.xx "" "toupper: lower case to upper case" "letter conversion." "" toupper(3)
.xx "" "elementary address specification routines for link" "level access." "link_addr, link_ntoa:" link_addr(3)
.xx "" "elementary address specification routines for link" "level access." "link_addr, link_ntoa:" linkaddr(3)
.xx "" "" "lex: fast lexical analyzer generator." "" lex(1)
.xx "" "lex: fast" "lexical analyzer generator." "" lex(1)
.xx "" "lsearch," "lfind,: linear searching routines." "" lsearch(3)
.xx "" "newlfs: construct a new" "LFS file system." "" newlfs(8)
.xx "system." "" "lfs_cleanerd: garbage collect a log-structured file" "" lfs_cleanerd(8)
.xx "" "" "lgamma gamma: log gamma function, gamma function." "" lgamma(3)
.xx "" "intro: introduction to the C" "libraries." "" intro(3)
.xx "" "ranlib: table-of-contents for archive" "libraries." "" ranlib(1)
.xx "" "krb_rd_err, krb_ck_repl: Kerberos authentication" "library." "/krb_mk_safe, krb_rd_safe, krb_mk_err," krb(3)
.xx "" "regexec, regerror, regfree: regular-expression" "library." "regcomp," regex(3)
.xx "" "ar: create and maintain" "library archives." "" ar(1)
.xx "" "ar: archive" "(library) file format." "" ar.5(5)
.xx "" "math: introduction to mathematical" "library functions." "" math(3)
.xx "" "stdio: standard input/output" "library functions." "" stdio(3)
.xx "" "ranlib: archive" "(library) table-of-contents format." "" ranlib.5(5)
.xx "" "" "limit: alter per-process resource limitations." "" csh(1)
.xx "" "limit: alter per-process resource" "limitations." "" csh(1)
.xx "" "unlimit: remove resource" "limitiations." "" csh(1)
.xx "" "quota: display disk usage and" "limits." "" quota(1)
.xx "" "wc: word," "line, and byte count." "" wc(1)
.xx "" "getopt: get option character from command" "line argument list." "" getopt(3)
.xx "" "acucntrl: turn around tty" "line between dialin and dialout." "" acucntrl(8)
.xx "space, closepl:/" "plot: openpl, erase, label," "line, circle, arc, move, cont, point, linemod," "" plot(3)
.xx "" "tcsendbreak, tcdrain, tcflush, tcflow:" "line control functions." "" tcsendbreak(3)
.xx "" "termios: general terminal" "line discipline." "" termios(4)
.xx "" "col: filter reverse" "line feeds from input." "" col(1)
.xx "" "fgetline: get a" "line from a stream." "" fgetline(3)
.xx "" "fgets, gets: get a" "line from a stream." "" fgets(3)
.xx "" "sliplogin: attach a serial" "line network interface." "" sliplogin(8)
.xx "" "cut: select portions of each" "line of a file." "" cut(1)
.xx "" "lpr: off" "line print." "" lpr(1)
.xx "" "lpc:" "line printer control program." "" lpc(8)
.xx "" "lpd:" "line printer spooler daemon." "" lpd(8)
.xx "" "lprm: remove jobs from the" "line printer spooling queue." "" lprm(1)
.xx "" "fputs, puts: output a" "line to a stream." "" fputs(3)
.xx "" "lsearch, lfind,:" "linear searching routines." "" lsearch(3)
.xx "" "/erase, label, line, circle, arc, move, cont, point," "linemod, space, closepl: graphics interface." "" plot(3)
.xx "" "lptest: generate" "lineprinter ripple pattern." "" lptest(1)
.xx "" "unifdef: remove ifdef'ed" "lines." "" unifdef(1)
.xx "" "slattach: attach serial" "lines as network interfaces." "" slattach(8)
.xx "" "look: display" "lines beginning with a given string." "" look(1)
.xx "" "comm: select or reject" "lines common to two files." "" comm(1)
.xx "" "fold: fold long" "lines for finite width output device." "" fold(1)
.xx "" "uniq: report or filter out repeated" "lines in a file." "" uniq(1)
.xx "" "head: display first" "lines of a file." "" head(1)
.xx "" "rev: reverse" "lines of a file." "" rev(1)
.xx "" "paste: merge corresponding or subsequent" "lines of files." "" paste(1)
.xx "" "dcl: HP 98628A communications" "link." "" dcl(4)
.xx "" "link: make a hard file" "link." "" link(2)
.xx "" "readlink: read value of a symbolic" "link." "" readlink(2)
.xx "" "hil: Human Interface" "Link device driver." "" hil(4)
.xx "" "ld:" "link editor." "" ld(1)
.xx "" "symlink: symbolic" "link handling." "" symlink(7)
.xx "" "elementary address specification routines for" "link level access." "link_addr, link_ntoa:" link_addr(3)
.xx "" "elementary address specification routines for" "link level access." "link_addr, link_ntoa:" linkaddr(3)
.xx "" "" "link: make a hard file link." "" link(2)
.xx "" "symlink: make symbolic" "link to a file." "" symlink(2)
.xx "specification routines for link level access." "" "link_addr, link_ntoa: elementary address" "" link_addr(3)
.xx "specification routines for link level access." "" "link_addr, link_ntoa: elementary address" "" linkaddr(3)
.xx "routines for link level access." "link_addr," "link_ntoa: elementary address specification" "" link_addr(3)
.xx "routines for link level access." "link_addr," "link_ntoa: elementary address specification" "" linkaddr(3)
.xx "" "ln: make" "links." "" ln(1)
.xx "" "glob: filename expand argument" "list." "" csh(1)
.xx "" "history: print history event" "list." "" csh(1)
.xx "" "jobs: print current job" "list." "" csh(1)
.xx "" "shift: manipulate argument" "list." "" csh(1)
.xx "" "getgrouplist: calculate group access" "list." "" getgrouplist(3)
.xx "" "getgroups: get group access" "list." "" getgroups(2)
.xx "" "get option character from command line argument" "list." "getopt:" getopt(3)
.xx "" "initgroups: initialize group access" "list." "" initgroups(3)
.xx "" "mkdep: construct Makefile dependency" "list." "" mkdep(1)
.xx "" "setgroups: set group access" "list." "" setgroups(2)
.xx "" "symorder: rearrange name" "list." "" symorder(1)
.xx "" "users:" "list current users." "" users(1)
.xx "" "klist:" "list currently held Kerberos tickets." "" klist(1)
.xx "" "lorder:" "list dependencies for object files." "" lorder(1)
.xx "" "ls:" "list directory contents." "" ls(1)
.xx "" "nlist: retrieve symbol table name" "list from an executable file." "" nlist(3)
.xx "" "uuname:" "list names of UUCP hosts." "" uuname(1)
.xx "" "getfsstat: get" "list of all mounted filesystems." "" getfsstat(2)
.xx "" "foreach: loop over" "list of names." "" csh(1)
.xx "" "acl_add, acl_delete, acl_initialize: access control" "list routines." "/acl_check, acl_exact_match," acl_check(3)
.xx "" "nm: display name" "list (symbol table)." "" nm(1)
.xx "" "listen:" "listen for connections on a socket." "" listen(2)
.xx "" "" "listen: listen for connections on a socket." "" listen(2)
.xx "" "vgrind: grind nice" "listings of programs." "" vgrind(1)
.xx "" "bib," "listrefs, bibinc, bib2tib: bibliographic formatter." "" bib(1)
.xx "" "column: columnate" "lists." "" column(1)
.xx "" "stdarg: variable argument" "lists." "" stdarg(3)
.xx "" "xargs: construct argument" "list(s) and execute utility." "" xargs(1)
.xx "" "" "lkbib: search bibliographic databases." "" lkbib(1)
.xx "" "" "ln: make links." "" ln(1)
.xx "" "" "lo: software loopback network interface." "" lo(4)
.xx "" "getloadavg: get system" "load averages." "" getloadavg(3)
.xx "" "strxfrm: transform a string under" "locale." "" strxfrm(3)
.xx "" "mklocale: make LC_CTYPE" "locale files." "" mklocale(1)
.xx "" "setlocale," "localeconv: natural language formatting for C." "" setlocale(3)
.xx "value to ASCII." "asctime, ctime, difftime, gmtime," "localtime, mktime: transform binary date and time" "" ctime(3)
.xx "" "which:" "locate a program file including aliases and paths." "" which(1)
.xx "" "strstr:" "locate a substring in a string." "" strstr(3)
.xx "" "memchr:" "locate byte in byte string." "" memchr(3)
.xx "" "index:" "locate character in string." "" index(3)
.xx "" "rindex:" "locate character in string." "" rindex(3)
.xx "" "strchr:" "locate character in string." "" strchr(3)
.xx "" "strrchr:" "locate character in string." "" strrchr(3)
.xx "" "apropos:" "locate commands by keyword lookup." "" apropos(1)
.xx "" "" "locate: find files." "" locate(1)
.xx "" "strpbrk:" "locate multiple characters in string." "" strpbrk(3)
.xx "" "whereis:" "locate programs." "" whereis(1)
.xx "" "flock: apply or remove an advisory" "lock on an open file." "" flock(2)
.xx "" "" "lock: reserve a terminal." "" lock(1)
.xx "" "mlock, munlock:" "lock (unlock) physical pages in memory." "" mlock(2)
.xx "" "logger: make entries in the system" "log." "" logger(1)
.xx "" "openlog, closelog, setlogmask: control system" "log." "syslog, vsyslog," syslog(3)
.xx "" "uulog: display UUCP" "log entries." "" uulog(1)
.xx "" "lgamma gamma:" "log gamma function, gamma function." "" lgamma(3)
.xx "" "login:" "log into the computer." "" login(1)
.xx "power functions." "exp, expm1," "log, log10, log1p, pow: exponential, logarithm," "" exp(3)
.xx "" "rlog: print" "log messages and other information about RCS files." "" rlog(1)
.xx "" "syslogd:" "log systems messages." "" syslogd(8)
.xx "functions." "exp, expm1, log," "log10, log1p, pow: exponential, logarithm, power" "" exp(3)
.xx "functions." "exp, expm1, log, log10," "log1p, pow: exponential, logarithm, power" "" exp(3)
.xx "" "exp, expm1, log, log10, log1p, pow: exponential," "logarithm, power functions." "" exp(3)
.xx "" "copysign, drem, finite," "logb, scalb: IEEE 754 floating point support." "" ieee(3)
.xx "" "who: display who is" "logged in." "" who(1)
.xx "" "rwho: who is" "logged in on local machines." "" rwho(1)
.xx "" "" "logger: make entries in the system log." "" logger(1)
.xx "" "nologin: politely refuse a" "login." "" nologin(8)
.xx "" "rlogin: remote" "login." "" rlogin(1)
.xx "" "" "login: log into the computer." "" login(1)
.xx "" "" "login: login new user." "" csh(1)
.xx "" "getlogin, setlogin: get/set" "login name." "" getlogin(2)
.xx "" "logname: display user's" "login name." "" logname(1)
.xx "" "login:" "login new user." "" csh(1)
.xx "" "utmp, wtmp, lastlog:" "login records." "" utmp(5)
.xx "" "rlogind: remote" "login server." "" rlogind(8)
.xx "" "startslip: dial up and" "login to a slip server." "" startslip(1)
.xx "" "tn3270: full-screen remote" "login to IBM VM/CMS." "" tn3270(1)
.xx "" "kinit: Kerberos" "login utility." "" kinit(1)
.xx "" "last: indicate last" "logins of users and ttys." "" last(1)
.xx "" "" "logname: display user's login name." "" logname(1)
.xx "" "" "logout: end session." "" csh(1)
.xx "" "lfs_cleanerd: garbage collect a" "log-structured file system." "" lfs_cleanerd(8)
.xx "" "mount_lfs: mount a" "log-structured file system." "" mount_lfs(8)
.xx "" "sigsetjmp, siglongjmp, setjmp, longjmp, _setjmp," "_longjmp longjmperror: non-local jumps." "" setjmp(3)
.xx "jumps." "sigsetjmp, siglongjmp, setjmp," "longjmp, _setjmp, _longjmp longjmperror: non-local" "" setjmp(3)
.xx "" "siglongjmp, setjmp, longjmp, _setjmp, _longjmp" "longjmperror: non-local jumps." "sigsetjmp," setjmp(3)
.xx "" "" "look: display lines beginning with a given string." "" look(1)
.xx "" "rhost:" "look up host names using domain server." "" host(1)
.xx "" "apropos: locate commands by keyword" "lookup." "" apropos(1)
.xx "" "invert," "lookup: create and access an inverted index." "" invert(1)
.xx "" "finger: user information" "lookup program." "" finger(1)
.xx "" "break: exit while/foreach" "loop." "" csh(1)
.xx "" "continue: cycle in" "loop." "" csh(1)
.xx "" "end: terminate" "loop." "" csh(1)
.xx "" "foreach:" "loop over list of names." "" csh(1)
.xx "" "lo: software" "loopback network interface." "" lo(4)
.xx "" "" "lorder: list dependencies for object files." "" lorder(1)
.xx "" "tolower: upper case to" "lower case letter conversion." "" tolower(3)
.xx "" "toupper:" "lower case to upper case letter conversion." "" toupper(3)
.xx "" "islower:" "lower-case character test." "" islower(3)
.xx "" "" "lpc: line printer control program." "" lpc(8)
.xx "" "" "lpd: line printer spooler daemon." "" lpd(8)
.xx "" "" "lpq: spool queue examination program." "" lpq(1)
.xx "" "" "lpr: off line print." "" lpr(1)
.xx "queue." "" "lprm: remove jobs from the line printer spooling" "" lprm(1)
.xx "" "" "lptest: generate lineprinter ripple pattern." "" lptest(1)
.xx "" "" "ls: list directory contents." "" ls(1)
.xx "" "" "lsearch, lfind,: linear searching routines." "" lsearch(3)
.xx "" "" "lseek: reposition read/write file offset." "" lseek(2)
.xx "" "stat," "lstat, fstat: get file status." "" stat(2)
.xx "" "" "L.sys: UUCP remote host description file." "" L.sys(5)
.xx "pascal(1)." "" "m4: macro language preprocessor for ratfor(1) and" "" m4(1)
.xx "" "ruptime: show host status of local" "machines." "" ruptime(1)
.xx "" "rwho: who is logged in on local" "machines." "" rwho(1)
.xx "" "assert: expression verification" "macro." "" assert(3)
.xx "pascal(1)." "m4:" "macro language preprocessor for ratfor(1) and" "" m4(1)
.xx "" "mdoc: quick reference guide for the \-mdoc" "macro package." "" mdoc(7)
.xx "" "bitstr_size, bit_test: bit-string manipulation" "macros." "/bit_ffs, bit_nclear, bit_nset, bit_set," bitstring(3)
.xx "" "alias: shell" "macros." "" csh(1)
.xx "" "toascii tolower, toupper,: character classification" "macros." "/ispunct, isspace, isupper, isxdigit," ctype(3)
.xx "" "mm: groff mm" "macros." "" mm(7)
.xx "" "ms: text formatting" "macros." "" ms(7)
.xx "" "me:" "macros for formatting papers." "" me(7)
.xx "" "man: (deprecated)" "macros to typeset manual." "" man(7)
.xx "mult,/" "fmin, fmout, gcd, invert, itom m_in, m_out," "madd, mcmp, mdiv, min, mout, move, msqrt, msub," "" mp(3)
.xx "" "restore: restore files or file systems from backups" "made with dump." "" restore(8)
.xx "" "" "madvise: give advise about use of memory." "" madvise(2)
.xx "" "tcopy: copy and/or verify" "mag tapes." "" tcopy(1)
.xx "" "mt:" "magnetic tape manipulating program." "" mt(1)
.xx "" "rmt: remote" "magtape protocol module." "" rmt(8)
.xx "" "from: print names of those who have sent" "mail." "" from(1)
.xx "" "mail: send and receive" "mail." "" mail(1)
.xx "" "xsend, xget, enroll: private encrypted" "mail." "" xsend(1)
.xx "" "sendbug:" "mail a system bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "nvi.recover: send" "mail about recoverable files." "" nvi.recover(8)
.xx "" "mailaddr:" "mail addressing description." "" mailaddr(7)
.xx "" "newaliases: rebuild the data base for the" "mail aliases file." "" newaliases(1)
.xx "" "biff: be notified if" "mail arrives and who it is from." "" biff(1)
.xx "" "mail.local: store" "mail in a mailbox." "" mail.local(8)
.xx "" "sendmail: send" "mail over the internet." "" sendmail(8)
.xx "" "msgs: system messages and junk" "mail program." "" msgs(1)
.xx "" "rmail: handle remote" "mail received via uucp." "" rmail(8)
.xx "" "" "mail: send and receive mail." "" mail(1)
.xx "" "" "mailaddr: mail addressing description." "" mailaddr(7)
.xx "" "mail.local: store mail in a" "mailbox." "" mail.local(8)
.xx "" "" "mail.local: store mail in a mailbox." "" mail.local(8)
.xx "" "mem, kmem:" "main memory." "" mem(4)
.xx "" "ar: create and" "maintain library archives." "" ar(1)
.xx "" "make:" "maintain program dependencies." "" make(1)
.xx "" "intro: introduction to system" "maintenance and operation commands." "" intro(8)
.xx "" "mkdir:" "make a directory file." "" mkdir(2)
.xx "" "mkfifo:" "make a fifo file." "" mkfifo(2)
.xx "" "link:" "make a hard file link." "" link(2)
.xx "" "mknod:" "make a special file node." "" mknod(2)
.xx "" "mkdir:" "make directories." "" mkdir(1)
.xx "" "makekey:" "make encrypted keys or passwords." "" makekey(8)
.xx "" "logger:" "make entries in the system log." "" logger(1)
.xx "" "mkfifo:" "make fifos." "" mkfifo(1)
.xx "" "@g@indxbib:" "make inverted index for bibliographic databases." "" indxbib(1)
.xx "" "mklocale:" "make LC_CTYPE locale files." "" mklocale(1)
.xx "" "ln:" "make links." "" ln(1)
.xx "" "" "make: maintain program dependencies." "" make(1)
.xx "" "symlink:" "make symbolic link to a file." "" symlink(2)
.xx "" "makedev:" "make system special files." "" makedev(8)
.xx "" "mktemp:" "make temporary file name (unique)." "" mktemp(3)
.xx "" "script:" "make typescript of terminal session." "" script(1)
.xx "" "" "MAKEDEV: create system and device special files." "" MAKEDEV(8)
.xx "" "" "makedev: make system special files." "" makedev(8)
.xx "" "mkdep: construct" "Makefile dependency list." "" mkdep(1)
.xx "" "" "makekey: make encrypted keys or passwords." "" makekey(8)
.xx "" "" "make_keypair: generate Kerberos host key pair." "" make_keypair(8)
.xx "" "" "makemap: create database maps for sendmail." "" makemap(8)
.xx "" "free: free up memory allocated with" "malloc, calloc or realloc." "" free(3)
.xx "memory allocation operations." "" "malloc, free, realloc, calloc, alloca: general" "" memory(3)
.xx "" "" "malloc,: general memory allocation function." "" malloc(3)
.xx "" "" "man: (deprecated) macros to typeset manual." "" man(7)
.xx "" "" "man: display the on-line manual pages." "" man(1)
.xx "" "man.conf: configuration file for" "man(1)." "" man.conf(5)
.xx "" "" "man.conf: configuration file for man(1)." "" man.conf(5)
.xx "" "shift:" "manipulate argument list." "" csh(1)
.xx "" "sigprocmask:" "manipulate current signal mask." "" sigprocmask(2)
.xx "" "quotactl:" "manipulate filesystem quotas." "" quotactl(2)
.xx "" "sigfillset, sigaddset, sigdelset, sigismember:" "manipulate signal sets." "sigemptyset," sigsetops(3)
.xx "" "route: manually" "manipulate the routing tables (Interim)." "" route(8)
.xx "" "uuq: examine or" "manipulate the uucp queue." "" uuq(1)
.xx "" "tf_get_pinst, tf_get_cred, tf_close: routines for" "manipulating a Kerberos ticket file." "/tf_get_pname," tf_util(3)
.xx "" "mt: magnetic tape" "manipulating program." "" mt(1)
.xx "" "cfsetspeed, cfmakeraw, tcgetattr, tcsetattr:" "manipulating the termios structure." "/cfsetospeed," tcsetattr(3)
.xx "" "bit_set, bitstr_size, bit_test: bit-string" "manipulation macros." "/bit_nclear, bit_nset," bitstring(3)
.xx "" "inet_lnaof, inet_netof: Internet address" "manipulation routines." "/inet_ntoa, inet_makeaddr," inet(3)
.xx "" "man: (deprecated) macros to typeset" "manual." "" man(7)
.xx "" "man: display the on-line" "manual pages." "" man(1)
.xx "" "route:" "manually manipulate the routing tables (Interim)." "" route(8)
.xx "" "mdoc.samples: tutorial sampler for writing" "manuals with \-mdoc." "" mdoc.samples(7)
.xx "IBM 3270 keys." "" "map3270: database for mapping ascii keystrokes into" "" map3270(5)
.xx "" "msync: synchronize a" "mapped region." "" msync(2)
.xx "" "portmap: DARPA port to RPC program number" "mapper." "" portmap(8)
.xx "" "munmap: remove a" "mapping." "" munmap(2)
.xx "" "map3270: database for" "mapping ascii keystrokes into IBM 3270 keys." "" map3270(5)
.xx "" "mk-amd-map: create database" "maps for Amd." "" mk-amd-map(8)
.xx "" "makemap: create database" "maps for sendmail." "" makemap(8)
.xx "" "umask: change or display file creation" "mask." "" csh(1)
.xx "" "sigprocmask: manipulate current signal" "mask." "" sigprocmask(2)
.xx "" "sigsetmask: set current signal" "mask." "" sigsetmask(2)
.xx "" "umask: set file creation mode" "mask." "" umask(2)
.xx "" "mkstr: create an error message file by" "massaging C source." "" mkstr(1)
.xx "" "dm: dungeon" "master." "" dm(8)
.xx "" "stash Kerberos key distribution center database" "master key." "kstash:" kstash(8)
.xx "" "fnmatch:" "match filename or pathname." "" fnmatch(3)
.xx "" "glob, globfree: generate pathnames" "matching a pattern." "" glob(3)
.xx "functions." "" "math: introduction to mathematical library" "" math(3)
.xx "" "math: introduction to" "mathematical library functions." "" math(3)
.xx "" "getrlimit, setrlimit: control" "maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit: control" "maximum system resource consumption." "" vlimit(3)
.xx "multibyte character support for C." "" "mblen, mbstowcs, mbtowc, wcstombs, wctomb:" "" multibyte(3)
.xx "" "mbrune, mbrrune," "mbmb: multibyte rune support for C." "" mbrune(3)
.xx "" "mbrune," "mbrrune, mbmb: multibyte rune support for C." "" mbrune(3)
.xx "C." "" "mbrune, mbrrune, mbmb: multibyte rune support for" "" mbrune(3)
.xx "character support for C." "mblen," "mbstowcs, mbtowc, wcstombs, wctomb: multibyte" "" multibyte(3)
.xx "support for C." "mblen, mbstowcs," "mbtowc, wcstombs, wctomb: multibyte character" "" multibyte(3)
.xx "" "fmin, fmout, gcd, invert, itom m_in, m_out, madd," "mcmp, mdiv, min, mout, move, msqrt, msub, mult,/" "" mp(3)
.xx "" "/fmout, gcd, invert, itom m_in, m_out, madd, mcmp," "mdiv, min, mout, move, msqrt, msub, mult, omin,/" "" mp(3)
.xx "" "tutorial sampler for writing  manuals with" "\-mdoc." "mdoc.samples:" mdoc.samples(7)
.xx "" "mdoc: quick reference guide for the" "\-mdoc macro package." "" mdoc(7)
.xx "package." "" "mdoc: quick reference guide for the \-mdoc macro" "" mdoc(7)
.xx "with \-mdoc." "" "mdoc.samples: tutorial sampler for writing  manuals" "" mdoc.samples(7)
.xx "" "" "me: macros for formatting papers." "" me(7)
.xx "" "" "mem, kmem: main memory." "" mem(4)
.xx "" "groups: show group" "memberships." "" groups(1)
.xx "" "" "memccpy: copy string until character found." "" memccpy(3)
.xx "byte string operations." "bcmp, bcopy, bzero," "memccpy, memchr, memcmp, memcpy, memmove, memset:" "" bstring(3)
.xx "" "" "memchr: locate byte in byte string." "" memchr(3)
.xx "string operations." "bcmp, bcopy, bzero, memccpy," "memchr, memcmp, memcpy, memmove, memset: byte" "" bstring(3)
.xx "" "" "memcmp: compare byte string." "" memcmp(3)
.xx "operations." "bcmp, bcopy, bzero, memccpy, memchr," "memcmp, memcpy, memmove, memset: byte string" "" bstring(3)
.xx "" "" "memcpy: copy byte string." "" memcpy(3)
.xx "" "bcmp, bcopy, bzero, memccpy, memchr, memcmp," "memcpy, memmove, memset: byte string operations." "" bstring(3)
.xx "" "" "memmove: copy byte string." "" memmove(3)
.xx "" "bcopy, bzero, memccpy, memchr, memcmp, memcpy," "memmove, memset: byte string operations." "bcmp," bstring(3)
.xx "" "kvm_read, kvm_write: read or write kernel virtual" "memory." "" kvm_read(3)
.xx "" "madvise: give advise about use of" "memory." "" madvise(2)
.xx "" "mem, kmem: main" "memory." "" mem(4)
.xx "" "mincore: get advise about use of" "memory." "" mincore(2)
.xx "" "mlock, munlock: lock (unlock) physical pages in" "memory." "" mlock(2)
.xx "" "mmap: map files or devices into" "memory." "" mmap(2)
.xx "" "kvm_openfiles, kvm_close: initialize kernel virtual" "memory access." "kvm_open," kvm_open(3)
.xx "" "free: free up" "memory allocated with malloc, calloc or realloc." "" free(3)
.xx "" "malloc,: general" "memory allocation function." "" malloc(3)
.xx "" "valloc: aligned" "memory allocation function." "" valloc(3)
.xx "" "malloc, free, realloc, calloc, alloca: general" "memory allocation operations." "" memory(3)
.xx "" "alloca:" "memory allocator." "" alloca(3)
.xx "" "mpool: shared" "memory buffer pool." "" mpool(3)
.xx "" "vfork: spawn new process in a virtual" "memory efficient way." "" vfork(2)
.xx "" "realloc: reallocation of" "memory function." "" realloc(3)
.xx "" "core:" "memory image file format." "" core(5)
.xx "" "kvm: kernel" "memory interface." "" kvm(3)
.xx "" "vmstat: report virtual" "memory statistics." "" vmstat(8)
.xx "" "calloc: allocate clean" "memory (zero initialized space)." "" calloc(3)
.xx "" "bzero, memccpy, memchr, memcmp, memcpy, memmove," "memset: byte string operations." "bcmp, bcopy," bstring(3)
.xx "" "" "memset: write a byte to byte string." "" memset(3)
.xx "" "sail: multi-user wooden ships and iron" "men." "" sail(6)
.xx "" "merge: three-way file" "merge." "" merge(1)
.xx "" "paste:" "merge corresponding or subsequent lines of files." "" paste(1)
.xx "" "rcsmerge:" "merge RCS revisions." "" rcsmerge(1)
.xx "" "sort: sort or" "merge text files." "" sort(1)
.xx "" "" "merge: three-way file merge." "" merge(1)
.xx "" "qsort, heapsort," "mergesort: sort functions." "" qsort(3)
.xx "users." "" "mesg: display (do not display) messages from other" "" mesg(1)
.xx "" "dmesg: display the system" "message buffer." "" dmesg(8)
.xx "" "mkstr: create an error" "message file by massaging C source." "" mkstr(1)
.xx "" "recv, recvfrom, recvmsg: receive a" "message from a socket." "" recv(2)
.xx "" "send, sendto, sendmsg: send a" "message from a socket." "" send(2)
.xx "" "mh:" "Message Handler." "" mh(1)
.xx "" "echo: produce" "message in a shell script." "" echo(1)
.xx "" "kvm_geterr: get error" "message on kvm descriptor." "" kvm_geterr(3)
.xx "" "kvm_getloadavg: get error" "message on kvm descriptor." "" kvm_getloadavg(3)
.xx "" "icmp: Internet Control" "Message Protocol." "" icmp(4)
.xx "" "write: send a" "message to another user." "" write(1)
.xx "" "wall: write a" "message to users." "" wall(1)
.xx "" "verrx, warn, vwarn, warnx, vwarnx: formatted error" "messages." "err, verr, errx," err(3)
.xx "" "error: analyze and disperse compiler error" "messages." "" error(1)
.xx "" "psignal, sys_siglist sys_signame: system signal" "messages." "" psignal(3)
.xx "" "strerror, sys_errlist, sys_nerr: system error" "messages." "perror," strerror(3)
.xx "" "syslogd: log systems" "messages." "" syslogd(8)
.xx "" "msgs: system" "messages and junk mail program." "" msgs(1)
.xx "" "rlog: print log" "messages and other information about RCS files." "" rlog(1)
.xx "" "mesg: display (do not display)" "messages from other users." "" mesg(1)
.xx "" "btree: btree database access" "method." "" btree(3)
.xx "" "hash: hash database access" "method." "" hash(3)
.xx "" "recno: record number database access" "method." "" recno(3)
.xx "" "dbopen: database access" "methods." "" dbopen(3)
.xx "" "newfs," "mfs: construct a new file system." "" newfs(8)
.xx "" "" "mh: Message Handler." "" mh(1)
.xx "" "usleep: suspend execution for interval of" "microseconds." "" usleep(3)
.xx "" "mille: play" "Mille Bournes." "" mille(6)
.xx "" "" "mille: play Mille Bournes." "" mille(6)
.xx "msqrt, msub, mult,/" "fmin, fmout, gcd, invert, itom" "m_in, m_out, madd, mcmp, mdiv, min, mout, move," "" mp(3)
.xx "" "/gcd, invert, itom m_in, m_out, madd, mcmp, mdiv," "min, mout, move, msqrt, msub, mult, omin, omout,/" "" mp(3)
.xx "" "" "mincore: get advise about use of memory." "" mincore(2)
.xx "" "intro:" "miscellaneous information pages." "" intro(7)
.xx "" "" "mk-amd-map: create database maps for Amd." "" mk-amd-map(8)
.xx "" "" "mkdep: construct Makefile dependency list." "" mkdep(1)
.xx "" "" "mkdir: make a directory file." "" mkdir(2)
.xx "" "" "mkdir: make directories." "" mkdir(1)
.xx "" "" "mkfifo: make a fifo file." "" mkfifo(2)
.xx "" "" "mkfifo: make fifos." "" mkfifo(1)
.xx "" "" "mklocale: make LC_CTYPE locale files." "" mklocale(1)
.xx "" "" "mknod: build special file." "" mknod(8)
.xx "" "" "mknod: make a special file node." "" mknod(2)
.xx "" "" "mkproto: construct a prototype file system." "" mkproto(8)
.xx "source." "" "mkstr: create an error message file by massaging C" "" mkstr(1)
.xx "" "" "mktemp: make temporary file name (unique)." "" mktemp(3)
.xx "" "asctime, ctime, difftime, gmtime, localtime," "mktime: transform binary date and time value to/" "" ctime(3)
.xx "memory." "" "mlock, munlock: lock (unlock) physical pages in" "" mlock(2)
.xx "" "" "mm: groff mm macros." "" mm(7)
.xx "" "mm: groff" "mm macros." "" mm(7)
.xx "" "" "mmap: map files or devices into memory." "" mmap(2)
.xx "" "getty: set terminal" "mode." "" getty(8)
.xx "" "getmode, setmode: modify" "mode bits." "" setmode(3)
.xx "" "umask: set file creation" "mode mask." "" umask(2)
.xx "" "chmod, fchmod: change" "mode of file." "" chmod(2)
.xx "" "chmod: change file" "modes." "" chmod(1)
.xx "from floating-point number." "" "modf: extract signed integral and fractional values" "" modf(3)
.xx "" "touch: change file access and" "modification times." "" touch(1)
.xx "" "utimes: set file access and" "modification times." "" utimes(2)
.xx "" "passwd:" "modify a user's password." "" passwd(1)
.xx "" "getmode, setmode:" "modify mode bits." "" setmode(3)
.xx "" "rmt: remote magtape protocol" "module." "" rmt(8)
.xx "" "what: show what versions of object" "modules were used to construct a file." "" what(1)
.xx "" "" "moncontrol, monstartup: control execution profile." "" moncontrol(3)
.xx "" "bwtwo:" "monochromatic frame buffer." "" bwtwo(4)
.xx "" "" "monop: Monopoly game." "" monop(6)
.xx "" "monop:" "Monopoly game." "" monop(6)
.xx "" "moncontrol," "monstartup: control execution profile." "" moncontrol(3)
.xx "" "pom: display the phase of the" "moon." "" pom(6)
.xx "" "" "more: file perusal filter for crt viewing." "" more(1)
.xx "" "morse: reformat input as punch cards, paper tape or" "morse code." "bcd, ppt," bcd(6)
.xx "morse code." "bcd, ppt," "morse: reformat input as punch cards, paper tape or" "" bcd(6)
.xx "" "curses: screen functions with ``optimal'' cursor" "motion." "" curses(3)
.xx "" "mount_lfs:" "mount a log-structured file system." "" mount_lfs(8)
.xx "sub-tree." "mount_lofs:" "mount a virtual copy of an existing filesystem" "" mount_lofs(8)
.xx "" "mount, umount:" "mount and dismount file systems." "" mount(8)
.xx "" "amd: automatically" "mount file systems." "" amd(8)
.xx "" "mount_nfs:" "mount nfs file systems." "" mount_nfs(8)
.xx "" "mount, unmount:" "mount or dismount a filesystem." "" mount(2)
.xx "" "exports: define remote" "mount points for NFS mount requests." "" exports(5)
.xx "" "exports: define remote mount points for NFS" "mount requests." "" exports(5)
.xx "" "mountd: service remote NFS" "mount requests." "" mountd(8)
.xx "" "mount_fdesc:" "mount the file-descriptor file system." "" mount_fdesc(8)
.xx "" "mount_kernfs:" "mount the /kern file system." "" mount_kernfs(8)
.xx "" "mount_portal:" "mount the portal daemon." "" mount_portal(8)
.xx "" "" "mount, umount: mount and dismount file systems." "" mount(8)
.xx "" "" "mount, unmount: mount or dismount a filesystem." "" mount(2)
.xx "" "" "mountd: service remote NFS mount requests." "" mountd(8)
.xx "" "getmntinfo: get information about" "mounted file systems." "" getmntinfo(3)
.xx "" "getfsstat: get list of all" "mounted filesystems." "" getfsstat(2)
.xx "" "" "mount_fdesc: mount the file-descriptor file system." "" mount_fdesc(8)
.xx "" "" "mount_kernfs: mount the /kern file system." "" mount_kernfs(8)
.xx "" "" "mount_lfs: mount a log-structured file system." "" mount_lfs(8)
.xx "filesystem sub-tree." "" "mount_lofs: mount a virtual copy of an existing" "" mount_lofs(8)
.xx "" "" "mount_nfs: mount nfs file systems." "" mount_nfs(8)
.xx "system layer." "" "mount_null: demonstrate the use of a null file" "" mount_null(8)
.xx "" "" "mount_portal: mount the portal daemon." "" mount_portal(8)
.xx "" "showmount: show remote nfs" "mounts on host." "" showmount(8)
.xx "" "" "mount_umap: sample file system layer." "" mount_umap(8)
.xx "msub, mult,/" "fmin, fmout, gcd, invert, itom m_in," "m_out, madd, mcmp, mdiv, min, mout, move, msqrt," "" mp(3)
.xx "" "/invert, itom m_in, m_out, madd, mcmp, mdiv, min," "mout, move, msqrt, msub, mult, omin, omout, pow,/" "" mp(3)
.xx "" "plot: openpl, erase, label, line, circle, arc," "move, cont, point, linemod, space, closepl:/" "" plot(3)
.xx "" "mv:" "move files." "" mv(1)
.xx "" "/itom m_in, m_out, madd, mcmp, mdiv, min, mout," "move, msqrt, msub, mult, omin, omout, pow, rpow,/" "" mp(3)
.xx "" "" "mpool: shared memory buffer pool." "" mpool(3)
.xx "" "" "mprotect: control the protection of pages." "" mprotect(2)
.xx "" "" "ms: text formatting macros." "" ms(7)
.xx "" "" "mset: retrieve ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "" "" "msgs: system messages and junk mail program." "" msgs(1)
.xx "" "/m_in, m_out, madd, mcmp, mdiv, min, mout, move," "msqrt, msub, mult, omin, omout, pow, rpow, sdiv,:/" "" mp(3)
.xx "" "/m_out, madd, mcmp, mdiv, min, mout, move, msqrt," "msub, mult, omin, omout, pow, rpow, sdiv,: multiple/" "" mp(3)
.xx "" "" "msync: synchronize a mapped region." "" msync(2)
.xx "" "" "mt: magnetic tape manipulating program." "" mt(1)
.xx "" "" "mtree: map a directory hierarchy." "" mtree(8)
.xx "" "/madd, mcmp, mdiv, min, mout, move, msqrt, msub," "mult, omin, omout, pow, rpow, sdiv,: multiple/" "" mp(3)
.xx "" "mblen, mbstowcs, mbtowc, wcstombs, wctomb:" "multibyte character support for C." "" multibyte(3)
.xx "" "mbrune, mbrrune, mbmb:" "multibyte rune support for C." "" mbrune(3)
.xx "" "hunt: a" "multi-player multi-terminal game." "" hunt(6)
.xx "" "strpbrk: locate" "multiple characters in string." "" strpbrk(3)
.xx "" "msqrt, msub, mult, omin, omout, pow, rpow, sdiv,:" "multiple precision integer arithmetic." "/mout, move," mp(3)
.xx "" "dcm: HP 98642A communications" "multiplexer." "" dcm(4)
.xx "" "select: synchronous I/O" "multiplexing." "" select(2)
.xx "" "fsplit: split a" "multi-routine Fortran file into individual files." "" fsplit(1)
.xx "" "hunt: a multi-player" "multi-terminal game." "" hunt(6)
.xx "" "sail:" "multi-user wooden ships and iron men." "" sail(6)
.xx "" "switch:" "multi-way command branch." "" csh(1)
.xx "" "mlock," "munlock: lock (unlock) physical pages in memory." "" mlock(2)
.xx "" "" "munmap: remove a mapping." "" munmap(2)
.xx "2." "ldexp:" "mutliply floating-point number by integral power of" "" ldexp(3)
.xx "" "" "mv: move files." "" mv(1)
.xx "" "isinf, isnan: test for infinity or not-a-number" "(\*(Na)." "" isinf(3)
.xx "" "devname: get device" "name." "" devname(3)
.xx "" "getdiskbyname: get generic disk description by its" "name." "" getdiskbyname(3)
.xx "" "getlogin, setlogin: get/set login" "name." "" getlogin(2)
.xx "" "getsockname: get socket" "name." "" getsockname(2)
.xx "" "krb_set_tkt_string: set Kerberos ticket cache file" "name." "" krb_set_tkt_string(3)
.xx "" "logname: display user's login" "name." "" logname(1)
.xx "" "pwd: return working directory" "name." "" pwd(1)
.xx "" "tty: return user's terminal" "name." "" tty(1)
.xx "" "hosts: host" "name data base." "" hosts(5)
.xx "" "networks: network" "name data base." "" networks(5)
.xx "" "protocols: protocol" "name data base." "" protocols(5)
.xx "" "services: service" "name data base." "" services(5)
.xx "" "whois: Internet user" "name directory service." "" whois(1)
.xx "" "getpw: get" "name from uid." "" getpw(3)
.xx "" "symorder: rearrange" "name list." "" symorder(1)
.xx "" "nlist: retrieve symbol table" "name list from an executable file." "" nlist(3)
.xx "" "nm: display" "name list (symbol table)." "" nm(1)
.xx "" "rename: change the" "name of a file." "" rename(2)
.xx "descriptor." "ttyname, isatty, ttyslot: get" "name of associated terminal (tty) from file" "" ttyname(3)
.xx "" "getpeername: get" "name of connected peer." "" getpeername(2)
.xx "" "gethostname, sethostname: get/set" "name of current host." "" gethostname(3)
.xx "" "hostname: set or print" "name of current host system." "" hostname(1)
.xx "" "dig: send domain" "name query packets to name servers." "" dig(1)
.xx "" "hostname: host" "name resolution description." "" hostname(7)
.xx "" "named: Internet domain" "name server." "" named(8)
.xx "" "named.restart: stop and restart the" "name server." "" named.restart(8)
.xx "" "named.reload: cause the" "name server to synchronize its database." "" named.reload(8)
.xx "" "dig: send domain name query packets to" "name servers." "" dig(1)
.xx "" "nslookup: query Internet" "name servers interactively." "" nslookup(1)
.xx "" "bind: bind a" "name to a socket." "" bind(2)
.xx "" "mktemp: make temporary file" "name (unique)." "" mktemp(3)
.xx "" "" "named: Internet domain name server." "" named(8)
.xx "its database." "" "named.reload: cause the name server to synchronize" "" named.reload(8)
.xx "" "" "named.restart: stop and restart the name server." "" named.restart(8)
.xx "transfers." "" "named-xfer: ancillary agent for inbound zone" "" named-xfer(8)
.xx "" "foreach: loop over list of" "names." "" csh(1)
.xx "" "groff_char: groff character" "names." "" groff_char(7)
.xx "" "term: conventional" "names for terminals." "" term(7)
.xx "" "kvm_nlist: retrieve symbol table" "names from a kernel image." "" kvm_nlist(3)
.xx "" "ncheck: generate" "names from i-numbers." "" ncheck(8)
.xx "" "from: print" "names of those who have sent mail." "" from(1)
.xx "" "uuname: list" "names of UUCP hosts." "" uuname(1)
.xx "" "rhost: look up host" "names using domain server." "" host(1)
.xx "" "setlocale, localeconv:" "natural language formatting for C." "" setlocale(3)
.xx "" "" "ncheck: generate names from i-numbers." "" ncheck(8)
.xx "" "getnetgrent, innetgr, setnetgrent, endnetgrent:" "netgroup database operations." "" getnetgrent(3)
.xx "" "" "netgroup: defines network groups." "" netgroup(5)
.xx "" "" "netstat: show network status." "" netstat(1)
.xx "Interconnection." "iso_addr, iso_ntoa: elementary" "network address conversion routines for Open System" "" iso_addr(3)
.xx "" "ntohl, ntohs: convert values between host and" "network byte order." "htonl, htons," byteorder(3)
.xx "" "getnetbyname, setnetent, endnetent: get" "network entry." "getnetent, getnetbyaddr," getnetent(3)
.xx "" "netgroup: defines" "network groups." "" netgroup(5)
.xx "" "traceroute: print the route packets take to" "network host." "" traceroute(8)
.xx "" "gethostent, sethostent, endhostent, herror: get" "network host entry." "gethostbyname, gethostbyaddr," gethostbyname(3)
.xx "" "ping: send ICMP ECHO_REQUEST packets to" "network hosts." "" ping(8)
.xx "" "lo: software loopback" "network interface." "" lo(4)
.xx "" "sliplogin: attach a serial line" "network interface." "" sliplogin(8)
.xx "packets." "nsip: software" "network interface encapsulating NS packets in IP" "" nsip(4)
.xx "" "ifconfig: configure" "network interface parameters." "" ifconfig(8)
.xx "" "slattach: attach serial lines as" "network interfaces." "" slattach(8)
.xx "" "networks:" "network name data base." "" networks(5)
.xx "" "clnp: Connectionless-Mode" "Network Protocol." "" clnp(4)
.xx "" "routed:" "network routing daemon." "" routed(8)
.xx "" "netstat: show" "network status." "" netstat(1)
.xx "" "Kerberos routines for sending authentication via" "network stream sockets." "/krb_net_read:" krb_sendauth(3)
.xx "" "ns: Xerox" "Network Systems(tm) protocol family." "" ns(4)
.xx "" "networking: introduction to" "networking facilities." "" netintro(4)
.xx "" "" "networking: introduction to networking facilities." "" netintro(4)
.xx "" "" "networks: network name data base." "" networks(5)
.xx "" "des_pcbc_encrypt, des_cbc_cksum, des_quad_cksum,:" "(new) DES encryption." "/des_cbc_encrypt," des_crypt(3)
.xx "" "creat: create a" "new file." "" creat(2)
.xx "" "newfs, mfs: construct a" "new file system." "" newfs(8)
.xx "" "newlfs: construct a" "new LFS file system." "" newlfs(8)
.xx "" "fork: create a" "new process." "" fork(2)
.xx "" "vfork: spawn" "new process in a virtual memory efficient way." "" vfork(2)
.xx "" "login: login" "new user." "" csh(1)
.xx "" "adduser: procedure for adding" "new users." "" adduser(8)
.xx "aliases file." "" "newaliases: rebuild the data base for the mail" "" newaliases(1)
.xx "" "" "newfs, mfs: construct a new file system." "" newfs(8)
.xx "" "" "newlfs: construct a new LFS file system." "" newlfs(8)
.xx "" "fgetc, getc, getchar, getw: get" "next character or word from input stream." "" getc(3)
.xx "" "nfsiod: local" "NFS asynchronous I/O server." "" nfsiod(8)
.xx "" "mount_nfs: mount" "nfs file systems." "" mount_nfs(8)
.xx "" "exports: define remote mount points for" "NFS mount requests." "" exports(5)
.xx "" "mountd: service remote" "NFS mount requests." "" mountd(8)
.xx "" "showmount: show remote" "nfs mounts on host." "" showmount(8)
.xx "" "nfsd: remote" "NFS server." "" nfsd(8)
.xx "" "nfssvc:" "NFS services." "" nfssvc(2)
.xx "" "nfsstat: display" "NFS statistics." "" nfsstat(1)
.xx "" "" "nfsd: remote NFS server." "" nfsd(8)
.xx "" "" "nfsiod: local NFS asynchronous I/O server." "" nfsiod(8)
.xx "" "" "nfsstat: display NFS statistics." "" nfsstat(1)
.xx "" "" "nfssvc: NFS services." "" nfssvc(2)
.xx "priority." "" "nice: execute a command at a low scheduling" "" nice(1)
.xx "" "vgrind: grind" "nice listings of programs." "" vgrind(1)
.xx "" "" "nice: run low priority process." "" csh(1)
.xx "" "" "nice: set program scheduling priority." "" nice(3)
.xx "executable file." "" "nlist: retrieve symbol table name list from an" "" nlist(3)
.xx "" "" "nm: display name list (symbol table)." "" nm(1)
.xx "" "getgrent, getgrnam, getgrgid, setgroupent, ." "Nm setgrfile, setgrent, endgrent: group database/" "" getgrent(3)
.xx "" "mknod: make a special file" "node." "" mknod(2)
.xx "" "" "nohup: invoke a command immune to hangups." "" nohup(1)
.xx "" "" "nohup: run command immune to hangups." "" csh(1)
.xx "" "" "nologin: politely refuse a login." "" nologin(8)
.xx "" "setjmp, longjmp, _setjmp, _longjmp longjmperror:" "non-local jumps." "sigsetjmp, siglongjmp," setjmp(3)
.xx "" "vis: display" "non-printable characters in a visual format." "" vis(1)
.xx "" "exit: perform" "normal program termination." "" exit(3)
.xx "" "mesg: display (do" "not display) messages from other users." "" mesg(1)
.xx "" "ceil: smallest integral value" "not greater than x." "" ceil(3)
.xx "" "floor: largest integral value" "not greater than x." "" floor(3)
.xx "" "vacation: return ``I am" "not here'' indication." "" vacation(1)
.xx "" "isinf, isnan: test for infinity or" "not-a-number (\*(Na)." "" isinf(3)
.xx "" "notify: request immediate" "notification." "" csh(1)
.xx "" "biff: be" "notified if mail arrives and who it is from." "" biff(1)
.xx "" "" "notify: request immediate notification." "" csh(1)
.xx "" "@g@nroff: emulate" "nroff command with groff." "" nroff(1)
.xx "" "soelim: eliminate \&.so's from" "nroff input." "" soelim(1)
.xx "" "colcrt: filter" "nroff output for CRT previewing." "" colcrt(1)
.xx "" "deroff: remove" "nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "checknr: check" "nroff/troff files." "" checknr(1)
.xx "" "ns_addr, ns_ntoa: Xerox" "NS Ns (tm) address conversion routines." "" ns(3)
.xx "" "nsip: software network interface encapsulating" "NS packets in IP packets." "" nsip(4)
.xx "" "XNSrouted:" "NS Routing Information Protocol daemon." "" XNSrouted(8)
.xx "" "ns_addr, ns_ntoa: Xerox NS" "Ns (tm) address conversion routines." "" ns(3)
.xx "" "" "ns: Xerox Network Systems(tm) protocol family." "" ns(4)
.xx "conversion routines." "" "ns_addr, ns_ntoa: Xerox NS Ns (tm) address" "" ns(3)
.xx "packets in IP packets." "" "nsip: software network interface encapsulating NS" "" nsip(4)
.xx "interactively." "" "nslookup: query Internet name servers" "" nslookup(1)
.xx "routines." "ns_addr," "ns_ntoa: Xerox NS Ns (tm) address conversion" "" ns(3)
.xx "network byte order." "htonl, htons," "ntohl, ntohs: convert values between host and" "" byteorder(3)
.xx "order." "htonl, htons, ntohl," "ntohs: convert values between host and network byte" "" byteorder(3)
.xx "" "null: the" "null device." "" null(4)
.xx "" "mount_null: demonstrate the use of a" "null file system layer." "" mount_null(8)
.xx "" "" "null: the null device." "" null(4)
.xx "" "integral and fractional values from floating-point" "number." "modf: extract signed" modf(3)
.xx "" "ldexp: mutliply floating-point" "number by integral power of 2." "" ldexp(3)
.xx "" "" "number: convert Arabic numerals to English." "" number(6)
.xx "" "phones: remote host phone" "number data base." "" phones(5)
.xx "" "rpc: rpc program" "number data base." "" rpc(5)
.xx "" "recno: record" "number database access method." "" recno(3)
.xx "" "factor, primes: factor a" "number, generate primes." "" factor(6)
.xx "" "rand, srand: bad random" "number generator." "" rand(3)
.xx "" "random, srandom, initstate, setstate: better random" "number generator; routines for changing generators." "" random(3)
.xx "" "L-dialcodes: UUCP phone" "number index file." "" L-dialcodes(5)
.xx "" "portmap: DARPA port to RPC program" "number mapper." "" portmap(8)
.xx "" "frexp: convert floating-point" "number to fractional and integral components." "" frexp(3)
.xx "" "intro: introduction to system calls and error" "numbers." "" intro(2)
.xx "" "number: convert Arabic" "numerals to English." "" number(6)
.xx "" "" "nvi.recover: send mail about recoverable files." "" nvi.recover(8)
.xx "" "size: display" "object file segment sizes (text, data and bss)." "" size(1)
.xx "" "lorder: list dependencies for" "object files." "" lorder(1)
.xx "" "what: show what versions of" "object modules were used to construct a file." "" what(1)
.xx "" "od:" "octal, decimal, hex, ascii dump." "" od(1)
.xx "" "hexdump: ascii, decimal, hexadecimal," "octal dump." "" hexdump(1)
.xx "sets." "ascii:" "octal, hexadecimal and decimal ASCII character" "" ascii(7)
.xx "" "" "od: octal, decimal, hex, ascii dump." "" od(1)
.xx "" "lseek: reposition read/write file" "offset." "" lseek(2)
.xx "" "/mcmp, mdiv, min, mout, move, msqrt, msub, mult," "omin, omout, pow, rpow, sdiv,: multiple precision/" "" mp(3)
.xx "" "/mdiv, min, mout, move, msqrt, msub, mult, omin," "omout, pow, rpow, sdiv,: multiple precision integer/" "" mp(3)
.xx "" "atan: arc tangent function of" "one variable." "" atan(3)
.xx "" "" "onintr: process interrupts in command scripts." "" csh(1)
.xx "" "man: display the" "on-line manual pages." "" man(1)
.xx "" "funopen, fropen, fwopen:" "open a stream." "" funopen(3)
.xx "" "flock: apply or remove an advisory lock on an" "open file." "" flock(2)
.xx "" "kvm_getfiles: survey" "open files." "" kvm_getfiles(3)
.xx "" "zopen: compressed stream" "open function." "" zopen(3)
.xx "" "fopen, fdopen, freopen: stream" "open functions." "" fopen(3)
.xx "" "" "open: open or create a file for reading or writing." "" open(2)
.xx "" "open:" "open or create a file for reading or writing." "" open(2)
.xx "" "elementary network address conversion routines for" "Open System Interconnection." "iso_addr, iso_ntoa:" iso_addr(3)
.xx "closedir, dirfd: directory operations." "" "opendir, readdir, telldir, seekdir, rewinddir," "" directory(3)
.xx "" "syslog, vsyslog," "openlog, closelog, setlogmask: control system log." "" syslog(3)
.xx "cont, point, linemod, space, closepl:/" "plot:" "openpl, erase, label, line, circle, arc, move," "" plot(3)
.xx "" "openprom:" "OPENPROM and EEPROM interface." "" openprom(4)
.xx "" "eeprom:" "openprom control utility." "" eeprom(8)
.xx "" "" "openprom: OPENPROM and EEPROM interface." "" openprom(4)
.xx "" "savecore: save a core dump of the" "operating system." "" savecore(8)
.xx "" "kgmon: generate a dump of the" "operating system's profile buffers." "" kgmon(8)
.xx "" "intro: introduction to system maintenance and" "operation commands." "" intro(8)
.xx "" "tgetstr, tgoto, tputs: terminal independent" "operation routines." "tgetent, tgetnum, tgetflag," termcap(3)
.xx "" "memcmp, memcpy, memmove, memset: byte string" "operations." "bcmp, bcopy, bzero, memccpy, memchr," bstring(3)
.xx "" "seekdir, rewinddir, closedir, dirfd: directory" "operations." "opendir, readdir, telldir," directory(3)
.xx "" ".Nm setgrfile, setgrent, endgrent: group database" "operations." "/getgrnam, getgrgid, setgroupent," getgrent(3)
.xx "" "setnetgrent, endnetgrent: netgroup database" "operations." "getnetgrent, innetgr," getnetgrent(3)
.xx "" "setpassent, setpwent, endpwent: password database" "operations." "getpwent, getpwnam, getpwuid," getpwent(3)
.xx "" "realloc, calloc, alloca: general memory allocation" "operations." "malloc, free," memory(3)
.xx "" "setbuffer, setlinebuf, setvbuf: stream buffering" "operations." "setbuf," setbuf(3)
.xx "" "strtok, strsep: string token" "operations." "" strtok(3)
.xx "" "infnan: signals invalid floating\-point" "operations on a VAX (temporary)." "" infnan(3)
.xx "" "join: relational database" "operator." "" join(1)
.xx "evaluation." "" "operator: C operator precedence and order of" "" operator(7)
.xx "" "operator: C" "operator precedence and order of evaluation." "" operator(7)
.xx "" "erf, erfc: error function" "operators." "" erf(3)
.xx "" "curses: screen functions with" "``optimal'' cursor motion." "" curses(3)
.xx "" "getopt: get" "option character from command line argument list." "" getopt(3)
.xx "" "stty: set the" "options for a terminal device interface." "" stty(1)
.xx "" "grog: guess" "options for groff command." "" grog(1)
.xx "" "getsubopt: get sub" "options from an argument." "" getsubopt(3)
.xx "" "getsockopt, setsockopt: get and set" "options on sockets." "" getsockopt(2)
.xx "" "ntohs: convert values between host and network byte" "order." "htonl, htons, ntohl," byteorder(3)
.xx "" "lastcomm: show last commands executed in reverse" "order." "" lastcomm(1)
.xx "" "operator: C operator precedence and" "order of evaluation." "" operator(7)
.xx "" "\&vi, view: screen" "oriented (visual) display editor based on ex." "" vi(1)
.xx "" "patch: a program for applying a diff file to an" "original." "" patch(1)
.xx "" "revert a visual representation of data back to" "original form." "unvis:" unvis(1)
.xx "" "printf: formatted" "output." "" printf(1)
.xx "" "write, writev: write" "output." "" write(2)
.xx "" "fputc, putc, putchar, putw:" "output a character or word to a stream." "" putc(3)
.xx "" "fputs, puts:" "output a line to a stream." "" fputs(3)
.xx "" "ecvt, fcvt, gcvt:" "output conversion." "" ecvt(3)
.xx "" "vprintf, vfprintf, vsprintf, vsnprintf: formatted" "output conversion." "/fprintf, sprintf, snprintf," printf(3)
.xx "" "fold: fold long lines for finite width" "output device." "" fold(1)
.xx "" "colcrt: filter nroff" "output for CRT previewing." "" colcrt(1)
.xx "" "groff_out: groff intermediate" "output format." "" groff_out(5)
.xx "" "grodvi: convert groff" "output to TeX dvi format." "" grodvi(1)
.xx "" "foreach: loop" "over list of names." "" csh(1)
.xx "" "sendmail: send mail" "over the internet." "" sendmail(8)
.xx "" "exec:" "overlay shell with specified command." "" csh(1)
.xx "" "chown: change file" "owner and group." "" chown(8)
.xx "" "chown, fchown: change" "owner and group of a file." "" chown(2)
.xx "" "" "pac: printer/plotter accounting information." "" pac(8)
.xx "" "disklabel: disk" "pack label." "" disklabel.5(5)
.xx "" "disklabel: read and write disk" "pack label." "" disklabel(8)
.xx "" "route: kernel" "packet forwarding database." "" route(4)
.xx "" "spp: Xerox Sequenced" "Packet Protocol." "" spp(4)
.xx "" "trsp: transliterate sequenced" "packet protocol trace." "" trsp(8)
.xx "" "network interface encapsulating NS packets in IP" "packets." "nsip: software" nsip(4)
.xx "" "nsip: software network interface encapsulating NS" "packets in IP packets." "" nsip(4)
.xx "" "traceroute: print the route" "packets take to network host." "" traceroute(8)
.xx "" "dig: send domain name query" "packets to name servers." "" dig(1)
.xx "" "ping: send ICMP ECHO_REQUEST" "packets to network hosts." "" ping(8)
.xx "" "getpagesize: get system" "page size." "" getpagesize(3)
.xx "" "pagesize: print system" "page size." "" pagesize(1)
.xx "" "intro: miscellaneous information" "pages." "" intro(7)
.xx "" "man: display the on-line manual" "pages." "" man(1)
.xx "" "mprotect: control the protection of" "pages." "" mprotect(2)
.xx "" "mlock, munlock: lock (unlock) physical" "pages in memory." "" mlock(2)
.xx "" "" "pagesize: print system page size." "" pagesize(1)
.xx "" "swapon: specify additional device for" "paging and swapping." "" swapon(8)
.xx "" "drum:" "paging device." "" drum(4)
.xx "" "swapon: add a swap device for interleaved" "paging/swapping." "" swapon(2)
.xx "" "make_keypair: generate Kerberos host key" "pair." "" make_keypair(8)
.xx "" "pipe: create descriptor" "pair for interprocess communication." "" pipe(2)
.xx "" "socketpair: create a" "pair of connected sockets." "" socketpair(2)
.xx "" "bcd, ppt, morse: reformat input as punch cards," "paper tape or morse code." "" bcd(6)
.xx "" "me: macros for formatting" "papers." "" me(7)
.xx "" "ifconfig: configure network interface" "parameters." "" ifconfig(8)
.xx "" "scsiformat: format SCSI disks and show SCSI" "parameters." "" scsiformat(8)
.xx "" "getpid, getppid: get" "parent or calling process identification." "" getpid(2)
.xx "" "yacc: an LALR(1)" "parser generator." "" yacc(1)
.xx "" "diskpart: calculate default disk" "partition sizes." "" diskpart(8)
.xx "" "m4: macro language preprocessor for ratfor(1) and" "pascal(1)." "" m4(1)
.xx "" "system:" "pass a command to the shell." "" system(3)
.xx "" "" "passwd: format of the password file." "" passwd(5)
.xx "" "" "passwd: modify a user's password." "" passwd(1)
.xx "" "getpass: get a" "password." "" getpass(3)
.xx "" "passwd: modify a user's" "password." "" passwd(1)
.xx "" "pwcache: cache" "password and group entries." "" pwcache(3)
.xx "" "kpasswdd: Kerberos" "password changing daemon." "" kpasswdd(8)
.xx "" "getpwnam, getpwuid, setpassent, setpwent, endpwent:" "password database operations." "getpwent," getpwent(3)
.xx "" "pwd_mkdb: generate the" "password databases." "" pwd_mkdb(8)
.xx "" "passwd: format of the" "password file." "" passwd(5)
.xx "" "vipw: edit the" "password file." "" vipw(8)
.xx "" "makekey: make encrypted keys or" "passwords." "" makekey(8)
.xx "files." "" "paste: merge corresponding or subsequent lines of" "" paste(1)
.xx "original." "" "patch: a program for applying a diff file to an" "" patch(1)
.xx "variables." "" "pathconf, fpathconf: get configurable pathname" "" pathconf(2)
.xx "" "access: check access permissions of a file or" "pathname." "" access(2)
.xx "" "dirname: return filename or directory portion of" "pathname." "basename," basename(1)
.xx "" "ctermid: generate terminal" "pathname." "" ctermid(3)
.xx "" "fnmatch: match filename or" "pathname." "" fnmatch(3)
.xx "" "getwd: get working directory" "pathname." "" getcwd(3)
.xx "" "USERFILE: UUCP" "pathname permissions file." "" USERFILE(5)
.xx "" "pathconf, fpathconf: get configurable" "pathname variables." "" pathconf(2)
.xx "" "glob, globfree: generate" "pathnames matching a pattern." "" glob(3)
.xx "" "which: locate a program file including aliases and" "paths." "" which(1)
.xx "" "glob, globfree: generate pathnames matching a" "pattern." "" glob(3)
.xx "" "lptest: generate lineprinter ripple" "pattern." "" lptest(1)
.xx "" "awk:" "pattern scanning and processing language." "" awk(1)
.xx "" "grep: file" "pattern searcher." "" grep(1)
.xx "" "" "pause: stop until signal." "" pause(3)
.xx "directory hierarchies." "" "pax: read and write file archives and copy" "" pax(1)
.xx "" "popen," "pclose: process I/O." "" popen(3)
.xx "" "getpeername: get name of connected" "peer." "" getpeername(2)
.xx "" "sync: force completion of" "pending disk writes (flush cache)." "" sync(8)
.xx "" "sigpending: get" "pending signals." "" sigpending(2)
.xx "" "quot: display total block usage" "per user for a file system." "" quot(8)
.xx "" "exit:" "perform normal program termination." "" exit(3)
.xx "" "" "perl: practical extraction and report language." "" perl(1)
.xx "" "group: format of the group" "permissions file." "" group(5)
.xx "" "L.cmds: UUCP remote command" "permissions file." "" L.cmds(5)
.xx "" "USERFILE: UUCP pathname" "permissions file." "" USERFILE(5)
.xx "" "access: check access" "permissions of a file or pathname." "" access(2)
.xx "" "ptx:" "permuted index." "" ptx(1)
.xx "" "limit: alter" "per-process resource limitations." "" csh(1)
.xx "error messages." "" "perror, strerror, sys_errlist, sys_nerr: system" "" strerror(3)
.xx "" "more: file" "perusal filter for crt viewing." "" more(1)
.xx "" "pfbtops: translate a PostScript font in ." "pfb format to ASCII." "" pfbtops(1)
.xx "to ASCII." "" "pfbtops: translate a PostScript font in .pfb format" "" pfbtops(1)
.xx "" "" "phantasia: an interterminal fantasy game." "" phantasia(6)
.xx "" "pom: display the" "phase of the moon." "" pom(6)
.xx "" "phones: remote host" "phone number data base." "" phones(5)
.xx "" "L-dialcodes: UUCP" "phone number index file." "" L-dialcodes(5)
.xx "" "" "phones: remote host phone number data base." "" phones(5)
.xx "" "mlock, munlock: lock (unlock)" "physical pages in memory." "" mlock(2)
.xx "" "@g@pic: compile" "pictures for troff or TeX." "" pic(1)
.xx "" "" "pig: eformatray inputway asway Igpay Atinlay." "" pig(6)
.xx "hosts." "" "ping: send ICMP ECHO_REQUEST packets to network" "" ping(8)
.xx "communication." "" "pipe: create descriptor pair for interprocess" "" pipe(2)
.xx "" "tee:" "pipe fitting." "" tee(1)
.xx "" "bg:" "place job in background." "" csh(1)
.xx "" "fish:" "play ``Go Fish''." "" fish(6)
.xx "" "mille:" "play Mille Bournes." "" mille(6)
.xx "" "worm:" "play the growing worm game." "" worm(6)
.xx "" "" "plot: graphics filters." "" plot(1)
.xx "" "" "plot: graphics interface." "" plot(5)
.xx "move, cont, point, linemod, space, closepl:/" "" "plot: openpl, erase, label, line, circle, arc," "" plot(3)
.xx "" "/erase, label, line, circle, arc, move, cont," "point, linemod, space, closepl: graphics interface." "" plot(3)
.xx "" "drem, finite, logb, scalb: IEEE 754 floating" "point support." "copysign," ieee(3)
.xx "" "exports: define remote mount" "points for NFS mount requests." "" exports(5)
.xx "" "nologin:" "politely refuse a login." "" nologin(8)
.xx "" "uupoll:" "poll a remote UUCP site." "" uupoll(8)
.xx "" "" "pom: display the phase of the moon." "" pom(6)
.xx "" "mpool: shared memory buffer" "pool." "" mpool(3)
.xx "" "popd:" "pop shell directory stack." "" csh(1)
.xx "" "" "popd: pop shell directory stack." "" csh(1)
.xx "" "" "popen, pclose: process I/O." "" popen(3)
.xx "" "portmap: DARPA" "port to RPC program number mapper." "" portmap(8)
.xx "" "mount_portal: mount the" "portal daemon." "" mount_portal(8)
.xx "" "basename, dirname: return filename or directory" "portion of pathname." "" basename(1)
.xx "" "cut: select" "portions of each line of a file." "" cut(1)
.xx "" "" "portmap: DARPA port to RPC program number mapper." "" portmap(8)
.xx "" "re_format:" "POSIX 1003.2 regular expressions." "" re_format(7)
.xx "" "psbb: extract bounding box from" "PostScript document." "" psbb(1)
.xx "" "grops:" "PostScript driver for groff." "" grops(1)
.xx "" "pfbtops: translate a" "PostScript font in .pfb format to ASCII." "" pfbtops(1)
.xx "" "exp, expm1, log, log10, log1p," "pow: exponential, logarithm, power functions." "" exp(3)
.xx "" "min, mout, move, msqrt, msub, mult, omin, omout," "pow, rpow, sdiv,: multiple precision integer/" "/mdiv," mp(3)
.xx "" "log, log10, log1p, pow: exponential, logarithm," "power functions." "exp, expm1," exp(3)
.xx "" "ldexp: mutliply floating-point number by integral" "power of 2." "" ldexp(3)
.xx "" "" "ppi: HP-IB printer/plotter interface." "" ppi(4)
.xx "tape or morse code." "bcd," "ppt, morse: reformat input as punch cards, paper" "" bcd(6)
.xx "" "" "pr: print files." "" pr(1)
.xx "" "perl:" "practical extraction and report language." "" perl(1)
.xx "" "operator: C operator" "precedence and order of evaluation." "" operator(7)
.xx "" "msub, mult, omin, omout, pow, rpow, sdiv,: multiple" "precision integer arithmetic." "/mout, move, msqrt," mp(3)
.xx "" "cc, g++: GNU project C and C++ Compiler (v2" "preliminary)." "" cc(1)
.xx "" "g++: GNU project C++ Compiler (v2" "preliminary)." "" g++(1)
.xx "" "@g@refer:" "preprocess bibliographic references for groff." "" refer(1)
.xx "" "cccp, cpp: the GNU C-compatible compiler" "preprocessor." "" cpp(1)
.xx "" "m4: macro language" "preprocessor for ratfor(1) and pascal(1)." "" m4(1)
.xx "" "w: who" "present users are and what they are doing." "" w(1)
.xx "" "colcrt: filter nroff output for CRT" "previewing." "" colcrt(1)
.xx "" "factor, primes: factor a number, generate" "primes." "" factor(6)
.xx "" "factor," "primes: factor a number, generate primes." "" factor(6)
.xx "" "lpr: off line" "print." "" lpr(1)
.xx "" "fortune:" "print a random, hopefully interesting, adage." "" fortune(6)
.xx "" "hashstat:" "print command hashing statistics." "" csh(1)
.xx "" "jobs:" "print current job list." "" csh(1)
.xx "" "printenv, env: print out the environment, set and" "print environment." "" printenv(1)
.xx "" "cat: concatenate and" "print files." "" cat(1)
.xx "" "pr:" "print files." "" pr(1)
.xx "" "fpr:" "print Fortran file." "" fpr(1)
.xx "" "history:" "print history event list." "" csh(1)
.xx "" "banner:" "print large banner on printer." "" banner(6)
.xx "files." "rlog:" "print log messages and other information about RCS" "" rlog(1)
.xx "" "hostname: set or" "print name of current host system." "" hostname(1)
.xx "" "from:" "print names of those who have sent mail." "" from(1)
.xx "environment." "printenv, env:" "print out the environment, set and print" "" printenv(1)
.xx "" "jot:" "print sequential or random data." "" jot(1)
.xx "" "pagesize:" "print system page size." "" pagesize(1)
.xx "" "traceroute:" "print the route packets take to network host." "" traceroute(8)
.xx "" "diction, explain:" "print wordy sentences; thesaurus for diction." "" diction(1)
.xx "" "strings: find" "printable strings in a file." "" strings(1)
.xx "" "" "printcap: printer capability data base." "" printcap(5)
.xx "print environment." "" "printenv, env: print out the environment, set and" "" printenv(1)
.xx "" "banner: print large banner on" "printer." "" banner(6)
.xx "" "printcap:" "printer capability data base." "" printcap(5)
.xx "" "lpc: line" "printer control program." "" lpc(8)
.xx "" "lpd: line" "printer spooler daemon." "" lpd(8)
.xx "" "lprm: remove jobs from the line" "printer spooling queue." "" lprm(1)
.xx "" "pac:" "printer/plotter accounting information." "" pac(8)
.xx "" "ppi: HP-IB" "printer/plotter interface." "" ppi(4)
.xx "" "" "printf: formatted output." "" printf(1)
.xx "vfprintf, vsprintf, vsnprintf: formatted output/" "" "printf, fprintf, sprintf, snprintf, vprintf," "" printf(3)
.xx "exculsive)." "isgraph:" "printing character test (space character" "" isgraph(3)
.xx "inclusive)." "isprint:" "printing character test (space character" "" isprint(3)
.xx "" "setpriority: get/set program scheduling" "priority." "getpriority," getpriority(2)
.xx "" "nice: execute a command at a low scheduling" "priority." "" nice(1)
.xx "" "nice: set program scheduling" "priority." "" nice(3)
.xx "" "renice: alter" "priority of running processes." "" renice(8)
.xx "" "nice: run low" "priority process." "" csh(1)
.xx "" "xsend, xget, enroll:" "private encrypted mail." "" xsend(1)
.xx "" "adduser:" "procedure for adding new users." "" adduser(8)
.xx "" "boot: system bootstrapping" "procedures." "" boot_hp300(8)
.xx "" "nice: run low priority" "process." "" csh(1)
.xx "" "stop: halt a job or" "process." "" csh(1)
.xx "" "_exit: terminate the calling" "process." "" _exit(2)
.xx "" "fork: create a new" "process." "" fork(2)
.xx "" "gcore: get core images of running" "process." "" gcore(1)
.xx "" "kill: terminate or signal a" "process." "" kill(1)
.xx "" "kill: send signal to a" "process." "" kill(2)
.xx "" "raise: send a signal to the current" "process." "" raise(3)
.xx "" "acct: enable or disable" "process accounting." "" acct(2)
.xx "" "wait: await" "process completion." "" wait(1)
.xx "" "init:" "process control initialization." "" init(8)
.xx "" "sleep: suspend" "process execution for interval of seconds." "" sleep(3)
.xx "" "getpgrp: get" "process group." "" getpgrp(2)
.xx "" "killpg: send signal to a" "process group." "" killpg(2)
.xx "" "setpgid, setpgrp: set" "process group." "" setpgid(2)
.xx "" "setsid: create session and set" "process group ID." "" setsid(2)
.xx "" "tcgetpgrp: get foreground" "process group ID." "" tcgetpgrp(3)
.xx "" "tcsetpgrp: set foreground" "process group ID." "" tcsetpgrp(3)
.xx "" "getgid, getegid: get group" "process identification." "" getgid(2)
.xx "" "getpid, getppid: get parent or calling" "process identification." "" getpid(2)
.xx "" "vfork: spawn new" "process in a virtual memory efficient way." "" vfork(2)
.xx "" "onintr:" "process interrupts in command scripts." "" csh(1)
.xx "" "popen, pclose:" "process I/O." "" popen(3)
.xx "" "profil: control" "process profiling." "" profil(2)
.xx "" "kvm_getprocs, kvm_getargv, kvm_getenvv: access user" "process state." "" kvm_getprocs(3)
.xx "" "\&ps:" "process status." "" ps(1)
.xx "" "wait, waitpid, wait4, wait3: wait for" "process terminatation." "" wait(2)
.xx "" "times:" "process times." "" times(3)
.xx "" "ptrace:" "process trace." "" ptrace(2)
.xx "" "ktrace: enable kernel" "process tracing." "" ktrace(1)
.xx "" "ktrace:" "process tracing." "" ktrace(2)
.xx "" "kill: kill jobs and" "processes." "" csh(1)
.xx "" "renice: alter priority of running" "processes." "" renice(8)
.xx "" "wait: wait for background" "processes to complete." "" csh(1)
.xx "" "awk: pattern scanning and" "processing language." "" awk(1)
.xx "" "reboot: reboot system or halt" "processor." "" reboot(2)
.xx "" "clock: determine" "processor time used." "" clock(3)
.xx "" "echo:" "produce message in a shell script." "" echo(1)
.xx "" "" "profil: control process profiling." "" profil(2)
.xx "" "moncontrol, monstartup: control execution" "profile." "" moncontrol(3)
.xx "" "kgmon: generate a dump of the operating system's" "profile buffers." "" kgmon(8)
.xx "" "gprof: display call graph" "profile data." "" gprof(1)
.xx "" "profil: control process" "profiling." "" profil(2)
.xx "" "finger: user information lookup" "program." "" finger(1)
.xx "" "ftp: ARPANET file transfer" "program." "" ftp(1)
.xx "" "lpc: line printer control" "program." "" lpc(8)
.xx "" "lpq: spool queue examination" "program." "" lpq(1)
.xx "" "msgs: system messages and junk mail" "program." "" msgs(1)
.xx "" "mt: magnetic tape manipulating" "program." "" mt(1)
.xx "" "rdist: remote file distribution" "program." "" rdist(1)
.xx "" "tftp: trivial file transfer" "program." "" tftp(1)
.xx "" "timedc: timed control" "program." "" timedc(8)
.xx "" "units: conversion" "program." "" units(1)
.xx "" "make: maintain" "program dependencies." "" make(1)
.xx "" "which: locate a" "program file including aliases and paths." "" which(1)
.xx "" "patch: a" "program for applying a diff file to an original." "" patch(1)
.xx "" "rpc: rpc" "program number data base." "" rpc(5)
.xx "" "portmap: DARPA port to RPC" "program number mapper." "" portmap(8)
.xx "" "getpriority, setpriority: get/set" "program scheduling priority." "" getpriority(2)
.xx "" "nice: set" "program scheduling priority." "" nice(3)
.xx "" "indent: indent and format C" "program source." "" indent(1)
.xx "" "abort: cause abnormal" "program termination." "" abort(3)
.xx "" "exit: perform normal" "program termination." "" exit(3)
.xx "" "struct: structure Fortran" "programs." "" struct(1)
.xx "" "vgrind: grind nice listings of" "programs." "" vgrind(1)
.xx "" "whereis: locate" "programs." "" whereis(1)
.xx "" "xstr: extract strings from C" "programs to implement shared strings." "" xstr(1)
.xx "" "cc, g++: GNU" "project C and C++ Compiler (v2 preliminary)." "" cc(1)
.xx "" "g++: GNU" "project C++ Compiler (v2 preliminary)." "" g++(1)
.xx "" "emacs: GNU" "project Emacs." "" emacs(1)
.xx "" "mprotect: control the" "protection of pages." "" mprotect(2)
.xx "" "clnp: Connectionless-Mode Network" "Protocol." "" clnp(4)
.xx "" "cltp: ISO Connectionless Transport" "Protocol." "" cltp(4)
.xx "" "es-is: End System to Intermediate System Routing" "Protocol." "" esis(4)
.xx "" "icmp: Internet Control Message" "Protocol." "" icmp(4)
.xx "" "idp: Xerox Internet Datagram" "Protocol." "" idp(4)
.xx "" "ip: Internet" "Protocol." "" ip(4)
.xx "" "spp: Xerox Sequenced Packet" "Protocol." "" spp(4)
.xx "" "tcp: Internet Transmission Control" "Protocol." "" tcp(4)
.xx "" "telnet: user interface to the  TELNET" "protocol." "" telnet(1)
.xx "" "TP: ISO Transport" "Protocol." "" tp(4)
.xx "" "udp: Internet User Datagram" "Protocol." "" udp(4)
.xx "" "rpcgen: an RPC" "protocol compiler." "" rpcgen(1)
.xx "" "XNSrouted: NS Routing Information" "Protocol daemon." "" XNSrouted(8)
.xx "" "getprotobyname, setprotoent, endprotoent: get" "protocol entry." "getprotoent, getprotobynumber," getprotoent(3)
.xx "" "inet: Internet" "protocol family." "" inet(4)
.xx "" "iso: ISO" "protocol family." "" iso(4)
.xx "" "ns: Xerox Network Systems(tm)" "protocol family." "" ns(4)
.xx "" "unix: UNIX-domain" "protocol family." "" unix(4)
.xx "" "rmt: remote magtape" "protocol module." "" rmt(8)
.xx "" "protocols:" "protocol name data base." "" protocols(5)
.xx "" "ftpd: Internet File Transfer" "Protocol server." "" ftpd(8)
.xx "" "telnetd: DARPA TELNET" "protocol server." "" telnetd(8)
.xx "" "tftpd: Internet Trivial File Transfer" "Protocol server." "" tftpd(8)
.xx "" "trpt: transliterate" "protocol trace." "" trpt(8)
.xx "" "trsp: transliterate sequenced packet" "protocol trace." "" trsp(8)
.xx "" "" "protocols: protocol name data base." "" protocols(5)
.xx "" "mkproto: construct a" "prototype file system." "" mkproto(8)
.xx "" "" "\&ps: process status." "" ps(1)
.xx "document." "" "psbb: extract bounding box from PostScript" "" psbb(1)
.xx "" "pty:" "pseudo terminal driver." "" pty(4)
.xx "messages." "" "psignal, sys_siglist sys_signame: system signal" "" psignal(3)
.xx "" "" "pstat: display system data structures." "" pstat(8)
.xx "" "" "ptrace: process trace." "" ptrace(2)
.xx "" "" "ptx: permuted index." "" ptx(1)
.xx "" "" "pty: pseudo terminal driver." "" pty(4)
.xx "" "publickey:" "public key database." "" publickey(5)
.xx "" "" "publickey: public key database." "" publickey(5)
.xx "" "bcd, ppt, morse: reformat input as" "punch cards, paper tape or morse code." "" bcd(6)
.xx "" "ispunct:" "punctuation character test." "" ispunct(3)
.xx "" "pushd:" "push shell directory stack." "" csh(1)
.xx "" "" "pushd: push shell directory stack." "" csh(1)
.xx "a stream." "fputc," "putc, putchar, putw: output a character or word to" "" putc(3)
.xx "stream." "fputc, putc," "putchar, putw: output a character or word to a" "" putc(3)
.xx "functions." "getenv," "putenv, setenv, unsetenv: environment variable" "" getenv(3)
.xx "" "fputs," "puts: output a line to a stream." "" fputs(3)
.xx "" "fputc, putc, putchar," "putw: output a character or word to a stream." "" putc(3)
.xx "" "" "pwcache: cache password and group entries." "" pwcache(3)
.xx "" "" "pwd: return working directory name." "" pwd(1)
.xx "" "" "pwd_mkdb: generate the password databases." "" pwd_mkdb(8)
.xx "" "" "qsort, heapsort, mergesort: sort functions." "" qsort(3)
.xx "" "strtol, strtoq: convert string value to a long or" "quad_t integer." "" strtol(3)
.xx "" "nslookup:" "query Internet name servers interactively." "" nslookup(1)
.xx "" "dig: send domain name" "query packets to name servers." "" dig(1)
.xx "" "amq: automounter" "query tool." "" amq(8)
.xx "" "atq: display the at(1) job" "queue." "" atq(1)
.xx "" "insque, remque: insert/remove element from a" "queue." "" insque(3)
.xx "" "lprm: remove jobs from the line printer spooling" "queue." "" lprm(1)
.xx "" "uuq: examine or manipulate the uucp" "queue." "" uuq(1)
.xx "" "lpq: spool" "queue examination program." "" lpq(1)
.xx "" "uucico, uucpd: transfer files" "queued by uucp or uux." "" uucico(8)
.xx "" "mdoc:" "quick reference guide for the \-mdoc macro package." "" mdoc(7)
.xx "" "arithmetic:" "quiz on simple arithmetic." "" arithmetic(6)
.xx "" "" "quiz: random knowledge tests." "" quiz(6)
.xx "system." "" "quot: display total block usage per user for a file" "" quot(8)
.xx "" "quotacheck: filesystem" "quota consistency checker." "" quotacheck(8)
.xx "" "" "quota: display disk usage and limits." "" quota(1)
.xx "" "" "quotacheck: filesystem quota consistency checker." "" quotacheck(8)
.xx "" "" "quotactl: manipulate filesystem quotas." "" quotactl(2)
.xx "" "quotaon," "quotaoff: turn filesystem quotas on and off." "" quotaon(8)
.xx "off." "" "quotaon, quotaoff: turn filesystem quotas on and" "" quotaon(8)
.xx "" "edquota: edit user" "quotas." "" edquota(8)
.xx "" "quotactl: manipulate filesystem" "quotas." "" quotactl(2)
.xx "" "repquota: summarize" "quotas for a file system." "" repquota(8)
.xx "" "quotaon, quotaoff: turn filesystem" "quotas on and off." "" quotaon(8)
.xx "" "div: return" "quotient and remainder from division." "" div(3)
.xx "" "ldiv: return" "quotient and remainder from division." "" ldiv(3)
.xx "" "radixsort:" "radix sort." "" radixsort(3)
.xx "" "" "radixsort: radix sort." "" radixsort(3)
.xx "" "" "rain: animated raindrops display." "" rain(6)
.xx "" "rain: animated" "raindrops display." "" rain(6)
.xx "" "" "raise: send a signal to the current process." "" raise(3)
.xx "" "" "rand, srand: bad random number generator." "" rand(3)
.xx "" "strfile, unstr: create a" "random access file for storing strings." "" strfile(8)
.xx "" "jot: print sequential or" "random data." "" jot(1)
.xx "" "fortune: print a" "random, hopefully interesting, adage." "" fortune(6)
.xx "" "quiz:" "random knowledge tests." "" quiz(6)
.xx "" "rand, srand: bad" "random number generator." "" rand(3)
.xx "" "random, srandom, initstate, setstate: better" "random number generator; routines for changing/" "" random(3)
.xx "number generator; routines for changing/" "" "random, srandom, initstate, setstate: better random" "" random(3)
.xx "" "" "ranlib: archive (library) table-of-contents format." "" ranlib.5(5)
.xx "" "" "ranlib: table-of-contents for archive libraries." "" ranlib(1)
.xx "" "m4: macro language preprocessor for" "ratfor(1) and pascal(1)." "" m4(1)
.xx "" "" "rb: HP98720 ``Renaissance'' device interface." "" rb(4)
.xx "" "" "rbootd: HP remote boot server." "" rbootd(8)
.xx "" "" "rc: command script for auto\-reboot and daemons." "" rc(8)
.xx "stream to a remote command." "" "rcmd, rresvport, ruserok: routines for returning a" "" rcmd(3)
.xx "" "" "rcp: remote file copy." "" rcp(1)
.xx "" "freeze a configuration of sources checked in under" "RCS." "rcsfreeze:" rcsfreeze(1)
.xx "" "" "rcs: change RCS file attributes." "" rcs(1)
.xx "" "rcsintro: introduction to" "RCS commands." "" rcsintro(1)
.xx "" "rcsfile: format of" "RCS file." "" rcsfile(5)
.xx "" "rcs: change" "RCS file attributes." "" rcs(1)
.xx "" "print log messages and other information about" "RCS files." "rlog:" rlog(1)
.xx "" "ci: check in" "RCS revisions." "" ci(1)
.xx "" "co: check out" "RCS revisions." "" co(1)
.xx "" "rcsdiff: compare" "RCS revisions." "" rcsdiff(1)
.xx "" "rcsmerge: merge" "RCS revisions." "" rcsmerge(1)
.xx "" "" "rcsclean: clean up working files." "" rcsclean(1)
.xx "" "" "rcsdiff: compare RCS revisions." "" rcsdiff(1)
.xx "" "" "rcsfile: format of RCS file." "" rcsfile(5)
.xx "checked in under RCS." "" "rcsfreeze: freeze a configuration of sources" "" rcsfreeze(1)
.xx "" "" "rcsintro: introduction to RCS commands." "" rcsintro(1)
.xx "" "" "rcsmerge: merge RCS revisions." "" rcsmerge(1)
.xx "" "" "rd: CS/80 disk interface." "" rd(4)
.xx "" "" "rdist: remote file distribution program." "" rdist(1)
.xx "" "disklabel:" "read and write disk pack label." "" disklabel(8)
.xx "hierarchies." "pax:" "read and write file archives and copy directory" "" pax(1)
.xx "" "source:" "read commands from file." "" csh(1)
.xx "" "read, readv:" "read input." "" read(2)
.xx "" "kvm_read, kvm_write:" "read or write kernel virtual memory." "" kvm_read(3)
.xx "" "" "read, readv: read input." "" read(2)
.xx "" "readlink:" "read value of a symbolic link." "" readlink(2)
.xx "dirfd: directory operations." "opendir," "readdir, telldir, seekdir, rewinddir, closedir," "" directory(3)
.xx "" "open: open or create a file for" "reading or writing." "" open(2)
.xx "" "" "readlink: read value of a symbolic link." "" readlink(2)
.xx "" "read," "readv: read input." "" read(2)
.xx "" "bad144:" "read/write dec standard 144 bad sector information." "" bad144(8)
.xx "" "lseek: reposition" "read/write file offset." "" lseek(2)
.xx "" "setregid: set" "real and effective group ID." "" setregid(2)
.xx "" "setreuid: set" "real and effective user ID's." "" setreuid(2)
.xx "" "free up memory allocated with malloc, calloc or" "realloc." "free:" free(3)
.xx "operations." "malloc, free," "realloc, calloc, alloca: general memory allocation" "" memory(3)
.xx "" "" "realloc: reallocation of memory function." "" realloc(3)
.xx "" "realloc:" "reallocation of memory function." "" realloc(3)
.xx "" "/etc/kerberosIV/krb.realms: host to Kerberos" "realm translation file." "" krb.realms(5)
.xx "" "/etc/kerberosIV/krb." "realms: host to Kerberos realm translation file." "" krb.realms(5)
.xx "" "symorder:" "rearrange name list." "" symorder(1)
.xx "" "" "reboot, halt: stopping and restarting the system." "" reboot(8)
.xx "" "" "reboot: reboot system or halt processor." "" reboot(2)
.xx "" "reboot:" "reboot system or halt processor." "" reboot(2)
.xx "" "fastboot, fasthalt:" "reboot/halt the system without checking the disks." "" fastboot(8)
.xx "" "newaliases:" "rebuild the data base for the mail aliases file." "" newaliases(1)
.xx "" "recv, recvfrom, recvmsg:" "receive a message from a socket." "" recv(2)
.xx "" "mail: send and" "receive mail." "" mail(1)
.xx "" "rmail: handle remote mail" "received via uucp." "" rmail(8)
.xx "" "" "recno: record number database access method." "" recno(3)
.xx "" "" "re_comp, re_exec: regular expression handler." "" re_comp(3)
.xx "" "rehash:" "recompute command hash table." "" csh(1)
.xx "" "recno:" "record number database access method." "" recno(3)
.xx "" "utmp, wtmp, lastlog: login" "records." "" utmp(5)
.xx "" "nvi." "recover: send mail about recoverable files." "" nvi.recover(8)
.xx "" "nvi.recover: send mail about" "recoverable files." "" nvi.recover(8)
.xx "socket." "" "recv, recvfrom, recvmsg: receive a message from a" "" recv(2)
.xx "" "recv," "recvfrom, recvmsg: receive a message from a socket." "" recv(2)
.xx "" "recv, recvfrom," "recvmsg: receive a message from a socket." "" recv(2)
.xx "" "eval:" "re-evaluate shell data." "" csh(1)
.xx "" "re_comp," "re_exec: regular expression handler." "" re_comp(3)
.xx "" "mdoc: quick" "reference guide for the \-mdoc macro package." "" mdoc(7)
.xx "" "@g@refer: preprocess bibliographic" "references for groff." "" refer(1)
.xx "code." "bcd, ppt, morse:" "reformat input as punch cards, paper tape or morse" "" bcd(6)
.xx "" "" "re_format: POSIX 1003.2 regular expressions." "" re_format(7)
.xx "" "nologin: politely" "refuse a login." "" nologin(8)
.xx "regular-expression library." "" "regcomp, regexec, regerror, regfree:" "" regex(3)
.xx "expression handlers." "" "regcomp, regexec, regsub, regerror: regular" "" regexp(3)
.xx "" "regcomp, regexec," "regerror, regfree: regular-expression library." "" regex(3)
.xx "" "regcomp, regexec, regsub," "regerror: regular expression handlers." "" regexp(3)
.xx "library." "regcomp," "regexec, regerror, regfree: regular-expression" "" regex(3)
.xx "handlers." "regcomp," "regexec, regsub, regerror: regular expression" "" regexp(3)
.xx "" "regcomp, regexec, regerror," "regfree: regular-expression library." "" regex(3)
.xx "" "msync: synchronize a mapped" "region." "" msync(2)
.xx "" "atexit:" "register a function to be called on exit." "" atexit(3)
.xx "" "" "register: register with Kerberos." "" register(1)
.xx "" "register:" "register with Kerberos." "" register(1)
.xx "" "" "registerd: Kerberos registration daemon." "" registerd(8)
.xx "" "registerd: Kerberos" "registration daemon." "" registerd(8)
.xx "" "regcomp, regexec," "regsub, regerror: regular expression handlers." "" regexp(3)
.xx "" "re_comp, re_exec:" "regular expression handler." "" re_comp(3)
.xx "" "regcomp, regexec, regsub, regerror:" "regular expression handlers." "" regexp(3)
.xx "" "re_format: POSIX 1003.2" "regular expressions." "" re_format(7)
.xx "" "regcomp, regexec, regerror, regfree:" "regular-expression library." "" regex(3)
.xx "" "" "rehash: recompute command hash table." "" csh(1)
.xx "" "comm: select or" "reject lines common to two files." "" comm(1)
.xx "" "join:" "relational database operator." "" join(1)
.xx "" "sigpause: atomically" "release blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "sigsuspend: atomically" "release blocked signals and wait for interrupt." "" sigsuspend(2)
.xx "database." "named." "reload: cause the name server to synchronize its" "" named.reload(8)
.xx "" "div: return quotient and" "remainder from division." "" div(3)
.xx "" "ldiv: return quotient and" "remainder from division." "" ldiv(3)
.xx "" "fmod: floating-point" "remainder function." "" fmod(3)
.xx "" "leave:" "remind you when you have to leave." "" leave(1)
.xx "" "calendar:" "reminder service." "" calendar(1)
.xx "" "rbootd: HP" "remote boot server." "" rbootd(8)
.xx "" "ruserok: routines for returning a stream to a" "remote command." "rcmd, rresvport," rcmd(3)
.xx "" "rexec: return stream to a" "remote command." "" rexec(3)
.xx "" "L.cmds: UUCP" "remote command permissions file." "" L.cmds(5)
.xx "" "rexecd:" "remote execution server." "" rexecd(8)
.xx "" "rcp:" "remote file copy." "" rcp(1)
.xx "" "rdist:" "remote file distribution program." "" rdist(1)
.xx "" "uusend: send a file to a" "remote host." "" uusend(1)
.xx "" "L.sys: UUCP" "remote host description file." "" L.sys(5)
.xx "" "remote:" "remote host description file." "" remote(5)
.xx "" "phones:" "remote host phone number data base." "" phones(5)
.xx "" "rlogin:" "remote login." "" rlogin(1)
.xx "" "rlogind:" "remote login server." "" rlogind(8)
.xx "" "tn3270: full-screen" "remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "rmt:" "remote magtape protocol module." "" rmt(8)
.xx "" "rmail: handle" "remote mail received via uucp." "" rmail(8)
.xx "" "exports: define" "remote mount points for NFS mount requests." "" exports(5)
.xx "" "mountd: service" "remote NFS mount requests." "" mountd(8)
.xx "" "showmount: show" "remote nfs mounts on host." "" showmount(8)
.xx "" "nfsd:" "remote NFS server." "" nfsd(8)
.xx "" "" "remote: remote host description file." "" remote(5)
.xx "" "rsh:" "remote shell." "" rsh(1)
.xx "" "rshd:" "remote shell server." "" rshd(8)
.xx "" "rstat:" "remote status display." "" rstat(1)
.xx "" "tip, cu: connect to a" "remote system." "" tip(1)
.xx "" "talkd:" "remote user communication server." "" talkd(8)
.xx "" "fingerd:" "remote user information server." "" fingerd(8)
.xx "" "uupoll: poll a" "remote UUCP site." "" uupoll(8)
.xx "" "rmdir:" "remove a directory file." "" rmdir(2)
.xx "" "munmap:" "remove a mapping." "" munmap(2)
.xx "" "unalias:" "remove aliases." "" csh(1)
.xx "" "flock: apply or" "remove an advisory lock on an open file." "" flock(2)
.xx "" "colrm:" "remove columns from a file." "" colrm(1)
.xx "" "rmdir:" "remove directories." "" rmdir(1)
.xx "" "rm:" "remove directory entries." "" rm(1)
.xx "" "remove:" "remove directory entry." "" remove(3)
.xx "" "unlink:" "remove directory entry." "" unlink(2)
.xx "" "unsetenv:" "remove environment variables." "" csh(1)
.xx "" "unifdef:" "remove ifdef'ed lines." "" unifdef(1)
.xx "" "lprm:" "remove jobs from the line printer spooling queue." "" lprm(1)
.xx "" "atrm:" "remove jobs spooled by at(1)." "" atrm(1)
.xx "" "deroff:" "remove nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "" "remove: remove directory entry." "" remove(3)
.xx "" "unlimit:" "remove resource limitiations." "" csh(1)
.xx "files." "strip:" "remove unnecessary information from executable" "" strip(1)
.xx "" "insque," "remque: insert/remove element from a queue." "" insque(3)
.xx "" "rb: HP98720" "``Renaissance'' device interface." "" rb(4)
.xx "" "" "rename: change the name of a file." "" rename(2)
.xx "" "" "renice: alter priority of running processes." "" renice(8)
.xx "" "fsck: filesystem consistency check and interactive" "repair." "" fsck(8)
.xx "" "while:" "repeat commands conditionally." "" csh(1)
.xx "" "" "repeat: execute command repeatedly." "" csh(1)
.xx "" "uniq: report or filter out" "repeated lines in a file." "" uniq(1)
.xx "" "repeat: execute command" "repeatedly." "" csh(1)
.xx "" "yes: be" "repetitively affirmative." "" yes(1)
.xx "" "iostat:" "report I/O statistics." "" iostat(8)
.xx "" "perl: practical extraction and" "report language." "" perl(1)
.xx "" "uniq:" "report or filter out repeated lines in a file." "" uniq(1)
.xx "" "sendbug: mail a system bug" "report to 4bsd-bugs." "" sendbug(1)
.xx "" "vmstat:" "report virtual memory statistics." "" vmstat(8)
.xx "" "bugfiler: file bug" "reports in folders automatically." "" bugfiler(8)
.xx "" "fgetpos, fseek, fsetpos, ftell, rewind:" "reposition a stream." "" fseek(3)
.xx "" "lseek:" "reposition read/write file offset." "" lseek(2)
.xx "" "" "repquota: summarize quotas for a file system." "" repquota(8)
.xx "" "unvis, strunvis: decode a visual" "representation of characters." "" unvis(3)
.xx "" "unvis: revert a visual" "representation of data back to original form." "" unvis(1)
.xx "" "notify:" "request immediate notification." "" csh(1)
.xx "" "exports: define remote mount points for NFS mount" "requests." "" exports(5)
.xx "" "mountd: service remote NFS mount" "requests." "" mountd(8)
.xx "" "lock:" "reserve a terminal." "" lock(1)
.xx "" "clearerr, feof, ferror, fileno: check and" "reset stream status." "" ferror(3)
.xx "" "rs:" "reshape a data array." "" rs(1)
.xx "" "res_query, res_search, res_mkquery, res_send," "res_init, dn_comp, dn_expand: resolver routines." "" resolver(3)
.xx "dn_expand: resolver/" "res_query, res_search," "res_mkquery, res_send, res_init, dn_comp," "" resolver(3)
.xx "" "hostname: host name" "resolution description." "" hostname(7)
.xx "" "arp: address" "resolution display and control." "" arp(8)
.xx "" "resolver:" "resolver configuration file." "" resolver(5)
.xx "" "" "resolver: resolver configuration file." "" resolver(5)
.xx "" "res_send, res_init, dn_comp, dn_expand:" "resolver routines." "/res_search, res_mkquery," resolver(3)
.xx "" "getrlimit, setrlimit: control maximum system" "resource consumption." "" getrlimit(2)
.xx "" "vlimit: control maximum system" "resource consumption." "" vlimit(3)
.xx "" "limit: alter per-process" "resource limitations." "" csh(1)
.xx "" "unlimit: remove" "resource limitiations." "" csh(1)
.xx "" "getrusage: get information about" "resource utilization." "" getrusage(2)
.xx "" "vtimes: get information about" "resource utilization." "" vtimes(3)
.xx "res_init, dn_comp, dn_expand: resolver routines." "" "res_query, res_search, res_mkquery, res_send," "" resolver(3)
.xx "dn_comp, dn_expand: resolver routines." "res_query," "res_search, res_mkquery, res_send, res_init," "" resolver(3)
.xx "routines." "res_query, res_search, res_mkquery," "res_send, res_init, dn_comp, dn_expand: resolver" "" resolver(3)
.xx "" "named." "restart: stop and restart the name server." "" named.restart(8)
.xx "" "named.restart: stop and" "restart the name server." "" named.restart(8)
.xx "" "reboot, halt: stopping and" "restarting the system." "" reboot(8)
.xx "with dump." "restore:" "restore files or file systems from backups made" "" restore(8)
.xx "made with dump." "" "restore: restore files or file systems from backups" "" restore(8)
.xx "" "suspend: suspend a shell," "resuming its superior." "" csh(1)
.xx "" "mset:" "retrieve ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "file." "nlist:" "retrieve symbol table name list from an executable" "" nlist(3)
.xx "" "kvm_nlist:" "retrieve symbol table names from a kernel image." "" kvm_nlist(3)
.xx "" "false:" "return false value." "" false(1)
.xx "" "basename, dirname:" "return filename or directory portion of pathname." "" basename(1)
.xx "" "sigreturn:" "return from signal." "" sigreturn(2)
.xx "" "vacation:" "return ``I am not here'' indication." "" vacation(1)
.xx "" "div:" "return quotient and remainder from division." "" div(3)
.xx "" "ldiv:" "return quotient and remainder from division." "" ldiv(3)
.xx "" "rexec:" "return stream to a remote command." "" rexec(3)
.xx "" "labs:" "return the absolute value of a long integer." "" labs(3)
.xx "" "timezone:" "return the timezone abbreviation." "" timezone(3)
.xx "" "true:" "return true value." "" true(1)
.xx "" "id:" "return user identity." "" id(1)
.xx "" "tty:" "return user's terminal name." "" tty(1)
.xx "" "pwd:" "return working directory name." "" pwd(1)
.xx "" "rcmd, rresvport, ruserok: routines for" "returning a stream to a remote command." "" rcmd(3)
.xx "" "" "rev: reverse lines of a file." "" rev(1)
.xx "" "col: filter" "reverse line feeds from input." "" col(1)
.xx "" "rev:" "reverse lines of a file." "" rev(1)
.xx "" "lastcomm: show last commands executed in" "reverse order." "" lastcomm(1)
.xx "original form." "unvis:" "revert a visual representation of data back to" "" unvis(1)
.xx "" "ci: check in RCS" "revisions." "" ci(1)
.xx "" "co: check out RCS" "revisions." "" co(1)
.xx "" "rcsdiff: compare RCS" "revisions." "" rcsdiff(1)
.xx "" "rcsmerge: merge RCS" "revisions." "" rcsmerge(1)
.xx "" "revoke:" "revoke file access." "" revoke(2)
.xx "" "" "revoke: revoke file access." "" revoke(2)
.xx "" "fgetpos, fseek, fsetpos, ftell," "rewind: reposition a stream." "" fseek(3)
.xx "" "opendir, readdir, telldir, seekdir," "rewinddir, closedir, dirfd: directory operations." "" directory(3)
.xx "" "" "rexec: return stream to a remote command." "" rexec(3)
.xx "" "" "rexecd: remote execution server." "" rexecd(8)
.xx "" "" "rhost: look up host names using domain server." "" host(1)
.xx "" "" "rindex: locate character in string." "" rindex(3)
.xx "" "strsep, strspn, strcspn, strstr, strtok, index," "rindex: string specifi" "/strerror, strlen, strpbrk," string(3)
.xx "" "" "rint: and round-to-closest integer functions." "" rint(3)
.xx "" "lptest: generate lineprinter" "ripple pattern." "" lptest(1)
.xx "about RCS files." "" "rlog: print log messages and other information" "" rlog(1)
.xx "" "" "rlogin: remote login." "" rlogin(1)
.xx "" "" "rlogind: remote login server." "" rlogind(8)
.xx "" "" "rm: remove directory entries." "" rm(1)
.xx "" "" "rmail: handle remote mail received via uucp." "" rmail(8)
.xx "" "" "rmdir: remove a directory file." "" rmdir(2)
.xx "" "" "rmdir: remove directories." "" rmdir(1)
.xx "" "" "rmt: remote magtape protocol module." "" rmt(8)
.xx "" "robots: fight off villainous" "robots." "" robots(6)
.xx "" "" "robots: fight off villainous robots." "" robots(6)
.xx "" "" "rogue: exploring The Dungeons of Doom." "" rogue(6)
.xx "" "cbrt, sqrt: cube" "root and square root functions." "" sqrt(3)
.xx "" "chroot: change" "root directory." "" chroot(2)
.xx "" "chroot: change" "root directory." "" chroot(8)
.xx "" "cbrt, sqrt: cube root and square" "root functions." "" sqrt(3)
.xx "" "rint: and" "round-to-closest integer functions." "" rint(3)
.xx "" "" "route: kernel packet forwarding database." "" route(4)
.xx "(Interim)." "" "route: manually manipulate the routing tables" "" route(8)
.xx "" "traceroute: print the" "route packets take to network host." "" traceroute(8)
.xx "" "" "routed: network routing daemon." "" routed(8)
.xx "" "acl_delete, acl_initialize: access control list" "routines." "/acl_check, acl_exact_match, acl_add," acl_check(3)
.xx "" "cgetnext, cgetclose: capability database access" "routines." "/cgetnum, cgetstr, cgetustr, cgetfirst," getcap(3)
.xx "" "inet_netof: Internet address manipulation" "routines." "/inet_ntoa, inet_makeaddr, inet_lnaof," inet(3)
.xx "" "krb_get_lrealm: additional Kerberos utility" "routines." "/krb_get_krbhst, krb_get_admhst," krb_realmofhost(3)
.xx "" "lsearch, lfind,: linear searching" "routines." "" lsearch(3)
.xx "" "ns_ntoa: Xerox NS Ns (tm) address conversion" "routines." "ns_addr," ns(3)
.xx "" "res_send, res_init, dn_comp, dn_expand: resolver" "routines." "res_query, res_search, res_mkquery," resolver(3)
.xx "" "tgoto, tputs: terminal independent operation" "routines." "tgetent, tgetnum, tgetflag, tgetstr," termcap(3)
.xx "" "tempnam, tmpfile, tmpnam: temporary file" "routines." "" tmpnam(3)
.xx "" "setstate: better random number generator;" "routines for changing generators." "/initstate," random(3)
.xx "" "link_ntoa: elementary address specification" "routines for link level access." "link_addr," link_addr(3)
.xx "" "link_ntoa: elementary address specification" "routines for link level access." "link_addr," linkaddr(3)
.xx "" "/tf_get_pname, tf_get_pinst, tf_get_cred, tf_close:" "routines for manipulating a Kerberos ticket file." "" tf_util(3)
.xx "" "/iso_ntoa: elementary network address conversion" "routines for Open System Interconnection." "" iso_addr(3)
.xx "command." "rcmd, rresvport, ruserok:" "routines for returning a stream to a remote" "" rcmd(3)
.xx "" "/krb_recvauth, krb_net_write, krb_net_read: Kerberos" "routines for sending authentication via network/" "" krb_sendauth(3)
.xx "" "routed: network" "routing daemon." "" routed(8)
.xx "" "XNSrouted: NS" "Routing Information Protocol daemon." "" XNSrouted(8)
.xx "" "es-is: End System to Intermediate System" "Routing Protocol." "" esis(4)
.xx "" "route: manually manipulate the" "routing tables (Interim)." "" route(8)
.xx "" "rpc:" "rpc program number data base." "" rpc(5)
.xx "" "portmap: DARPA port to" "RPC program number mapper." "" portmap(8)
.xx "" "rpcgen: an" "RPC protocol compiler." "" rpcgen(1)
.xx "" "" "rpc: rpc program number data base." "" rpc(5)
.xx "" "" "rpcgen: an RPC protocol compiler." "" rpcgen(1)
.xx "" "/mout, move, msqrt, msub, mult, omin, omout, pow," "rpow, sdiv,: multiple precision integer arithmetic." "" mp(3)
.xx "to a remote command." "rcmd," "rresvport, ruserok: routines for returning a stream" "" rcmd(3)
.xx "" "" "rs: reshape a data array." "" rs(1)
.xx "" "" "rsh: remote shell." "" rsh(1)
.xx "" "" "rshd: remote shell server." "" rshd(8)
.xx "" "" "rstat: remote status display." "" rstat(1)
.xx "" "nohup:" "run command immune to hangups." "" csh(1)
.xx "" "daemon:" "run in the background." "" daemon(3)
.xx "" "nice:" "run low priority process." "" csh(1)
.xx "" "mbrune, mbrrune, mbmb: multibyte" "rune support for C." "" mbrune(3)
.xx "" "setrunelocale, setinvalidrune, sgetrune, sputrune:" "rune support for C." "" rune(3)
.xx "" "EUC: EUC encoding of" "runes." "" euc(4)
.xx "" "character set Transformation Format encoding of" "runes." "UTF2: Universal" utf2(4)
.xx "" "uptime: show how long system has been" "running." "" uptime(1)
.xx "" "gcore: get core images of" "running process." "" gcore(1)
.xx "" "renice: alter priority of" "running processes." "" renice(8)
.xx "" "" "ruptime: show host status of local machines." "" ruptime(1)
.xx "" "kuserok: Kerberos version of" "ruserok." "" kuserok(3)
.xx "remote command." "rcmd, rresvport," "ruserok: routines for returning a stream to a" "" rcmd(3)
.xx "" "" "rwho: who is logged in on local machines." "" rwho(1)
.xx "" "" "rwhod: system status server." "" rwhod(8)
.xx "" "" "sa, accton: system accounting." "" sa(8)
.xx "" "" "sail: multi-user wooden ships and iron men." "" sail(6)
.xx "" "mount_umap:" "sample file system layer." "" mount_umap(8)
.xx "" "mdoc.samples: tutorial" "sampler for writing  manuals with \-mdoc." "" mdoc.samples(7)
.xx "\-mdoc." "mdoc." "samples: tutorial sampler for writing  manuals with" "" mdoc.samples(7)
.xx "" "strdup:" "save a copy of a string." "" strdup(3)
.xx "" "savecore:" "save a core dump of the operating system." "" savecore(8)
.xx "" "" "savecore: save a core dump of the operating system." "" savecore(8)
.xx "" "brk," "sbrk: change data segment size." "" brk(2)
.xx "" "copysign, drem, finite, logb," "scalb: IEEE 754 floating point support." "" ieee(3)
.xx "" "scandir, alphasort:" "scan a directory." "" scandir(3)
.xx "" "" "scandir, alphasort: scan a directory." "" scandir(3)
.xx "input format conversion." "" "scanf, fscanf, sscanf, vscanf, vsscanf, vfscanf:" "" scanf(3)
.xx "" "awk: pattern" "scanning and processing language." "" awk(1)
.xx "" "" "sccs: front end for the SCCS subsystem." "" sccs(1)
.xx "" "sccs: front end for the" "SCCS subsystem." "" sccs(1)
.xx "" "at:" "schedule execution of commands `at' a given time." "" at(1)
.xx "" "crontab: chronological services" "schedule file." "" crontab(5)
.xx "" "ualarm:" "schedule signal after specified time." "" ualarm(3)
.xx "" "getpriority, setpriority: get/set program" "scheduling priority." "" getpriority(2)
.xx "" "nice: execute a command at a low" "scheduling priority." "" nice(1)
.xx "" "nice: set program" "scheduling priority." "" nice(3)
.xx "" "curses:" "screen functions with ``optimal'' cursor motion." "" curses(3)
.xx "ex." "\&vi, view:" "screen oriented (visual) display editor based on" "" vi(1)
.xx "" "echo: produce message in a shell" "script." "" echo(1)
.xx "" "rc: command" "script for auto\-reboot and daemons." "" rc(8)
.xx "" "" "script: make typescript of terminal session." "" script(1)
.xx "" "onintr: process interrupts in command" "scripts." "" csh(1)
.xx "" "scsiformat: format" "SCSI disks and show SCSI parameters." "" scsiformat(8)
.xx "" "scsiformat: format SCSI disks and show" "SCSI parameters." "" scsiformat(8)
.xx "" "\&st: CCS" "SCSI tape driver." "" st(4)
.xx "parameters." "" "scsiformat: format SCSI disks and show SCSI" "" scsiformat(8)
.xx "" "/move, msqrt, msub, mult, omin, omout, pow, rpow," "sdiv,: multiple precision integer arithmetic." "" mp(3)
.xx "" "lkbib:" "search bibliographic databases." "" lkbib(1)
.xx "" "@g@lookbib:" "search bibliographic databases." "" lookbib(1)
.xx "" "boggle: word" "search game." "" boggle(6)
.xx "" "bsearch: binary" "search of a sorted table." "" bsearch(3)
.xx "" "grep: file pattern" "searcher." "" grep(1)
.xx "" "lsearch, lfind,: linear" "searching routines." "" lsearch(3)
.xx "" "j1, jn, y0, y1, yn: bessel functions of first and" "second kind." "j0," j0(3)
.xx "" "sleep: suspend process execution for interval of" "seconds." "" sleep(3)
.xx "" "keylogin: decrypt and store" "secret key." "" keylogin(1)
.xx "" "bad144: read/write dec standard 144 bad" "sector information." "" bad144(8)
.xx "" "badsect: create files to contain bad" "sectors." "" badsect(8)
.xx "" "" "sed: stream editor." "" sed(1)
.xx "operations." "opendir, readdir, telldir," "seekdir, rewinddir, closedir, dirfd: directory" "" directory(3)
.xx "" "brk, sbrk: change data" "segment size." "" brk(2)
.xx "" "size: display object file" "segment sizes (text, data and bss)." "" size(1)
.xx "" "end, etext, edata: end boundaries of image" "segments." "" end(3)
.xx "" "comm:" "select or reject lines common to two files." "" comm(1)
.xx "" "cut:" "select portions of each line of a file." "" cut(1)
.xx "" "" "select: synchronous I/O multiplexing." "" select(2)
.xx "" "case:" "selector in switch." "" csh(1)
.xx "" "uusend:" "send a file to a remote host." "" uusend(1)
.xx "" "send, sendto, sendmsg:" "send a message from a socket." "" send(2)
.xx "" "write:" "send a message to another user." "" write(1)
.xx "" "raise:" "send a signal to the current process." "" raise(3)
.xx "" "mail:" "send and receive mail." "" mail(1)
.xx "" "dig:" "send domain name query packets to name servers." "" dig(1)
.xx "" "ping:" "send ICMP ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "nvi.recover:" "send mail about recoverable files." "" nvi.recover(8)
.xx "" "sendmail:" "send mail over the internet." "" sendmail(8)
.xx "socket." "" "send, sendto, sendmsg: send a message from a" "" send(2)
.xx "" "kill:" "send signal to a process." "" kill(2)
.xx "" "killpg:" "send signal to a process group." "" killpg(2)
.xx "" "" "sendbug: mail a system bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "/krb_net_write, krb_net_read: Kerberos routines for" "sending authentication via network stream sockets." "" krb_sendauth(3)
.xx "" "aliases: aliases file for" "sendmail." "" aliases(5)
.xx "" "makemap: create database maps for" "sendmail." "" makemap(8)
.xx "" "" "sendmail: send mail over the internet." "" sendmail(8)
.xx "" "send, sendto," "sendmsg: send a message from a socket." "" send(2)
.xx "" "send," "sendto, sendmsg: send a message from a socket." "" send(2)
.xx "" "from: print names of those who have" "sent mail." "" from(1)
.xx "" "diction, explain: print wordy" "sentences; thesaurus for diction." "" diction(1)
.xx "" "strsep:" "separate strings." "" strsep(3)
.xx "" "spp: Xerox" "Sequenced Packet Protocol." "" spp(4)
.xx "" "trsp: transliterate" "sequenced packet protocol trace." "" trsp(8)
.xx "" "jot: print" "sequential or random data." "" jot(1)
.xx "" "sliplogin: attach a" "serial line network interface." "" sliplogin(8)
.xx "" "slattach: attach" "serial lines as network interfaces." "" slattach(8)
.xx "" "comsat: biff" "server." "" comsat(8)
.xx "" "fingerd: remote user information" "server." "" fingerd(8)
.xx "" "ftpd: Internet File Transfer Protocol" "server." "" ftpd(8)
.xx "" "rhost: look up host names using domain" "server." "" host(1)
.xx "" "named: Internet domain name" "server." "" named(8)
.xx "" "named.restart: stop and restart the name" "server." "" named.restart(8)
.xx "" "nfsd: remote NFS" "server." "" nfsd(8)
.xx "" "nfsiod: local NFS asynchronous I/O" "server." "" nfsiod(8)
.xx "" "rbootd: HP remote boot" "server." "" rbootd(8)
.xx "" "rexecd: remote execution" "server." "" rexecd(8)
.xx "" "rlogind: remote login" "server." "" rlogind(8)
.xx "" "rshd: remote shell" "server." "" rshd(8)
.xx "" "rwhod: system status" "server." "" rwhod(8)
.xx "" "startslip: dial up and login to a slip" "server." "" startslip(1)
.xx "" "talkd: remote user communication" "server." "" talkd(8)
.xx "" "telnetd: DARPA TELNET protocol" "server." "" telnetd(8)
.xx "" "tftpd: Internet Trivial File Transfer Protocol" "server." "" tftpd(8)
.xx "" "timed: time" "server daemon." "" timed(8)
.xx "" "named.reload: cause the name" "server to synchronize its database." "" named.reload(8)
.xx "" "dig: send domain name query packets to name" "servers." "" dig(1)
.xx "" "nslookup: query Internet name" "servers interactively." "" nslookup(1)
.xx "" "nfssvc: NFS" "services." "" nfssvc(2)
.xx "" "crontab: chronological" "services schedule file." "" crontab(5)
.xx "" "" "services: service name data base." "" services(5)
.xx "" "logout: end" "session." "" csh(1)
.xx "" "script: make typescript of terminal" "session." "" script(1)
.xx "" "setsid: create" "session and set process group ID." "" setsid(2)
.xx "" "stty, gtty:" "set and get terminal state (defunct)." "" stty(3)
.xx "" "printenv, env: print out the environment," "set and print environment." "" printenv(1)
.xx "" "sigaltstack:" "set and/or get signal stack context." "" sigaltstack(2)
.xx "" "sigstack:" "set and/or get signal stack context." "" sigstack(2)
.xx "" "" "set: change value of shell variable." "" csh(1)
.xx "" "sigsetmask:" "set current signal mask." "" sigsetmask(2)
.xx "" "date: display or" "set date and time." "" date(1)
.xx "" "utimes:" "set file access and modification times." "" utimes(2)
.xx "" "umask:" "set file creation mode mask." "" umask(2)
.xx "" "chflags, fchflags:" "set file flags." "" chflags(2)
.xx "" "utime:" "set file times." "" utime(3)
.xx "" "tcsetpgrp:" "set foreground process group ID." "" tcsetpgrp(3)
.xx "" "setgroups:" "set group access list." "" setgroups(2)
.xx "" "ffs: find first bit" "set in a bit string." "" ffs(3)
.xx "" "krb_set_tkt_string:" "set Kerberos ticket cache file name." "" krb_set_tkt_string(3)
.xx "" "sysctl: get or" "set kernel state." "" sysctl(8)
.xx "" "apply: apply a command to a" "set of arguments." "" apply(1)
.xx "" "getsockopt, setsockopt: get and" "set options on sockets." "" getsockopt(2)
.xx "" "hostname:" "set or print name of current host system." "" hostname(1)
.xx "" "setpgid, setpgrp:" "set process group." "" setpgid(2)
.xx "" "setsid: create session and" "set process group ID." "" setsid(2)
.xx "" "nice:" "set program scheduling priority." "" nice(3)
.xx "" "setregid:" "set real and effective group ID." "" setregid(2)
.xx "" "setreuid:" "set real and effective user ID's." "" setreuid(2)
.xx "" "alarm:" "set signal timer alarm." "" alarm(3)
.xx "" "sysctl: get or" "set system information." "" sysctl(3)
.xx "" "getty:" "set terminal mode." "" getty(8)
.xx "" "stty:" "set the options for a terminal device interface." "" stty(1)
.xx "" "UTF2: Universal character" "set Transformation Format encoding of runes." "" utf2(4)
.xx "" "setruid, setrgid:" "set user and group ID." "" setruid(3)
.xx "" "setuid, seteuid, setgid, setegid,:" "set user and group ID." "" setuid(2)
.xx "" "setenv:" "set variable in environment." "" csh(1)
.xx "buffering operations." "" "setbuf, setbuffer, setlinebuf, setvbuf: stream" "" setbuf(3)
.xx "operations." "setbuf," "setbuffer, setlinebuf, setvbuf: stream buffering" "" setbuf(3)
.xx "" "setuid, seteuid, setgid," "setegid,: set user and group ID." "" setuid(2)
.xx "" "" "setenv: set variable in environment." "" csh(1)
.xx "" "getenv, putenv," "setenv, unsetenv: environment variable functions." "" getenv(3)
.xx "" "setuid," "seteuid, setgid, setegid,: set user and group ID." "" setuid(2)
.xx "entry." "getfsent, getfsspec, getfsfile," "setfsent, endfsent: get file system descriptor file" "" getfsent(3)
.xx "" "setuid, seteuid," "setgid, setegid,: set user and group ID." "" setuid(2)
.xx "" "/getgrnam, getgrgid, setgroupent, .Nm setgrfile," "setgrent, endgrent: group database operations." "" getgrent(3)
.xx "" "getgrent, getgrnam, getgrgid, setgroupent, .Nm" "setgrfile, setgrent, endgrent: group database/" "" getgrent(3)
.xx "group database/" "getgrent, getgrnam, getgrgid," "setgroupent, .Nm setgrfile, setgrent, endgrent:" "" getgrent(3)
.xx "" "" "setgroups: set group access list." "" setgroups(2)
.xx "entry." "gethostbyname, gethostbyaddr, gethostent," "sethostent, endhostent, herror: get network host" "" gethostbyname(3)
.xx "host." "gethostid," "sethostid: get/set unique identifier of current" "" gethostid(3)
.xx "" "gethostname," "sethostname: get/set name of current host." "" gethostname(3)
.xx "for C." "setrunelocale," "setinvalidrune, sgetrune, sputrune: rune support" "" rune(3)
.xx "" "getitimer," "setitimer: get/set value of interval timer." "" getitimer(2)
.xx "" "sigsetjmp, siglongjmp, setjmp, longjmp," "_setjmp, _longjmp longjmperror: non-local jumps." "" setjmp(3)
.xx "non-local jumps." "sigsetjmp, siglongjmp," "setjmp, longjmp, _setjmp, _longjmp longjmperror:" "" setjmp(3)
.xx "encryption." "crypt," "setkey, encrypt, des_setkey, des_cipher: DES" "" crypt(3)
.xx "" "setbuf, setbuffer," "setlinebuf, setvbuf: stream buffering operations." "" setbuf(3)
.xx "for C." "" "setlocale, localeconv: natural language formatting" "" setlocale(3)
.xx "" "getlogin," "setlogin: get/set login name." "" getlogin(2)
.xx "" "syslog, vsyslog, openlog, closelog," "setlogmask: control system log." "" syslog(3)
.xx "" "getmode," "setmode: modify mode bits." "" setmode(3)
.xx "" "getnetent, getnetbyaddr, getnetbyname," "setnetent, endnetent: get network entry." "" getnetent(3)
.xx "operations." "getnetgrent, innetgr," "setnetgrent, endnetgrent: netgroup database" "" getnetgrent(3)
.xx "operations." "getpwent, getpwnam, getpwuid," "setpassent, setpwent, endpwent: password database" "" getpwent(3)
.xx "" "" "setpgid, setpgrp: set process group." "" setpgid(2)
.xx "" "setpgid," "setpgrp: set process group." "" setpgid(2)
.xx "" "getpriority," "setpriority: get/set program scheduling priority." "" getpriority(2)
.xx "" "getprotoent, getprotobynumber, getprotobyname," "setprotoent, endprotoent: get protocol entry." "" getprotoent(3)
.xx "" "getpwent, getpwnam, getpwuid, setpassent," "setpwent, endpwent: password database operations." "" getpwent(3)
.xx "" "" "setregid: set real and effective group ID." "" setregid(2)
.xx "" "" "setreuid: set real and effective user ID's." "" setreuid(2)
.xx "" "setruid," "setrgid: set user and group ID." "" setruid(3)
.xx "consumption." "getrlimit," "setrlimit: control maximum system resource" "" getrlimit(2)
.xx "" "" "setruid, setrgid: set user and group ID." "" setruid(3)
.xx "rune support for C." "" "setrunelocale, setinvalidrune, sgetrune, sputrune:" "" rune(3)
.xx "" "octal, hexadecimal and decimal ASCII character" "sets." "ascii:" ascii(7)
.xx "" "sigdelset, sigismember: manipulate signal" "sets." "sigemptyset, sigfillset, sigaddset," sigsetops(3)
.xx "" "getservent, getservbyport, getservbyname," "setservent, endservent: get service entry." "" getservent(3)
.xx "" "" "setsid: create session and set process group ID." "" setsid(2)
.xx "" "getsockopt," "setsockopt: get and set options on sockets." "" getsockopt(2)
.xx "for changing/" "random, srandom, initstate," "setstate: better random number generator; routines" "" random(3)
.xx "" "gettimeofday," "settimeofday: get/set date and time." "" gettimeofday(2)
.xx "" "getttyent, getttynam," "setttyent, endttyent: get ttys file entry." "" getttyent(3)
.xx "group ID." "" "setuid, seteuid, setgid, setegid,: set user and" "" setuid(2)
.xx "" "getusershell," "setusershell, endusershell: get legal user shells." "" getusershell(3)
.xx "" "setbuf, setbuffer, setlinebuf," "setvbuf: stream buffering operations." "" setbuf(3)
.xx "" "setrunelocale, setinvalidrune," "sgetrune, sputrune: rune support for C." "" rune(3)
.xx "" "" "sh: command interpreter (shell)." "" sh(1)
.xx "" "" "shar: create a shell archive of files." "" shar(1)
.xx "" "mpool:" "shared memory buffer pool." "" mpool(3)
.xx "" "xstr: extract strings from C programs to implement" "shared strings." "" xstr(1)
.xx "" "exit: leave" "shell." "" csh(1)
.xx "" "rsh: remote" "shell." "" rsh(1)
.xx "" "sh: command interpreter" "(shell)." "" sh(1)
.xx "" "system: pass a command to the" "shell." "" system(3)
.xx "" "shar: create a" "shell archive of files." "" shar(1)
.xx "" "csh: a" "shell (command interpreter) with C-like syntax." "" csh(1)
.xx "" "eval: re-evaluate" "shell data." "" csh(1)
.xx "" "shells:" "shell database." "" shells(5)
.xx "" "popd: pop" "shell directory stack." "" csh(1)
.xx "" "pushd: push" "shell directory stack." "" csh(1)
.xx "" "alias:" "shell macros." "" csh(1)
.xx "" "suspend: suspend a" "shell, resuming its superior." "" csh(1)
.xx "" "echo: produce message in a" "shell script." "" echo(1)
.xx "" "rshd: remote" "shell server." "" rshd(8)
.xx "" "set: change value of" "shell variable." "" csh(1)
.xx "" "@: arithmetic on" "shell variables." "" csh(1)
.xx "" "unset: discard" "shell variables." "" csh(1)
.xx "" "exec: overlay" "shell with specified command." "" csh(1)
.xx "" "setusershell, endusershell: get legal user" "shells." "getusershell," getusershell(3)
.xx "" "" "shells: shell database." "" shells(5)
.xx "" "" "shift: manipulate argument list." "" csh(1)
.xx "" "sail: multi-user wooden" "ships and iron men." "" sail(6)
.xx "" "groups:" "show group memberships." "" groups(1)
.xx "" "ruptime:" "show host status of local machines." "" ruptime(1)
.xx "" "uptime:" "show how long system has been running." "" uptime(1)
.xx "" "lastcomm:" "show last commands executed in reverse order." "" lastcomm(1)
.xx "" "netstat:" "show network status." "" netstat(1)
.xx "" "showmount:" "show remote nfs mounts on host." "" showmount(8)
.xx "" "scsiformat: format SCSI disks and" "show SCSI parameters." "" scsiformat(8)
.xx "" "uusnap:" "show snapshot of the UUCP system." "" uusnap(8)
.xx "construct a file." "what:" "show what versions of object modules were used to" "" what(1)
.xx "" "" "showmount: show remote nfs mounts on host." "" showmount(8)
.xx "" "shutdown:" "shut down part of a full-duplex connection." "" shutdown(2)
.xx "" "" "shutdown: close down the system at a given time." "" shutdown(8)
.xx "connection." "" "shutdown: shut down part of a full-duplex" "" shutdown(2)
.xx "" "" "sigaction: software signal facilities." "" sigaction(2)
.xx "signal sets." "sigemptyset, sigfillset," "sigaddset, sigdelset, sigismember: manipulate" "" sigsetops(3)
.xx "" "" "sigaltstack: set and/or get signal stack context." "" sigaltstack(2)
.xx "" "" "sigblock: block signals." "" sigblock(2)
.xx "" "sigemptyset, sigfillset, sigaddset," "sigdelset, sigismember: manipulate signal sets." "" sigsetops(3)
.xx "sigismember: manipulate signal sets." "" "sigemptyset, sigfillset, sigaddset, sigdelset," "" sigsetops(3)
.xx "manipulate signal sets." "sigemptyset," "sigfillset, sigaddset, sigdelset, sigismember:" "" sigsetops(3)
.xx "calls." "" "siginterrupt: allow signals to interrupt system" "" siginterrupt(3)
.xx "" "sigemptyset, sigfillset, sigaddset, sigdelset," "sigismember: manipulate signal sets." "" sigsetops(3)
.xx "longjmperror: non-local jumps." "sigsetjmp," "siglongjmp, setjmp, longjmp, _setjmp, _longjmp" "" setjmp(3)
.xx "" "pause: stop until" "signal." "" pause(3)
.xx "" "sigreturn: return from" "signal." "" sigreturn(2)
.xx "" "kill: terminate or" "signal a process." "" kill(1)
.xx "" "ualarm: schedule" "signal after specified time." "" ualarm(3)
.xx "" "sigaction: software" "signal facilities." "" sigaction(2)
.xx "" "signal: simplified software" "signal facilities." "" signal(3)
.xx "" "sigvec: software" "signal facilities." "" sigvec(2)
.xx "" "sigprocmask: manipulate current" "signal mask." "" sigprocmask(2)
.xx "" "sigsetmask: set current" "signal mask." "" sigsetmask(2)
.xx "" "psignal, sys_siglist sys_signame: system" "signal messages." "" psignal(3)
.xx "" "sigaddset, sigdelset, sigismember: manipulate" "signal sets." "sigemptyset, sigfillset," sigsetops(3)
.xx "" "" "signal: simplified software signal facilities." "" signal(3)
.xx "" "sigaltstack: set and/or get" "signal stack context." "" sigaltstack(2)
.xx "" "sigstack: set and/or get" "signal stack context." "" sigstack(2)
.xx "" "alarm: set" "signal timer alarm." "" alarm(3)
.xx "" "kill: send" "signal to a process." "" kill(2)
.xx "" "killpg: send" "signal to a process group." "" killpg(2)
.xx "" "raise: send a" "signal to the current process." "" raise(3)
.xx "" "sigblock: block" "signals." "" sigblock(2)
.xx "" "sigpending: get pending" "signals." "" sigpending(2)
.xx "" "sigpause: atomically release blocked" "signals and wait for interrupt." "" sigpause(2)
.xx "" "sigsuspend: atomically release blocked" "signals and wait for interrupt." "" sigsuspend(2)
.xx "(temporary)." "infnan:" "signals invalid floating\-point operations on a VAX" "" infnan(3)
.xx "" "siginterrupt: allow" "signals to interrupt system calls." "" siginterrupt(3)
.xx "floating-point number." "modf: extract" "signed integral and fractional values from" "" modf(3)
.xx "wait for interrupt." "" "sigpause: atomically release blocked signals and" "" sigpause(2)
.xx "" "" "sigpending: get pending signals." "" sigpending(2)
.xx "" "" "sigprocmask: manipulate current signal mask." "" sigprocmask(2)
.xx "" "" "sigreturn: return from signal." "" sigreturn(2)
.xx "_longjmp longjmperror: non-local jumps." "" "sigsetjmp, siglongjmp, setjmp, longjmp, _setjmp," "" setjmp(3)
.xx "" "" "sigsetmask: set current signal mask." "" sigsetmask(2)
.xx "" "" "sigstack: set and/or get signal stack context." "" sigstack(2)
.xx "wait for interrupt." "" "sigsuspend: atomically release blocked signals and" "" sigsuspend(2)
.xx "" "" "sigvec: software signal facilities." "" sigvec(2)
.xx "" "signal:" "simplified software signal facilities." "" signal(3)
.xx "" "" "sin: sine function." "" sin(3)
.xx "" "asin: arc" "sine function." "" asin(3)
.xx "" "asinh: inverse hyperbolic" "sine function." "" asinh(3)
.xx "" "sin:" "sine function." "" sin(3)
.xx "" "sinh: hyperbolic" "sine function." "" sinh(3)
.xx "" "" "sinh: hyperbolic sine function." "" sinh(3)
.xx "" "uupoll: poll a remote UUCP" "site." "" uupoll(8)
.xx "" "fsinfo: co-ordinate" "site-wide filesystem information." "" fsinfo(8)
.xx "" "brk, sbrk: change data segment" "size." "" brk(2)
.xx "" "getbsize: get user block" "size." "" getbsize(3)
.xx "" "getdtablesize: get descriptor table" "size." "" getdtablesize(2)
.xx "" "getpagesize: get system page" "size." "" getpagesize(3)
.xx "" "pagesize: print system page" "size." "" pagesize(1)
.xx "and bss)." "" "size: display object file segment sizes (text, data" "" size(1)
.xx "" "diskpart: calculate default disk partition" "sizes." "" diskpart(8)
.xx "" "size: display object file segment" "sizes (text, data and bss)." "" size(1)
.xx "interfaces." "" "slattach: attach serial lines as network" "" slattach(8)
.xx "" "" "sleep: suspend execution for an interval of time." "" sleep(1)
.xx "seconds." "" "sleep: suspend process execution for interval of" "" sleep(3)
.xx "" "startslip: dial up and login to a" "slip server." "" startslip(1)
.xx "" "" "sliplogin: attach a serial line network interface." "" sliplogin(8)
.xx "" "ceil:" "smallest integral value not greater than x." "" ceil(3)
.xx "" "spline: interpolate" "smooth curve." "" spline(1)
.xx "" "" "snake, snscore: display chase game." "" snake(6)
.xx "" "uusnap: show" "snapshot of the UUCP system." "" uusnap(8)
.xx "formatted output/" "printf, fprintf, sprintf," "snprintf, vprintf, vfprintf, vsprintf, vsnprintf:" "" printf(3)
.xx "" "snake," "snscore: display chase game." "" snake(6)
.xx "" "accept: accept a connection on a" "socket." "" accept(2)
.xx "" "bind: bind a name to a" "socket." "" bind(2)
.xx "" "connect: initiate a connection on a" "socket." "" connect(2)
.xx "" "listen: listen for connections on a" "socket." "" listen(2)
.xx "" "recv, recvfrom, recvmsg: receive a message from a" "socket." "" recv(2)
.xx "" "send, sendto, sendmsg: send a message from a" "socket." "" send(2)
.xx "" "" "socket: create an endpoint for communication." "" socket(2)
.xx "" "getsockname: get" "socket name." "" getsockname(2)
.xx "" "" "socketpair: create a pair of connected sockets." "" socketpair(2)
.xx "" "getsockopt, setsockopt: get and set options on" "sockets." "" getsockopt(2)
.xx "" "for sending authentication via network stream" "sockets." "/krb_net_read: Kerberos routines" krb_sendauth(3)
.xx "" "socketpair: create a pair of connected" "sockets." "" socketpair(2)
.xx "" "" "soelim: eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "lo:" "software loopback network interface." "" lo(4)
.xx "in IP packets." "nsip:" "software network interface encapsulating NS packets" "" nsip(4)
.xx "" "sigaction:" "software signal facilities." "" sigaction(2)
.xx "" "signal: simplified" "software signal facilities." "" signal(3)
.xx "" "sigvec:" "software signal facilities." "" sigvec(2)
.xx "" "canfield, cfscores: the" "solitaire card game canfield." "" canfield(6)
.xx "" "radixsort: radix" "sort." "" radixsort(3)
.xx "" "qsort, heapsort, mergesort:" "sort functions." "" qsort(3)
.xx "" "tsort: topological" "sort of a directed graph." "" tsort(1)
.xx "" "sort:" "sort or merge text files." "" sort(1)
.xx "" "" "sort: sort or merge text files." "" sort(1)
.xx "" "bsearch: binary search of a" "sorted table." "" bsearch(3)
.xx "" "soelim: eliminate" "\&.so's from nroff input." "" soelim(1)
.xx "" "soelim: eliminate \&." "so's from nroff input." "" soelim(1)
.xx "" "indent: indent and format C program" "source." "" indent(1)
.xx "" "mkstr: create an error message file by massaging C" "source." "" mkstr(1)
.xx "" "" "source: read commands from file." "" csh(1)
.xx "" "rcsfreeze: freeze a configuration of" "sources checked in under RCS." "" rcsfreeze(1)
.xx "" "calloc: allocate clean memory (zero initialized" "space)." "" calloc(3)
.xx "" "df: display free disk" "space." "" df(1)
.xx "" "isgraph: printing character test" "(space character exculsive)." "" isgraph(3)
.xx "" "isprint: printing character test" "(space character inclusive)." "" isprint(3)
.xx "" "line, circle, arc, move, cont, point, linemod," "space, closepl: graphics interface." "/erase, label," plot(3)
.xx "" "isblank:" "space or tab character test." "" isblank(3)
.xx "" "expand, unexpand: expand tabs to" "spaces, and vice versa." "" expand(1)
.xx "" "strspn:" "span a string." "" strspn(3)
.xx "" "strcspn:" "span the complement of a string." "" strcspn(3)
.xx "way." "vfork:" "spawn new process in a virtual memory efficient" "" vfork(2)
.xx "" "strcspn, strstr, strtok, index, rindex: string" "specifi" "/strerror, strlen, strpbrk, strsep, strspn," string(3)
.xx "" "link_addr, link_ntoa: elementary address" "specification routines for link level access." "" link_addr(3)
.xx "" "link_addr, link_ntoa: elementary address" "specification routines for link level access." "" linkaddr(3)
.xx "" "exec: overlay shell with" "specified command." "" csh(1)
.xx "" "truncate, ftruncate: truncate a file to a" "specified length." "" truncate(2)
.xx "" "ualarm: schedule signal after" "specified time." "" ualarm(3)
.xx "" "swapon:" "specify additional device for paging and swapping." "" swapon(8)
.xx "" "" "spell, spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell," "spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell, spellin, spellout: find" "spelling errors." "" spell(1)
.xx "" "spell, spellin," "spellout: find spelling errors." "" spell(1)
.xx "" "" "spline: interpolate smooth curve." "" spline(1)
.xx "" "split:" "split a file into pieces." "" split(1)
.xx "files." "fsplit:" "split a multi-routine Fortran file into individual" "" fsplit(1)
.xx "" "" "split: split a file into pieces." "" split(1)
.xx "" "uuclean: uucp" "spool directory clean-up." "" uuclean(8)
.xx "" "lpq:" "spool queue examination program." "" lpq(1)
.xx "" "atrm: remove jobs" "spooled by at(1)." "" atrm(1)
.xx "" "lpd: line printer" "spooler daemon." "" lpd(8)
.xx "" "lprm: remove jobs from the line printer" "spooling queue." "" lprm(1)
.xx "" "" "spp: Xerox Sequenced Packet Protocol." "" spp(4)
.xx "vsnprintf: formatted output/" "printf, fprintf," "sprintf, snprintf, vprintf, vfprintf, vsprintf," "" printf(3)
.xx "" "setrunelocale, setinvalidrune, sgetrune," "sputrune: rune support for C." "" rune(3)
.xx "" "cbrt," "sqrt: cube root and square root functions." "" sqrt(3)
.xx "" "cbrt, sqrt: cube root and" "square root functions." "" sqrt(3)
.xx "" "rand," "srand: bad random number generator." "" rand(3)
.xx "generator; routines for changing/" "random," "srandom, initstate, setstate: better random number" "" random(3)
.xx "conversion." "scanf, fscanf," "sscanf, vscanf, vsscanf, vfscanf: input format" "" scanf(3)
.xx "" "" "\&st: CCS SCSI tape driver." "" st(4)
.xx "" "" "stab: symbol table types." "" stab(5)
.xx "" "popd: pop shell directory" "stack." "" csh(1)
.xx "" "pushd: push shell directory" "stack." "" csh(1)
.xx "" "sigaltstack: set and/or get signal" "stack context." "" sigaltstack(2)
.xx "" "sigstack: set and/or get signal" "stack context." "" sigstack(2)
.xx "" "bdes: encrypt/decrypt using the Data Encryption" "Standard." "" bdes(1)
.xx "" "bad144: read/write dec" "standard 144 bad sector information." "" bad144(8)
.xx "" "stdio:" "standard input/output library functions." "" stdio(3)
.xx "" "ansitape: ANSI" "standard tape handler." "" ansitape(1)
.xx "" "" "startslip: dial up and login to a slip server." "" startslip(1)
.xx "master key." "kstash:" "stash Kerberos key distribution center database" "" kstash(8)
.xx "" "" "stat, lstat, fstat: get file status." "" stat(2)
.xx "" "kvm_getargv, kvm_getenvv: access user process" "state." "kvm_getprocs," kvm_getprocs(3)
.xx "" "sysctl: get or set kernel" "state." "" sysctl(8)
.xx "" "stty, gtty: set and get terminal" "state (defunct)." "" stty(3)
.xx "" "fsync: synchronize a file's in-core" "state with that on disk." "" fsync(2)
.xx "" "if: conditional" "statement." "" csh(1)
.xx "" "" "statfs: get file system statistics." "" statfs(2)
.xx "" "fstab:" "static information about the filesystems." "" fstab(5)
.xx "" "hashstat: print command hashing" "statistics." "" csh(1)
.xx "" "du: display disk usage" "statistics." "" du(1)
.xx "" "iostat: report I/O" "statistics." "" iostat(8)
.xx "" "nfsstat: display NFS" "statistics." "" nfsstat(1)
.xx "" "statfs: get file system" "statistics." "" statfs(2)
.xx "" "vmstat: report virtual memory" "statistics." "" vmstat(8)
.xx "" "systat: display system" "statistics on a crt." "" systat(1)
.xx "" "feof, ferror, fileno: check and reset stream" "status." "clearerr," ferror(3)
.xx "" "fstat: file" "status." "" fstat(1)
.xx "" "netstat: show network" "status." "" netstat(1)
.xx "" "\&ps: process" "status." "" ps(1)
.xx "" "stat, lstat, fstat: get file" "status." "" stat(2)
.xx "" "rstat: remote" "status display." "" rstat(1)
.xx "" "strmode: convert inode" "status information into a symbolic string." "" strmode(3)
.xx "" "ruptime: show host" "status of local machines." "" ruptime(1)
.xx "" "rwhod: system" "status server." "" rwhod(8)
.xx "" "sync: synchronize disk block in-core" "status with that on disk." "" sync(2)
.xx "" "" "stdarg: variable argument lists." "" stdarg(3)
.xx "" "fd, stdin, stdout," "stderr: file descriptor files." "" fd(4)
.xx "" "fd," "stdin, stdout, stderr: file descriptor files." "" fd(4)
.xx "" "" "stdio: standard input/output library functions." "" stdio(3)
.xx "" "fd, stdin," "stdout, stderr: file descriptor files." "" fd(4)
.xx "" "" "sticky: sticky text and append-only directories." "" sticky(8)
.xx "" "sticky:" "sticky text and append-only directories." "" sticky(8)
.xx "" "named.restart:" "stop and restart the name server." "" named.restart(8)
.xx "" "" "stop: halt a job or process." "" csh(1)
.xx "" "pause:" "stop until signal." "" pause(3)
.xx "" "reboot, halt:" "stopping and restarting the system." "" reboot(8)
.xx "" "icheck: file system" "storage consistency check." "" icheck(8)
.xx "service key." "ksrvtgt: fetch and" "store Kerberos ticket-granting-ticket using a" "" ksrvtgt(1)
.xx "" "mail.local:" "store mail in a mailbox." "" mail.local(8)
.xx "" "keylogin: decrypt and" "store secret key." "" keylogin(1)
.xx "" "strfile, unstr: create a random access file for" "storing strings." "" strfile(8)
.xx "" "" "strcasecmp: compare strings, ignoring case." "" strcasecmp(3)
.xx "" "strcat, strncat, strchr, strrchr, strcmp, strncmp," "strcasecmp, strncasecmp, strcpy, strncpy, strerror,/" "" string(3)
.xx "" "" "strcat: concatenate strings." "" strcat(3)
.xx "strcasecmp, strncasecmp, strcpy, strncpy,/" "" "strcat, strncat, strchr, strrchr, strcmp, strncmp," "" string(3)
.xx "" "" "strchr: locate character in string." "" strchr(3)
.xx "strncasecmp, strcpy, strncpy,/" "strcat, strncat," "strchr, strrchr, strcmp, strncmp, strcasecmp," "" string(3)
.xx "" "" "strcmp: compare strings." "" strcmp(3)
.xx "strncpy,/" "strcat, strncat, strchr, strrchr," "strcmp, strncmp, strcasecmp, strncasecmp, strcpy," "" string(3)
.xx "collation." "" "strcoll: compare strings according to current" "" strcoll(3)
.xx "" "" "strcpy: copy strings." "" strcpy(3)
.xx "" "/strrchr, strcmp, strncmp, strcasecmp, strncasecmp," "strcpy, strncpy, strerror, strlen, strpbrk, strsep,/" "" string(3)
.xx "" "" "strcspn: span the complement of a string." "" strcspn(3)
.xx "" "/strncpy, strerror, strlen, strpbrk, strsep, strspn," "strcspn, strstr, strtok, index, rindex: string/" "" string(3)
.xx "" "" "strdup: save a copy of a string." "" strdup(3)
.xx "" "fclose: close a" "stream." "" fclose(3)
.xx "" "fflush, fpurge: flush a" "stream." "" fflush(3)
.xx "" "fgetline: get a line from a" "stream." "" fgetline(3)
.xx "" "fgets, gets: get a line from a" "stream." "" fgets(3)
.xx "" "fputs, puts: output a line to a" "stream." "" fputs(3)
.xx "" "fseek, fsetpos, ftell, rewind: reposition a" "stream." "fgetpos," fseek(3)
.xx "" "funopen, fropen, fwopen: open a" "stream." "" funopen(3)
.xx "" "getw: get next character or word from input" "stream." "fgetc, getc, getchar," getc(3)
.xx "" "putchar, putw: output a character or word to a" "stream." "fputc, putc," putc(3)
.xx "" "ungetc: un-get character from input" "stream." "" ungetc(3)
.xx "" "setbuf, setbuffer, setlinebuf, setvbuf:" "stream buffering operations." "" setbuf(3)
.xx "" "sed:" "stream editor." "" sed(1)
.xx "" "fread, fwrite: binary" "stream input/output." "" fread(3)
.xx "" "zopen: compressed" "stream open function." "" zopen(3)
.xx "" "fopen, fdopen, freopen:" "stream open functions." "" fopen(3)
.xx "" "routines for sending authentication via network" "stream sockets." "/krb_net_read: Kerberos" krb_sendauth(3)
.xx "" "clearerr, feof, ferror, fileno: check and reset" "stream status." "" ferror(3)
.xx "" "rcmd, rresvport, ruserok: routines for returning a" "stream to a remote command." "" rcmd(3)
.xx "" "rexec: return" "stream to a remote command." "" rexec(3)
.xx "" "/strncmp, strcasecmp, strncasecmp, strcpy, strncpy," "strerror, strlen, strpbrk, strsep, strspn, strcspn,/" "" string(3)
.xx "messages." "perror," "strerror, sys_errlist, sys_nerr: system error" "" strerror(3)
.xx "storing strings." "" "strfile, unstr: create a random access file for" "" strfile(8)
.xx "" "" "strftime: format date and time." "" strftime(3)
.xx "" "bcmp: compare byte" "string." "" bcmp(3)
.xx "" "bcopy: copy byte" "string." "" bcopy(3)
.xx "" "bzero: write zeroes to a byte" "string." "" bzero(3)
.xx "" "ffs: find first bit set in a bit" "string." "" ffs(3)
.xx "" "index: locate character in" "string." "" index(3)
.xx "" "look: display lines beginning with a given" "string." "" look(1)
.xx "" "memchr: locate byte in byte" "string." "" memchr(3)
.xx "" "memcmp: compare byte" "string." "" memcmp(3)
.xx "" "memcpy: copy byte" "string." "" memcpy(3)
.xx "" "memmove: copy byte" "string." "" memmove(3)
.xx "" "memset: write a byte to byte" "string." "" memset(3)
.xx "" "rindex: locate character in" "string." "" rindex(3)
.xx "" "strchr: locate character in" "string." "" strchr(3)
.xx "" "strcspn: span the complement of a" "string." "" strcspn(3)
.xx "" "strdup: save a copy of a" "string." "" strdup(3)
.xx "" "strlen: find length of" "string." "" strlen(3)
.xx "" "convert inode status information into a symbolic" "string." "strmode:" strmode(3)
.xx "" "strpbrk: locate multiple characters in" "string." "" strpbrk(3)
.xx "" "strrchr: locate character in" "string." "" strrchr(3)
.xx "" "strspn: span a" "string." "" strspn(3)
.xx "" "strstr: locate a substring in a" "string." "" strstr(3)
.xx "" "memchr, memcmp, memcpy, memmove, memset: byte" "string operations." "bcmp, bcopy, bzero, memccpy," bstring(3)
.xx "" "strspn, strcspn, strstr, strtok, index, rindex:" "string specifi" "/strerror, strlen, strpbrk, strsep," string(3)
.xx "" "strtoul, strtouq: convert a" "string to an unsigned long or uquad_t integer." "" strtoul(3)
.xx "" "atof: convert ASCII" "string to double." "" atof(3)
.xx "" "strtod: convert ASCII" "string to double." "" strtod(3)
.xx "" "atoi: convert ASCII" "string to integer." "" atoi(3)
.xx "" "atol: convert ASCII" "string to long integer." "" atol(3)
.xx "" "strtok, strsep:" "string token operations." "" strtok(3)
.xx "" "strxfrm: transform a" "string under locale." "" strxfrm(3)
.xx "" "memccpy: copy" "string until character found." "" memccpy(3)
.xx "" "strtol, strtoq: convert" "string value to a long or quad_t integer." "" strtol(3)
.xx "" "strcat: concatenate" "strings." "" strcat(3)
.xx "" "strcmp: compare" "strings." "" strcmp(3)
.xx "" "strcpy: copy" "strings." "" strcpy(3)
.xx "" "unstr: create a random access file for storing" "strings." "strfile," strfile(8)
.xx "" "strsep: separate" "strings." "" strsep(3)
.xx "" "extract strings from C programs to implement shared" "strings." "xstr:" xstr(1)
.xx "" "strcoll: compare" "strings according to current collation." "" strcoll(3)
.xx "" "" "strings: find printable strings in a file." "" strings(1)
.xx "strings." "xstr: extract" "strings from C programs to implement shared" "" xstr(1)
.xx "" "strcasecmp: compare" "strings, ignoring case." "" strcasecmp(3)
.xx "" "strings: find printable" "strings in a file." "" strings(1)
.xx "" "confstr: get" "string-valued configurable variables." "" confstr(3)
.xx "executable files." "" "strip: remove unnecessary information from" "" strip(1)
.xx "" "" "strlen: find length of string." "" strlen(3)
.xx "" "/strcasecmp, strncasecmp, strcpy, strncpy, strerror," "strlen, strpbrk, strsep, strspn, strcspn, strstr,/" "" string(3)
.xx "symbolic string." "" "strmode: convert inode status information into a" "" strmode(3)
.xx "" "/strchr, strrchr, strcmp, strncmp, strcasecmp," "strncasecmp, strcpy, strncpy, strerror, strlen,/" "" string(3)
.xx "strcasecmp, strncasecmp, strcpy, strncpy,/" "strcat," "strncat, strchr, strrchr, strcmp, strncmp," "" string(3)
.xx "" "strcat, strncat, strchr, strrchr, strcmp," "strncmp, strcasecmp, strncasecmp, strcpy, strncpy,/" "" string(3)
.xx "" "/strcmp, strncmp, strcasecmp, strncasecmp, strcpy," "strncpy, strerror, strlen, strpbrk, strsep, strspn,/" "" string(3)
.xx "" "" "strpbrk: locate multiple characters in string." "" strpbrk(3)
.xx "" "/strncasecmp, strcpy, strncpy, strerror, strlen," "strpbrk, strsep, strspn, strcspn, strstr, strtok,/" "" string(3)
.xx "" "" "strrchr: locate character in string." "" strrchr(3)
.xx "strcpy, strncpy,/" "strcat, strncat, strchr," "strrchr, strcmp, strncmp, strcasecmp, strncasecmp," "" string(3)
.xx "" "" "strsep: separate strings." "" strsep(3)
.xx "" "strtok," "strsep: string token operations." "" strtok(3)
.xx "" "/strcpy, strncpy, strerror, strlen, strpbrk," "strsep, strspn, strcspn, strstr, strtok, index,/" "" string(3)
.xx "" "" "strspn: span a string." "" strspn(3)
.xx "" "/strcpy, strncpy, strerror, strlen, strpbrk, strsep," "strspn, strcspn, strstr, strtok, index, rindex:/" "" string(3)
.xx "" "" "strstr: locate a substring in a string." "" strstr(3)
.xx "" "/strerror, strlen, strpbrk, strsep, strspn, strcspn," "strstr, strtok, index, rindex: string specifi" "" string(3)
.xx "" "" "strtod: convert ASCII string to double." "" strtod(3)
.xx "" "strlen, strpbrk, strsep, strspn, strcspn, strstr," "strtok, index, rindex: string specifi" "/strerror," string(3)
.xx "" "" "strtok, strsep: string token operations." "" strtok(3)
.xx "quad_t integer." "" "strtol, strtoq: convert string value to a long or" "" strtol(3)
.xx "integer." "strtol," "strtoq: convert string value to a long or quad_t" "" strtol(3)
.xx "long or uquad_t integer." "" "strtoul, strtouq: convert a string to an unsigned" "" strtoul(3)
.xx "uquad_t integer." "strtoul," "strtouq: convert a string to an unsigned long or" "" strtoul(3)
.xx "" "" "struct: structure Fortran programs." "" struct(1)
.xx "" "tcgetattr, tcsetattr: manipulating the termios" "structure." "/cfsetospeed, cfsetspeed, cfmakeraw," tcsetattr(3)
.xx "" "struct:" "structure Fortran programs." "" struct(1)
.xx "" "pstat: display system data" "structures." "" pstat(8)
.xx "characters." "unvis," "strunvis: decode a visual representation of" "" unvis(3)
.xx "" "" "strxfrm: transform a string under locale." "" strxfrm(3)
.xx "" "" "stty, gtty: set and get terminal state (defunct)." "" stty(3)
.xx "interface." "" "stty: set the options for a terminal device" "" stty(1)
.xx "document." "" "style: analyze surface characteristics of a" "" style(1)
.xx "" "" "su: substitute user identity." "" su(1)
.xx "" "getsubopt: get" "sub options from an argument." "" getsubopt(3)
.xx "" "paste: merge corresponding or" "subsequent lines of files." "" paste(1)
.xx "" "su:" "substitute user identity." "" su(1)
.xx "" "strstr: locate a" "substring in a string." "" strstr(3)
.xx "" "sccs: front end for the SCCS" "subsystem." "" sccs(1)
.xx "" "mount a virtual copy of an existing filesystem" "sub-tree." "mount_lofs:" mount_lofs(8)
.xx "" "" "sum: calculate file checksums and block counts." "" sum(1)
.xx "" "repquota:" "summarize quotas for a file system." "" repquota(8)
.xx "" "suspend: suspend a shell, resuming its" "superior." "" csh(1)
.xx "" "inetd: internet" "super-server." "" inetd(8)
.xx "" "drem, finite, logb, scalb: IEEE 754 floating point" "support." "copysign," ieee(3)
.xx "" "intro: introduction to special files and hardware" "support." "" intro(4)
.xx "" "mbrune, mbrrune, mbmb: multibyte rune" "support for C." "" mbrune(3)
.xx "" "mbtowc, wcstombs, wctomb: multibyte character" "support for C." "mblen, mbstowcs," multibyte(3)
.xx "" "setinvalidrune, sgetrune, sputrune: rune" "support for C." "setrunelocale," rune(3)
.xx "" "style: analyze" "surface characteristics of a document." "" style(1)
.xx "" "kvm_getfiles:" "survey open files." "" kvm_getfiles(3)
.xx "" "suspend:" "suspend a shell, resuming its superior." "" csh(1)
.xx "" "sleep:" "suspend execution for an interval of time." "" sleep(1)
.xx "" "usleep:" "suspend execution for interval of microseconds." "" usleep(3)
.xx "" "sleep:" "suspend process execution for interval of seconds." "" sleep(3)
.xx "" "" "suspend: suspend a shell, resuming its superior." "" csh(1)
.xx "" "" "swab: swap adjacent bytes." "" swab(3)
.xx "" "swab:" "swap adjacent bytes." "" swab(3)
.xx "" "swapon: add a" "swap device for interleaved paging/swapping." "" swapon(2)
.xx "paging/swapping." "" "swapon: add a swap device for interleaved" "" swapon(2)
.xx "swapping." "" "swapon: specify additional device for paging and" "" swapon(8)
.xx "" "swapon: specify additional device for paging and" "swapping." "" swapon(8)
.xx "" "breaksw: exit from" "switch." "" csh(1)
.xx "" "case: selector in" "switch." "" csh(1)
.xx "" "default: catchall clause in" "switch." "" csh(1)
.xx "" "endsw: terminate" "switch." "" csh(1)
.xx "" "" "switch: multi-way command branch." "" csh(1)
.xx "" "nm: display name list" "(symbol table)." "" nm(1)
.xx "" "nlist: retrieve" "symbol table name list from an executable file." "" nlist(3)
.xx "" "kvm_nlist: retrieve" "symbol table names from a kernel image." "" kvm_nlist(3)
.xx "" "stab:" "symbol table types." "" stab(5)
.xx "" "readlink: read value of a" "symbolic link." "" readlink(2)
.xx "" "symlink:" "symbolic link handling." "" symlink(7)
.xx "" "symlink: make" "symbolic link to a file." "" symlink(2)
.xx "" "strmode: convert inode status information into a" "symbolic string." "" strmode(3)
.xx "" "" "symlink: make symbolic link to a file." "" symlink(2)
.xx "" "" "symlink: symbolic link handling." "" symlink(7)
.xx "" "" "symorder: rearrange name list." "" symorder(1)
.xx "(flush cache)." "" "sync: force completion of pending disk writes" "" sync(8)
.xx "that on disk." "" "sync: synchronize disk block in-core status with" "" sync(2)
.xx "" "adjtime: correct the time to allow" "synchronization of the system clock." "" adjtime(2)
.xx "disk." "fsync:" "synchronize a file's in-core state with that on" "" fsync(2)
.xx "" "msync:" "synchronize a mapped region." "" msync(2)
.xx "disk." "sync:" "synchronize disk block in-core status with that on" "" sync(2)
.xx "" "named.reload: cause the name server to" "synchronize its database." "" named.reload(8)
.xx "" "select:" "synchronous I/O multiplexing." "" select(2)
.xx "" "csh: a shell (command interpreter) with C-like" "syntax." "" csh(1)
.xx "" "L." "sys: UUCP remote host description file." "" L.sys(5)
.xx "" "syscall," "__syscall: indirect system call." "" syscall(2)
.xx "" "" "syscall, __syscall: indirect system call." "" syscall(2)
.xx "" "" "sysconf: get configurable system variables." "" sysconf(3)
.xx "" "" "sysctl: get or set kernel state." "" sysctl(8)
.xx "" "" "sysctl: get or set system information." "" sysctl(3)
.xx "" "perror, strerror," "sys_errlist, sys_nerr: system error messages." "" strerror(3)
.xx "control system log." "" "syslog, vsyslog, openlog, closelog, setlogmask:" "" syslog(3)
.xx "" "" "syslog.conf: syslogd(8) configuration file." "" syslog.conf(5)
.xx "" "" "syslogd: log systems messages." "" syslogd(8)
.xx "" "syslog.conf:" "syslogd(8) configuration file." "" syslog.conf(5)
.xx "" "perror, strerror, sys_errlist," "sys_nerr: system error messages." "" strerror(3)
.xx "" "psignal," "sys_siglist sys_signame: system signal messages." "" psignal(3)
.xx "" "psignal, sys_siglist" "sys_signame: system signal messages." "" psignal(3)
.xx "" "" "systat: display system statistics on a crt." "" systat(1)
.xx "" "amd: automatically mount file" "systems." "" amd(8)
.xx "" "getmntinfo: get information about mounted file" "systems." "" getmntinfo(3)
.xx "" "mount, umount: mount and dismount file" "systems." "" mount(8)
.xx "" "mount_nfs: mount nfs file" "systems." "" mount_nfs(8)
.xx "" "restore: restore files or file" "systems from backups made with dump." "" restore(8)
.xx "" "syslogd: log" "systems messages." "" syslogd(8)
.xx "" "kgmon: generate a dump of the operating" "system's profile buffers." "" kgmon(8)
.xx "" "ns: Xerox Network" "Systems(tm) protocol family." "" ns(4)
.xx "" "isblank: space or" "tab character test." "" isblank(3)
.xx "" "yyfix: extract tables from y." "tab.c." "" yyfix(1)
.xx "" "bsearch: binary search of a sorted" "table." "" bsearch(3)
.xx "" "rehash: recompute command hash" "table." "" csh(1)
.xx "" "unhash: discard command hash" "table." "" csh(1)
.xx "" "nm: display name list (symbol" "table)." "" nm(1)
.xx "" "nlist: retrieve symbol" "table name list from an executable file." "" nlist(3)
.xx "" "kvm_nlist: retrieve symbol" "table names from a kernel image." "" kvm_nlist(3)
.xx "" "getdtablesize: get descriptor" "table size." "" getdtablesize(2)
.xx "" "stab: symbol" "table types." "" stab(5)
.xx "" "ranlib:" "table-of-contents for archive libraries." "" ranlib(1)
.xx "" "ranlib: archive (library)" "table-of-contents format." "" ranlib.5(5)
.xx "" "@g@tbl: format" "tables for troff." "" tbl(1)
.xx "" "yyfix: extract" "tables from y.tab.c." "" yyfix(1)
.xx "" "route: manually manipulate the routing" "tables (Interim)." "" route(8)
.xx "" "expand, unexpand: expand" "tabs to spaces, and vice versa." "" expand(1)
.xx "" "ctags: create a" "tags file." "" ctags(1)
.xx "" "" "tail: display the last part of a file." "" tail(1)
.xx "" "traceroute: print the route packets" "take to network host." "" traceroute(8)
.xx "" "" "talk: talk to another user." "" talk(1)
.xx "" "talk:" "talk to another user." "" talk(1)
.xx "" "" "talkd: remote user communication server." "" talkd(8)
.xx "" "" "tan: tangent function." "" tan(3)
.xx "" "atanh: inverse hyperbolic" "tangent function." "" atanh(3)
.xx "" "tan:" "tangent function." "" tan(3)
.xx "" "tanh: hyperbolic" "tangent function." "" tanh(3)
.xx "" "atan: arc" "tangent function of one variable." "" atan(3)
.xx "" "atan2: arc" "tangent function of two variables." "" atan2(3)
.xx "" "" "tanh: hyperbolic tangent function." "" tanh(3)
.xx "" "tar:" "tape archive file format." "" tarformat(5)
.xx "" "tar:" "tape archiver." "" tar(1)
.xx "" "\&st: CCS SCSI" "tape driver." "" st(4)
.xx "" "ansitape: ANSI standard" "tape handler." "" ansitape(1)
.xx "" "\&ct: CS/80 cartridge" "tape interface." "" ct(4)
.xx "" "mt: magnetic" "tape manipulating program." "" mt(1)
.xx "" "ppt, morse: reformat input as punch cards, paper" "tape or morse code." "bcd," bcd(6)
.xx "" "format: how to format disks and" "tapes." "" format(8)
.xx "" "tcopy: copy and/or verify mag" "tapes." "" tcopy(1)
.xx "" "" "tar: tape archive file format." "" tarformat(5)
.xx "" "" "tar: tape archiver." "" tar(1)
.xx "" "deroff: remove nroff, troff," "tbl and eqn constructs." "" deroff(1)
.xx "device interface." "" "\&tc: HP98544 98550 ``Topcat'' and ``Catseye''" "" tc(4)
.xx "" "tcsendbreak," "tcdrain, tcflush, tcflow: line control functions." "" tcsendbreak(3)
.xx "" "tcsendbreak, tcdrain, tcflush," "tcflow: line control functions." "" tcsendbreak(3)
.xx "" "tcsendbreak, tcdrain," "tcflush, tcflow: line control functions." "" tcsendbreak(3)
.xx "" "/cfgetospeed, cfsetospeed, cfsetspeed, cfmakeraw," "tcgetattr, tcsetattr: manipulating the termios/" "" tcsetattr(3)
.xx "" "" "tcgetpgrp: get foreground process group ID." "" tcgetpgrp(3)
.xx "" "" "tcopy: copy and/or verify mag tapes." "" tcopy(1)
.xx "" "" "tcp: Internet Transmission Control Protocol." "" tcp(4)
.xx "functions." "" "tcsendbreak, tcdrain, tcflush, tcflow: line control" "" tcsendbreak(3)
.xx "" "/cfsetospeed, cfsetspeed, cfmakeraw, tcgetattr," "tcsetattr: manipulating the termios structure." "" tcsetattr(3)
.xx "" "" "tcsetpgrp: set foreground process group ID." "" tcsetpgrp(3)
.xx "" "tfmtodit: create font files for use with groff" "\-Tdvi." "" tfmtodit(1)
.xx "" "" "tee: pipe fitting." "" tee(1)
.xx "directory operations." "opendir, readdir," "telldir, seekdir, rewinddir, closedir, dirfd:" "" directory(3)
.xx "" "telnet: user interface to the" "TELNET protocol." "" telnet(1)
.xx "" "telnetd: DARPA" "TELNET protocol server." "" telnetd(8)
.xx "" "" "telnet: user interface to the  TELNET protocol." "" telnet(1)
.xx "" "" "telnetd: DARPA TELNET protocol server." "" telnetd(8)
.xx "" "" "tempnam, tmpfile, tmpnam: temporary file routines." "" tmpnam(3)
.xx "" "signals invalid floating\-point operations on a VAX" "(temporary)." "infnan:" infnan(3)
.xx "" "mktemp: make" "temporary file name (unique)." "" mktemp(3)
.xx "" "tempnam, tmpfile, tmpnam:" "temporary file routines." "" tmpnam(3)
.xx "" "" "term: conventional names for terminals." "" term(7)
.xx "" "" "termcap: terminal capability data base." "" termcap(5)
.xx "" "lock: reserve a" "terminal." "" lock(1)
.xx "" "worms: animate worms on a display" "terminal." "" worms(6)
.xx "" "termcap:" "terminal capability data base." "" termcap(5)
.xx "" "tput:" "terminal capability interface." "" tput(1)
.xx "" "gettytab:" "terminal configuration data base." "" gettytab(5)
.xx "" "stty: set the options for a" "terminal device interface." "" stty(1)
.xx "" "pty: pseudo" "terminal driver." "" pty(4)
.xx "" "ite: HP Internal" "Terminal Emulator." "" ite(4)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs:" "terminal independent operation routines." "" termcap(3)
.xx "" "tset:" "terminal initialization." "" tset(1)
.xx "" "ttys:" "terminal initialization information." "" ttys(5)
.xx "" "tty: general" "terminal interface." "" tty(4)
.xx "" "termios: general" "terminal line discipline." "" termios(4)
.xx "" "getty: set" "terminal mode." "" getty(8)
.xx "" "tty: return user's" "terminal name." "" tty(1)
.xx "" "ctermid: generate" "terminal pathname." "" ctermid(3)
.xx "" "script: make typescript of" "terminal session." "" script(1)
.xx "" "stty, gtty: set and get" "terminal state (defunct)." "" stty(3)
.xx "" "ttyname, isatty, ttyslot: get name of associated" "terminal (tty) from file descriptor." "" ttyname(3)
.xx "" "term: conventional names for" "terminals." "" term(7)
.xx "" "wait, waitpid, wait4, wait3: wait for process" "terminatation." "" wait(2)
.xx "" "endif:" "terminate conditional." "" csh(1)
.xx "" "end:" "terminate loop." "" csh(1)
.xx "" "kill:" "terminate or signal a process." "" kill(1)
.xx "" "endsw:" "terminate switch." "" csh(1)
.xx "" "_exit:" "terminate the calling process." "" _exit(2)
.xx "" "abort: cause abnormal program" "termination." "" abort(3)
.xx "" "exit: perform normal program" "termination." "" exit(3)
.xx "" "" "termios: general terminal line discipline." "" termios(4)
.xx "" "cfmakeraw, tcgetattr, tcsetattr: manipulating the" "termios structure." "/cfsetospeed, cfsetspeed," tcsetattr(3)
.xx "" "isalnum: alphanumeric character" "test." "" isalnum(3)
.xx "" "isalpha: alphabetic character" "test." "" isalpha(3)
.xx "" "isblank: space or tab character" "test." "" isblank(3)
.xx "" "iscntrl: control character" "test." "" iscntrl(3)
.xx "" "isdigit: decimal-digit character" "test." "" isdigit(3)
.xx "" "islower: lower-case character" "test." "" islower(3)
.xx "" "ispunct: punctuation character" "test." "" ispunct(3)
.xx "" "isspace: white-space character" "test." "" isspace(3)
.xx "" "isupper: upper-case character" "test." "" isupper(3)
.xx "" "isxdigit: hexadecimal-digit character" "test." "" isxdigit(3)
.xx "" "" "test: condition evaluation utility." "" test(1)
.xx "" "isascii:" "test for ASCII character." "" isascii(3)
.xx "" "isinf, isnan:" "test for infinity or not-a-number (\*(Na)." "" isinf(3)
.xx "" "isgraph: printing character" "test (space character exculsive)." "" isgraph(3)
.xx "" "isprint: printing character" "test (space character inclusive)." "" isprint(3)
.xx "" "quiz: random knowledge" "tests." "" quiz(6)
.xx "" "tetris: the game of" "tetris." "" tetris(6)
.xx "" "" "tetris: the game of tetris." "" tetris(6)
.xx "" "@g@pic: compile pictures for troff or" "TeX." "" pic(1)
.xx "" "grodvi: convert groff output to" "TeX dvi format." "" grodvi(1)
.xx "" "sticky: sticky" "text and append-only directories." "" sticky(8)
.xx "" "size: display object file segment sizes" "(text, data and bss)." "" size(1)
.xx "" "\&ed:" "text editor." "" ed(1)
.xx "" "ex, edit:" "text editor." "" ex(1)
.xx "" "sort: sort or merge" "text files." "" sort(1)
.xx "" "fmt: simple" "text formatter." "" fmt(1)
.xx "" "ms:" "text formatting macros." "" ms(7)
.xx "" "tf_init, tf_get_pname, tf_get_pinst, tf_get_cred," "tf_close: routines for manipulating a Kerberos/" "" tf_util(3)
.xx "Kerberos/" "tf_init, tf_get_pname, tf_get_pinst," "tf_get_cred, tf_close: routines for manipulating a" "" tf_util(3)
.xx "manipulating a Kerberos/" "tf_init, tf_get_pname," "tf_get_pinst, tf_get_cred, tf_close: routines for" "" tf_util(3)
.xx "routines for manipulating a Kerberos/" "tf_init," "tf_get_pname, tf_get_pinst, tf_get_cred, tf_close:" "" tf_util(3)
.xx "tf_close: routines for manipulating a Kerberos/" "" "tf_init, tf_get_pname, tf_get_pinst, tf_get_cred," "" tf_util(3)
.xx "\-Tdvi." "" "tfmtodit: create font files for use with groff" "" tfmtodit(1)
.xx "" "" "tftp: trivial file transfer program." "" tftp(1)
.xx "server." "" "tftpd: Internet Trivial File Transfer Protocol" "" tftpd(8)
.xx "terminal independent operation routines." "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs:" "" termcap(3)
.xx "independent operation routines." "tgetent, tgetnum," "tgetflag, tgetstr, tgoto, tputs: terminal" "" termcap(3)
.xx "independent operation routines." "tgetent," "tgetnum, tgetflag, tgetstr, tgoto, tputs: terminal" "" termcap(3)
.xx "operation routines." "tgetent, tgetnum, tgetflag," "tgetstr, tgoto, tputs: terminal independent" "" termcap(3)
.xx "routines." "tgetent, tgetnum, tgetflag, tgetstr," "tgoto, tputs: terminal independent operation" "" termcap(3)
.xx "" "ceil: smallest integral value not greater" "than x." "" ceil(3)
.xx "" "floor: largest integral value not greater" "than x." "" floor(3)
.xx "" "diction, explain: print wordy sentences;" "thesaurus for diction." "" diction(1)
.xx "" "from: print names of" "those who have sent mail." "" from(1)
.xx "" "merge:" "three-way file merge." "" merge(1)
.xx "" "krb_set_tkt_string: set Kerberos" "ticket cache file name." "" krb_set_tkt_string(3)
.xx "" "tf_close: routines for manipulating a Kerberos" "ticket file." "/tf_get_pinst, tf_get_cred," tf_util(3)
.xx "" "ksrvtgt: fetch and store Kerberos" "ticket-granting-ticket using a service key." "" ksrvtgt(1)
.xx "" "kdestroy: destroy Kerberos" "tickets." "" kdestroy(1)
.xx "" "klist: list currently held Kerberos" "tickets." "" klist(1)
.xx "" "at: schedule execution of commands `at' a given" "time." "" at(1)
.xx "" "date: display or set date and" "time." "" date(1)
.xx "" "ftime: get date and" "time." "" ftime(3)
.xx "" "gettimeofday, settimeofday: get/set date and" "time." "" gettimeofday(2)
.xx "" "shutdown: close down the system at a given" "time." "" shutdown(8)
.xx "" "sleep: suspend execution for an interval of" "time." "" sleep(1)
.xx "" "strftime: format date and" "time." "" strftime(3)
.xx "" "ualarm: schedule signal after specified" "time." "" ualarm(3)
.xx "" "ac: display connect" "time accounting." "" ac(8)
.xx "" "time:" "time command." "" csh(1)
.xx "" "time:" "time command execution." "" time(1)
.xx "" "tzset, tzsetwall: initialize" "time conversion information." "" tzset(3)
.xx "" "" "time: get time of day." "" time(3)
.xx "" "time: get" "time of day." "" time(3)
.xx "" "timed:" "time server daemon." "" timed(8)
.xx "" "" "time: time command." "" csh(1)
.xx "" "" "time: time command execution." "" time(1)
.xx "" "adjtime: correct the" "time to allow synchronization of the system clock." "" adjtime(2)
.xx "" "clock: determine processor" "time used." "" clock(3)
.xx "" "localtime, mktime: transform binary date and" "time value to ASCII." "/ctime, difftime, gmtime," ctime(3)
.xx "" "zic:" "time zone compiler." "" zic(8)
.xx "" "tzfile:" "time zone information." "" tzfile(5)
.xx "" "timedc:" "timed control program." "" timedc(8)
.xx "" "" "timed: time server daemon." "" timed(8)
.xx "" "" "timedc: timed control program." "" timedc(8)
.xx "" "getitimer, setitimer: get/set value of interval" "timer." "" getitimer(2)
.xx "" "alarm: set signal" "timer alarm." "" alarm(3)
.xx "" "times: process" "times." "" times(3)
.xx "" "touch: change file access and modification" "times." "" touch(1)
.xx "" "utime: set file" "times." "" utime(3)
.xx "" "utimes: set file access and modification" "times." "" utimes(2)
.xx "" "" "times: process times." "" times(3)
.xx "" "timezone: return the" "timezone abbreviation." "" timezone(3)
.xx "" "" "timezone: return the timezone abbreviation." "" timezone(3)
.xx "" "" "tip, cu: connect to a remote system." "" tip(1)
.xx "" "ns_addr, ns_ntoa: Xerox NS Ns" "(tm) address conversion routines." "" ns(3)
.xx "" "tempnam," "tmpfile, tmpnam: temporary file routines." "" tmpnam(3)
.xx "" "tempnam, tmpfile," "tmpnam: temporary file routines." "" tmpnam(3)
.xx "" "" "tn3270: full-screen remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "" "toascii: convert a byte to 7-bit ASCII." "" toascii(3)
.xx "" "/isprint, ispunct, isspace, isupper, isxdigit," "toascii tolower, toupper,: character classification/" "" ctype(3)
.xx "" "strtok, strsep: string" "token operations." "" strtok(3)
.xx "" "/ispunct, isspace, isupper, isxdigit, toascii" "tolower, toupper,: character classification macros." "" ctype(3)
.xx "conversion." "" "tolower: upper case to lower case letter" "" tolower(3)
.xx "" "amq: automounter query" "tool." "" amq(8)
.xx "" "intro: introduction to general commands" "(tools and utilities)." "" intro(1)
.xx "" "\&tc: HP98544 98550" "``Topcat'' and ``Catseye'' device interface." "" tc(4)
.xx "" "tsort:" "topological sort of a directed graph." "" tsort(1)
.xx "" "quot: display" "total block usage per user for a file system." "" quot(8)
.xx "" "" "touch: change file access and modification times." "" touch(1)
.xx "" "/isspace, isupper, isxdigit, toascii tolower," "toupper,: character classification macros." "" ctype(3)
.xx "conversion." "" "toupper: lower case to upper case letter" "" toupper(3)
.xx "" "" "TP: ISO Transport Protocol." "" tp(4)
.xx "" "afmtodit: create font files for use with groff" "\-Tps." "" afmtodit(1)
.xx "" "" "tput: terminal capability interface." "" tput(1)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto," "tputs: terminal independent operation routines." "" termcap(3)
.xx "" "" "tr: translate characters." "" tr(1)
.xx "" "ptrace: process" "trace." "" ptrace(2)
.xx "" "trpt: transliterate protocol" "trace." "" trpt(8)
.xx "" "trsp: transliterate sequenced packet protocol" "trace." "" trsp(8)
.xx "" "kdump: display kernel" "trace data." "" kdump(1)
.xx "host." "" "traceroute: print the route packets take to network" "" traceroute(8)
.xx "" "ktrace: enable kernel process" "tracing." "" ktrace(1)
.xx "" "ktrace: process" "tracing." "" ktrace(2)
.xx "" "atc: air" "traffic controller game." "" atc(6)
.xx "" "goto: command" "transfer." "" csh(1)
.xx "" "uucico, uucpd:" "transfer files queued by uucp or uux." "" uucico(8)
.xx "" "ftp: ARPANET file" "transfer program." "" ftp(1)
.xx "" "tftp: trivial file" "transfer program." "" tftp(1)
.xx "" "ftpd: Internet File" "Transfer Protocol server." "" ftpd(8)
.xx "" "tftpd: Internet Trivial File" "Transfer Protocol server." "" tftpd(8)
.xx "" "named-xfer: ancillary agent for inbound zone" "transfers." "" named-xfer(8)
.xx "" "strxfrm:" "transform a string under locale." "" strxfrm(3)
.xx "" "/ctime, difftime, gmtime, localtime, mktime:" "transform binary date and time value to ASCII." "" ctime(3)
.xx "" "UTF2: Universal character set" "Transformation Format encoding of runes." "" utf2(4)
.xx "ASCII." "pfbtops:" "translate a PostScript font in .pfb format to" "" pfbtops(1)
.xx "" "tr:" "translate characters." "" tr(1)
.xx "" "/etc/kerberosIV/krb.realms: host to Kerberos realm" "translation file." "" krb.realms(5)
.xx "" "trpt:" "transliterate protocol trace." "" trpt(8)
.xx "" "trsp:" "transliterate sequenced packet protocol trace." "" trsp(8)
.xx "" "tcp: Internet" "Transmission Control Protocol." "" tcp(4)
.xx "" "cltp: ISO Connectionless" "Transport Protocol." "" cltp(4)
.xx "" "TP: ISO" "Transport Protocol." "" tp(4)
.xx "" "fts:" "traverse a file hierarchy." "" fts(3)
.xx "" "" "trek: trekkie game." "" trek(6)
.xx "" "trek:" "trekkie game." "" trek(6)
.xx "" "tftp:" "trivial file transfer program." "" tftp(1)
.xx "" "tftpd: Internet" "Trivial File Transfer Protocol server." "" tftpd(8)
.xx "" "@g@eqn: format equations for" "troff." "" eqn(1)
.xx "" "@g@tbl: format tables for" "troff." "" tbl(1)
.xx "" "addftinfo: add information to" "troff font files for use with groff." "" addftinfo(1)
.xx "" "@g@pic: compile pictures for" "troff or TeX." "" pic(1)
.xx "" "deroff: remove nroff," "troff, tbl and eqn constructs." "" deroff(1)
.xx "" "battlestar: a" "tropical adventure game." "" battlestar(6)
.xx "" "" "trpt: transliterate protocol trace." "" trpt(8)
.xx "trace." "" "trsp: transliterate sequenced packet protocol" "" trsp(8)
.xx "" "" "true: return true value." "" true(1)
.xx "" "true: return" "true value." "" true(1)
.xx "" "truncate, ftruncate:" "truncate a file to a specified length." "" truncate(2)
.xx "length." "" "truncate, ftruncate: truncate a file to a specified" "" truncate(2)
.xx "" "" "tset: terminal initialization." "" tset(1)
.xx "" "" "tsort: topological sort of a directed graph." "" tsort(1)
.xx "" "isatty, ttyslot: get name of associated terminal" "(tty) from file descriptor." "ttyname," ttyname(3)
.xx "" "" "tty: general terminal interface." "" tty(4)
.xx "" "acucntrl: turn around" "tty line between dialin and dialout." "" acucntrl(8)
.xx "" "" "tty: return user's terminal name." "" tty(1)
.xx "terminal (tty) from file descriptor." "" "ttyname, isatty, ttyslot: get name of associated" "" ttyname(3)
.xx "" "last: indicate last logins of users and" "ttys." "" last(1)
.xx "" "getttyent, getttynam, setttyent, endttyent: get" "ttys file entry." "" getttyent(3)
.xx "" "" "ttys: terminal initialization information." "" ttys(5)
.xx "file descriptor." "ttyname, isatty," "ttyslot: get name of associated terminal (tty) from" "" ttyname(3)
.xx "" "tunefs:" "tune up an existing file system." "" tunefs(8)
.xx "" "" "tunefs: tune up an existing file system." "" tunefs(8)
.xx "" "mdoc.samples:" "tutorial sampler for writing  manuals with \-mdoc." "" mdoc.samples(7)
.xx "" "stab: symbol table" "types." "" stab(5)
.xx "" "types: system data" "types." "" types(5)
.xx "" "" "types: system data types." "" types(5)
.xx "" "script: make" "typescript of terminal session." "" script(1)
.xx "" "man: (deprecated) macros to" "typeset manual." "" man(7)
.xx "" "grotty: groff driver for" "typewriter-like devices." "" grotty(1)
.xx "" "" "tzfile: time zone information." "" tzfile(5)
.xx "information." "" "tzset, tzsetwall: initialize time conversion" "" tzset(3)
.xx "" "tzset," "tzsetwall: initialize time conversion information." "" tzset(3)
.xx "" "" "ualarm: schedule signal after specified time." "" ualarm(3)
.xx "" "" "udp: Internet User Datagram Protocol." "" udp(4)
.xx "" "getpw: get name from" "uid." "" getpw(3)
.xx "" "" "ul: do underlining." "" ul(1)
.xx "" "" "umask: change or display file creation mask." "" csh(1)
.xx "" "" "umask: set file creation mode mask." "" umask(2)
.xx "" "mount," "umount: mount and dismount file systems." "" mount(8)
.xx "" "" "unalias: remove aliases." "" csh(1)
.xx "" "" "uname: display information about the system." "" uname(1)
.xx "cat them." "compact," "uncompact, ccat: compress and uncompress files, and" "" compact(1)
.xx "" "compact, uncompact, ccat: compress and" "uncompress files, and cat them." "" compact(1)
.xx "" "compress," "uncompress, zcat: compress and expand data." "" compress(1)
.xx "" "strxfrm: transform a string" "under locale." "" strxfrm(3)
.xx "" "freeze a configuration of sources checked in" "under RCS." "rcsfreeze:" rcsfreeze(1)
.xx "" "xroach: cockroaches hide" "under your windows." "" xroach(6)
.xx "" "wump: hunt the wumpus in an" "underground cave." "" wump(6)
.xx "" "ul: do" "underlining." "" ul(1)
.xx "" "expand," "unexpand: expand tabs to spaces, and vice versa." "" expand(1)
.xx "" "ungetc:" "un-get character from input stream." "" ungetc(3)
.xx "" "" "ungetc: un-get character from input stream." "" ungetc(3)
.xx "" "" "unhash: discard command hash table." "" csh(1)
.xx "" "" "unifdef: remove ifdef'ed lines." "" unifdef(1)
.xx "file." "" "uniq: report or filter out repeated lines in a" "" uniq(1)
.xx "" "mktemp: make temporary file name" "(unique)." "" mktemp(3)
.xx "" "gethostid, sethostid: get/set" "unique identifier of current host." "" gethostid(3)
.xx "" "" "units: conversion program." "" units(1)
.xx "encoding of runes." "UTF2:" "Universal character set Transformation Format" "" utf2(4)
.xx "" "uux: unix to" "unix command execution." "" uux(1)
.xx "" "uucp: unix to" "unix copy." "" uucp(1)
.xx "" "crash:" "UNIX system failures." "" crash(8)
.xx "" "uux:" "unix to unix command execution." "" uux(1)
.xx "" "uucp:" "unix to unix copy." "" uucp(1)
.xx "" "" "unix: UNIX-domain protocol family." "" unix(4)
.xx "" "unix:" "UNIX-domain protocol family." "" unix(4)
.xx "" "" "unlimit: remove resource limitiations." "" csh(1)
.xx "" "" "unlink: remove directory entry." "" unlink(2)
.xx "" "mlock, munlock: lock" "(unlock) physical pages in memory." "" mlock(2)
.xx "" "mount," "unmount: mount or dismount a filesystem." "" mount(2)
.xx "" "strip: remove" "unnecessary information from executable files." "" strip(1)
.xx "" "" "unset: discard shell variables." "" csh(1)
.xx "" "getenv, putenv, setenv," "unsetenv: environment variable functions." "" getenv(3)
.xx "" "" "unsetenv: remove environment variables." "" csh(1)
.xx "" "strtoul, strtouq: convert a string to an" "unsigned long or uquad_t integer." "" strtoul(3)
.xx "strings." "strfile," "unstr: create a random access file for storing" "" strfile(8)
.xx "to original form." "" "unvis: revert a visual representation of data back" "" unvis(1)
.xx "characters." "" "unvis, strunvis: decode a visual representation of" "" unvis(3)
.xx "" "tunefs: tune" "up an existing file system." "" tunefs(8)
.xx "" "startslip: dial" "up and login to a slip server." "" startslip(1)
.xx "" "rhost: look" "up host names using domain server." "" host(1)
.xx "" "free: free" "up memory allocated with malloc, calloc or realloc." "" free(3)
.xx "" "rcsclean: clean" "up working files." "" rcsclean(1)
.xx "frequently." "" "update: flush internal filesystem caches to disk" "" update(8)
.xx "" "toupper: lower case to" "upper case letter conversion." "" toupper(3)
.xx "" "tolower:" "upper case to lower case letter conversion." "" tolower(3)
.xx "" "isupper:" "upper-case character test." "" isupper(3)
.xx "" "" "uptime: show how long system has been running." "" uptime(1)
.xx "" "strtouq: convert a string to an unsigned long or" "uquad_t integer." "strtoul," strtoul(3)
.xx "" "quota: display disk" "usage and limits." "" quota(1)
.xx "" "quot: display total block" "usage per user for a file system." "" quot(8)
.xx "" "du: display disk" "usage statistics." "" du(1)
.xx "" "mount_null: demonstrate the" "use of a null file system layer." "" mount_null(8)
.xx "" "madvise: give advise about" "use of memory." "" madvise(2)
.xx "" "mincore: get advise about" "use of memory." "" mincore(2)
.xx "" "addftinfo: add information to troff font files for" "use with groff." "" addftinfo(1)
.xx "" "tfmtodit: create font files for" "use with groff \-Tdvi." "" tfmtodit(1)
.xx "" "afmtodit: create font files for" "use with groff \-Tps." "" afmtodit(1)
.xx "" "clock: determine processor time" "used." "" clock(3)
.xx "" "what: show what versions of object modules were" "used to construct a file." "" what(1)
.xx "" "login: login new" "user." "" csh(1)
.xx "" "talk: talk to another" "user." "" talk(1)
.xx "" "write: send a message to another" "user." "" write(1)
.xx "" "setruid, setrgid: set" "user and group ID." "" setruid(3)
.xx "" "setuid, seteuid, setgid, setegid,: set" "user and group ID." "" setuid(2)
.xx "" "getbsize: get" "user block size." "" getbsize(3)
.xx "" "talkd: remote" "user communication server." "" talkd(8)
.xx "" "chpass: add or change" "user database information." "" chpass(1)
.xx "" "udp: Internet" "User Datagram Protocol." "" udp(4)
.xx "" "environ:" "user environment." "" environ(7)
.xx "" "quot: display total block usage per" "user for a file system." "" quot(8)
.xx "" "whoami: display effective" "user id." "" whoami(1)
.xx "" "getuid, geteuid: get" "user identification." "" getuid(2)
.xx "" "id: return" "user identity." "" id(1)
.xx "" "su: substitute" "user identity." "" su(1)
.xx "" "setreuid: set real and effective" "user ID's." "" setreuid(2)
.xx "" "finger:" "user information lookup program." "" finger(1)
.xx "" "fingerd: remote" "user information server." "" fingerd(8)
.xx "" "telnet:" "user interface to the  TELNET protocol." "" telnet(1)
.xx "" "whois: Internet" "user name directory service." "" whois(1)
.xx "" "kvm_getprocs, kvm_getargv, kvm_getenvv: access" "user process state." "" kvm_getprocs(3)
.xx "" "edquota: edit" "user quotas." "" edquota(8)
.xx "" "getusershell, setusershell, endusershell: get legal" "user shells." "" getusershell(3)
.xx "" "" "USERFILE: UUCP pathname permissions file." "" USERFILE(5)
.xx "" "adduser: procedure for adding new" "users." "" adduser(8)
.xx "" "mesg: display (do not display) messages from other" "users." "" mesg(1)
.xx "" "users: list current" "users." "" users(1)
.xx "" "wall: write a message to" "users." "" wall(1)
.xx "" "last: indicate last logins of" "users and ttys." "" last(1)
.xx "" "w: who present" "users are and what they are doing." "" w(1)
.xx "" "" "users: list current users." "" users(1)
.xx "" "logname: display" "user's login name." "" logname(1)
.xx "" "passwd: modify a" "user's password." "" passwd(1)
.xx "" "tty: return" "user's terminal name." "" tty(1)
.xx "" "fetch and store Kerberos ticket-granting-ticket" "using a service key." "ksrvtgt:" ksrvtgt(1)
.xx "" "rhost: look up host names" "using domain server." "" host(1)
.xx "" "bdes: encrypt/decrypt" "using the Data Encryption Standard." "" bdes(1)
.xx "microseconds." "" "usleep: suspend execution for interval of" "" usleep(3)
.xx "encoding of runes." "" "UTF2: Universal character set Transformation Format" "" utf2(4)
.xx "" "intro: introduction to general commands (tools and" "utilities)." "" intro(1)
.xx "" "eeprom: openprom control" "utility." "" eeprom(8)
.xx "" "Kerberos key distribution center database editing" "utility." "kdb_edit:" kdb_edit(8)
.xx "" "kdb_util: Kerberos key distribution center database" "utility." "" kdb_util(8)
.xx "" "kinit: Kerberos login" "utility." "" kinit(1)
.xx "" "test: condition evaluation" "utility." "" test(1)
.xx "" "xargs: construct argument list(s) and execute" "utility." "" xargs(1)
.xx "" "krb_get_admhst, krb_get_lrealm: additional Kerberos" "utility routines." "/krb_get_phost, krb_get_krbhst," krb_realmofhost(3)
.xx "" "getrusage: get information about resource" "utilization." "" getrusage(2)
.xx "" "vtimes: get information about resource" "utilization." "" vtimes(3)
.xx "" "" "utime: set file times." "" utime(3)
.xx "" "" "utimes: set file access and modification times." "" utimes(2)
.xx "" "" "utmp, wtmp, lastlog: login records." "" utmp(5)
.xx "uux." "" "uucico, uucpd: transfer files queued by uucp or" "" uucico(8)
.xx "" "" "uuclean: uucp spool directory clean-up." "" uuclean(8)
.xx "" "rmail: handle remote mail received via" "uucp." "" rmail(8)
.xx "" "L-devices:" "UUCP device description file." "" L-devices(5)
.xx "" "uuxqt:" "UUCP execution file interpreter." "" uuxqt(8)
.xx "" "L.aliases:" "UUCP hostname alias file." "" L.aliases(5)
.xx "" "uuname: list names of" "UUCP hosts." "" uuname(1)
.xx "" "uulog: display" "UUCP log entries." "" uulog(1)
.xx "" "uucico, uucpd: transfer files queued by" "uucp or uux." "" uucico(8)
.xx "" "USERFILE:" "UUCP pathname permissions file." "" USERFILE(5)
.xx "" "L-dialcodes:" "UUCP phone number index file." "" L-dialcodes(5)
.xx "" "uuq: examine or manipulate the" "uucp queue." "" uuq(1)
.xx "" "L.cmds:" "UUCP remote command permissions file." "" L.cmds(5)
.xx "" "L.sys:" "UUCP remote host description file." "" L.sys(5)
.xx "" "uupoll: poll a remote" "UUCP site." "" uupoll(8)
.xx "" "uuclean:" "uucp spool directory clean-up." "" uuclean(8)
.xx "" "uusnap: show snapshot of the" "UUCP system." "" uusnap(8)
.xx "" "" "uucp: unix to unix copy." "" uucp(1)
.xx "" "uucico," "uucpd: transfer files queued by uucp or uux." "" uucico(8)
.xx "" "uuencode," "uudecode: encode/decode a binary file." "" uuencode(1)
.xx "" "uuencode: format of an encoded" "uuencode file." "" uuencode.format(5)
.xx "" "" "uuencode: format of an encoded uuencode file." "" uuencode.format(5)
.xx "" "" "uuencode, uudecode: encode/decode a binary file." "" uuencode(1)
.xx "" "" "uulog: display UUCP log entries." "" uulog(1)
.xx "" "" "uuname: list names of UUCP hosts." "" uuname(1)
.xx "" "" "uupoll: poll a remote UUCP site." "" uupoll(8)
.xx "" "" "uuq: examine or manipulate the uucp queue." "" uuq(1)
.xx "" "" "uusend: send a file to a remote host." "" uusend(1)
.xx "" "" "uusnap: show snapshot of the UUCP system." "" uusnap(8)
.xx "" "uucico, uucpd: transfer files queued by uucp or" "uux." "" uucico(8)
.xx "" "" "uux: unix to unix command execution." "" uux(1)
.xx "" "" "uuxqt: UUCP execution file interpreter." "" uuxqt(8)
.xx "" "cc, g++: GNU project C and C++ Compiler" "(v2 preliminary)." "" cc(1)
.xx "" "g++: GNU project C++ Compiler" "(v2 preliminary)." "" g++(1)
.xx "" "" "vacation: return ``I am not here'' indication." "" vacation(1)
.xx "" "" "valloc: aligned memory allocation function." "" valloc(3)
.xx "" "false: return false" "value." "" false(1)
.xx "" "true: return true" "value." "" true(1)
.xx "" "abs: integer absolute" "value function." "" abs(3)
.xx "" "fabs: floating-point absolute" "value function." "" fabs(3)
.xx "" "cabs: euclidean distance and complex absolute" "value functions." "hypot," hypot(3)
.xx "" "ceil: smallest integral" "value not greater than x." "" ceil(3)
.xx "" "floor: largest integral" "value not greater than x." "" floor(3)
.xx "" "labs: return the absolute" "value of a long integer." "" labs(3)
.xx "" "readlink: read" "value of a symbolic link." "" readlink(2)
.xx "" "getitimer, setitimer: get/set" "value of interval timer." "" getitimer(2)
.xx "" "set: change" "value of shell variable." "" csh(1)
.xx "" "strtol, strtoq: convert string" "value to a long or quad_t integer." "" strtol(3)
.xx "" "localtime, mktime: transform binary date and time" "value to ASCII." "asctime, ctime, difftime, gmtime," ctime(3)
.xx "" "htonl, htons, ntohl, ntohs: convert" "values between host and network byte order." "" byteorder(3)
.xx "" "modf: extract signed integral and fractional" "values from floating-point number." "" modf(3)
.xx "" "atan: arc tangent function of one" "variable." "" atan(3)
.xx "" "set: change value of shell" "variable." "" csh(1)
.xx "" "stdarg:" "variable argument lists." "" stdarg(3)
.xx "" "getenv, putenv, setenv, unsetenv: environment" "variable functions." "" getenv(3)
.xx "" "setenv: set" "variable in environment." "" csh(1)
.xx "" "atan2: arc tangent function of two" "variables." "" atan2(3)
.xx "" "confstr: get string-valued configurable" "variables." "" confstr(3)
.xx "" "@: arithmetic on shell" "variables." "" csh(1)
.xx "" "unset: discard shell" "variables." "" csh(1)
.xx "" "unsetenv: remove environment" "variables." "" csh(1)
.xx "" "pathconf, fpathconf: get configurable pathname" "variables." "" pathconf(2)
.xx "" "sysconf: get configurable system" "variables." "" sysconf(3)
.xx "" "signals invalid floating\-point operations on a" "VAX (temporary)." "infnan:" infnan(3)
.xx "" "assert: expression" "verification macro." "" assert(3)
.xx "" "tcopy: copy and/or" "verify mag tapes." "" tcopy(1)
.xx "formatted error messages." "err," "verr, errx, verrx, warn, vwarn, warnx, vwarnx:" "" err(3)
.xx "messages." "err, verr, errx," "verrx, warn, vwarn, warnx, vwarnx: formatted error" "" err(3)
.xx "" "expand, unexpand: expand tabs to spaces, and vice" "versa." "" expand(1)
.xx "" "kuserok: Kerberos" "version of ruserok." "" kuserok(3)
.xx "file." "what: show what" "versions of object modules were used to construct a" "" what(1)
.xx "efficient way." "" "vfork: spawn new process in a virtual memory" "" vfork(2)
.xx "" "printf, fprintf, sprintf, snprintf, vprintf," "vfprintf, vsprintf, vsnprintf: formatted output/" "" printf(3)
.xx "" "scanf, fscanf, sscanf, vscanf, vsscanf," "vfscanf: input format conversion." "" scanf(3)
.xx "" "" "vgrind: grind nice listings of programs." "" vgrind(1)
.xx "" "vgrindefs: language definition data base for" "vgrind(1)." "" vgrindefs(5)
.xx "vgrind(1)." "" "vgrindefs: language definition data base for" "" vgrindefs(5)
.xx "based on ex." "" "\&vi, view: screen oriented (visual) display editor" "" vi(1)
.xx "" "Kerberos routines for sending authentication" "via network stream sockets." "/krb_net_read:" krb_sendauth(3)
.xx "" "rmail: handle remote mail received" "via uucp." "" rmail(8)
.xx "" "expand, unexpand: expand tabs to spaces, and" "vice versa." "" expand(1)
.xx "on ex." "\&vi," "view: screen oriented (visual) display editor based" "" vi(1)
.xx "" "more: file perusal filter for crt" "viewing." "" more(1)
.xx "" "robots: fight off" "villainous robots." "" robots(6)
.xx "" "" "vipw: edit the password file." "" vipw(8)
.xx "" "mount_lofs: mount a" "virtual copy of an existing filesystem sub-tree." "" mount_lofs(8)
.xx "" "kvm_read, kvm_write: read or write kernel" "virtual memory." "" kvm_read(3)
.xx "" "kvm_openfiles, kvm_close: initialize kernel" "virtual memory access." "kvm_open," kvm_open(3)
.xx "" "vfork: spawn new process in a" "virtual memory efficient way." "" vfork(2)
.xx "" "vmstat: report" "virtual memory statistics." "" vmstat(8)
.xx "format." "" "vis: display non-printable characters in a visual" "" vis(1)
.xx "" "" "vis: visually encode characters." "" vis(3)
.xx "" "\&vi, view: screen oriented" "(visual) display editor based on ex." "" vi(1)
.xx "" "vis: display non-printable characters in a" "visual format." "" vis(1)
.xx "" "unvis, strunvis: decode a" "visual representation of characters." "" unvis(3)
.xx "form." "unvis: revert a" "visual representation of data back to original" "" unvis(1)
.xx "" "vis:" "visually encode characters." "" vis(3)
.xx "consumption." "" "vlimit: control maximum system resource" "" vlimit(3)
.xx "" "tn3270: full-screen remote login to IBM" "VM/CMS." "" tn3270(1)
.xx "" "" "vmstat: report virtual memory statistics." "" vmstat(8)
.xx "" "fs, inode: format of file system" "volume." "" fs(5)
.xx "output/" "printf, fprintf, sprintf, snprintf," "vprintf, vfprintf, vsprintf, vsnprintf: formatted" "" printf(3)
.xx "" "scanf, fscanf, sscanf," "vscanf, vsscanf, vfscanf: input format conversion." "" scanf(3)
.xx "" "sprintf, snprintf, vprintf, vfprintf, vsprintf," "vsnprintf: formatted output conversion." "/fprintf," printf(3)
.xx "" "/fprintf, sprintf, snprintf, vprintf, vfprintf," "vsprintf, vsnprintf: formatted output conversion." "" printf(3)
.xx "" "scanf, fscanf, sscanf, vscanf," "vsscanf, vfscanf: input format conversion." "" scanf(3)
.xx "system log." "syslog," "vsyslog, openlog, closelog, setlogmask: control" "" syslog(3)
.xx "" "" "vtimes: get information about resource utilization." "" vtimes(3)
.xx "" "err, verr, errx, verrx, warn," "vwarn, warnx, vwarnx: formatted error messages." "" err(3)
.xx "" "err, verr, errx, verrx, warn, vwarn, warnx," "vwarnx: formatted error messages." "" err(3)
.xx "" "" "w: who present users are and what they are doing." "" w(1)
.xx "" "" "wait: await process completion." "" wait(1)
.xx "" "wait:" "wait for background processes to complete." "" csh(1)
.xx "" "sigpause: atomically release blocked signals and" "wait for interrupt." "" sigpause(2)
.xx "" "sigsuspend: atomically release blocked signals and" "wait for interrupt." "" sigsuspend(2)
.xx "" "wait, waitpid, wait4, wait3:" "wait for process terminatation." "" wait(2)
.xx "" "" "wait: wait for background processes to complete." "" csh(1)
.xx "terminatation." "" "wait, waitpid, wait4, wait3: wait for process" "" wait(2)
.xx "" "wait, waitpid, wait4," "wait3: wait for process terminatation." "" wait(2)
.xx "" "wait, waitpid," "wait4, wait3: wait for process terminatation." "" wait(2)
.xx "terminatation." "wait," "waitpid, wait4, wait3: wait for process" "" wait(2)
.xx "" "find:" "walk a file hierarchy." "" find(1)
.xx "" "" "wall: write a message to users." "" wall(1)
.xx "messages." "err, verr, errx, verrx," "warn, vwarn, warnx, vwarnx: formatted error" "" err(3)
.xx "" "err, verr, errx, verrx, warn, vwarn," "warnx, vwarnx: formatted error messages." "" err(3)
.xx "" "" "wc: word, line, and byte count." "" wc(1)
.xx "C." "mblen, mbstowcs, mbtowc," "wcstombs, wctomb: multibyte character support for" "" multibyte(3)
.xx "" "mblen, mbstowcs, mbtowc, wcstombs," "wctomb: multibyte character support for C." "" multibyte(3)
.xx "" "what: show what versions of object modules" "were used to construct a file." "" what(1)
.xx "" "whatis: describe" "what a command is." "" whatis(1)
.xx "used to construct a file." "" "what: show what versions of object modules were" "" what(1)
.xx "" "w: who present users are and" "what they are doing." "" w(1)
.xx "construct a file." "what: show" "what versions of object modules were used to" "" what(1)
.xx "" "" "whatis: describe what a command is." "" whatis(1)
.xx "" "leave: remind you" "when you have to leave." "" leave(1)
.xx "" "" "whereis: locate programs." "" whereis(1)
.xx "paths." "" "which: locate a program file including aliases and" "" which(1)
.xx "" "" "while: repeat commands conditionally." "" csh(1)
.xx "" "break: exit" "while/foreach loop." "" csh(1)
.xx "" "isspace:" "white-space character test." "" isspace(3)
.xx "" "" "who: display who is logged in." "" who(1)
.xx "" "from: print names of those" "who have sent mail." "" from(1)
.xx "" "who: display" "who is logged in." "" who(1)
.xx "" "rwho:" "who is logged in on local machines." "" rwho(1)
.xx "" "biff: be notified if mail arrives and" "who it is from." "" biff(1)
.xx "" "w:" "who present users are and what they are doing." "" w(1)
.xx "" "" "whoami: display effective user id." "" whoami(1)
.xx "" "" "whois: Internet user name directory service." "" whois(1)
.xx "" "fold: fold long lines for finite" "width output device." "" fold(1)
.xx "" "xneko: cat-and-mouse chase in an X" "window." "" xneko(6)
.xx "" "window:" "window environment." "" window(1)
.xx "" "" "window: window environment." "" window(1)
.xx "" "xroach: cockroaches hide under your" "windows." "" xroach(6)
.xx "" "fastboot, fasthalt: reboot/halt the system" "without checking the disks." "" fastboot(8)
.xx "" "sail: multi-user" "wooden ships and iron men." "" sail(6)
.xx "" "fgetc, getc, getchar, getw: get next character or" "word from input stream." "" getc(3)
.xx "" "wc:" "word, line, and byte count." "" wc(1)
.xx "" "boggle:" "word search game." "" boggle(6)
.xx "" "fputc, putc, putchar, putw: output a character or" "word to a stream." "" putc(3)
.xx "" "diction, explain: print" "wordy sentences; thesaurus for diction." "" diction(1)
.xx "" "cd: change" "working directory." "" cd(1)
.xx "" "chdir, fchdir: change current" "working directory." "" chdir(2)
.xx "" "pwd: return" "working directory name." "" pwd(1)
.xx "" "getwd: get" "working directory pathname." "" getcwd(3)
.xx "" "rcsclean: clean up" "working files." "" rcsclean(1)
.xx "" "worm: play the growing" "worm game." "" worm(6)
.xx "" "" "worm: play the growing worm game." "" worm(6)
.xx "" "" "worms: animate worms on a display terminal." "" worms(6)
.xx "" "worms: animate" "worms on a display terminal." "" worms(6)
.xx "" "memset:" "write a byte to byte string." "" memset(3)
.xx "" "wall:" "write a message to users." "" wall(1)
.xx "" "disklabel: read and" "write disk pack label." "" disklabel(8)
.xx "" "pax: read and" "write file archives and copy directory hierarchies." "" pax(1)
.xx "" "kvm_read, kvm_write: read or" "write kernel virtual memory." "" kvm_read(3)
.xx "" "write, writev:" "write output." "" write(2)
.xx "" "" "write: send a message to another user." "" write(1)
.xx "" "" "write, writev: write output." "" write(2)
.xx "" "bzero:" "write zeroes to a byte string." "" bzero(3)
.xx "" "sync: force completion of pending disk" "writes (flush cache)." "" sync(8)
.xx "" "write," "writev: write output." "" write(2)
.xx "" "open: open or create a file for reading or" "writing." "" open(2)
.xx "" "mdoc.samples: tutorial sampler for" "writing  manuals with \-mdoc." "" mdoc.samples(7)
.xx "" "utmp," "wtmp, lastlog: login records." "" utmp(5)
.xx "" "" "wump: hunt the wumpus in an underground cave." "" wump(6)
.xx "" "wump: hunt the" "wumpus in an underground cave." "" wump(6)
.xx "" "ceil: smallest integral value not greater than" "x." "" ceil(3)
.xx "" "floor: largest integral value not greater than" "x." "" floor(3)
.xx "" "xchess:" "X chess display." "" xchess(1)
.xx "" "xneko: cat-and-mouse chase in an" "X window." "" xneko(6)
.xx "utility." "" "xargs: construct argument list(s) and execute" "" xargs(1)
.xx "" "" "xchess: X chess display." "" xchess(1)
.xx "" "idp:" "Xerox Internet Datagram Protocol." "" idp(4)
.xx "" "ns:" "Xerox Network Systems(tm) protocol family." "" ns(4)
.xx "" "ns_addr, ns_ntoa:" "Xerox NS Ns (tm) address conversion routines." "" ns(3)
.xx "" "spp:" "Xerox Sequenced Packet Protocol." "" spp(4)
.xx "" "xsend," "xget, enroll: private encrypted mail." "" xsend(1)
.xx "" "" "xneko: cat-and-mouse chase in an X window." "" xneko(6)
.xx "" "" "XNSrouted: NS Routing Information Protocol daemon." "" XNSrouted(8)
.xx "" "" "xroach: cockroaches hide under your windows." "" xroach(6)
.xx "" "" "xsend, xget, enroll: private encrypted mail." "" xsend(1)
.xx "shared strings." "" "xstr: extract strings from C programs to implement" "" xstr(1)
.xx "kind." "j0, j1, jn," "y0, y1, yn: bessel functions of first and second" "" j0(3)
.xx "" "j0, j1, jn, y0," "y1, yn: bessel functions of first and second kind." "" j0(3)
.xx "" "" "yacc: an LALR(1) parser generator." "" yacc(1)
.xx "" "" "yes: be repetitively affirmative." "" yes(1)
.xx "" "j0, j1, jn, y0, y1," "yn: bessel functions of first and second kind." "" j0(3)
.xx "" "yyfix: extract tables from" "y.tab.c." "" yyfix(1)
.xx "" "" "yyfix: extract tables from y.tab.c." "" yyfix(1)
.xx "" "compress, uncompress," "zcat: compress and expand data." "" compress(1)
.xx "" "gzip, gunzip," "zcat: compress or expand files." "" gzip(1)
.xx "" "calloc: allocate clean memory" "(zero initialized space)." "" calloc(3)
.xx "" "bzero: write" "zeroes to a byte string." "" bzero(3)
.xx "" "" "zic: time zone compiler." "" zic(8)
.xx "" "zic: time" "zone compiler." "" zic(8)
.xx "" "tzfile: time" "zone information." "" tzfile(5)
.xx "" "named-xfer: ancillary agent for inbound" "zone transfers." "" named-xfer(8)
.xx "" "" "zopen: compressed stream open function." "" zopen(3)
