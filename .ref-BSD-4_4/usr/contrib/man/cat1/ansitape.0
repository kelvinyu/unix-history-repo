


ANSITAPE(1)            BSD Reference Manual           ANSITAPE(1)


NNAAMMEE
       ansitape - ANSI standard tape handler

SSYYNNOOPPSSIISS
       aannssiittaappee [key] [keyargs] [files]

DDEESSCCRRIIPPTTIIOONN
       _A_n_s_i_t_a_p_e  reads  and writes magnetic tapes written in ANSI
       standard format (called ``Files-11'' by DEC).  Tapes writ-
       ten by _a_n_s_i_t_a_p_e are labeled with the first 6 characters of
       the machine name by default.  Actions  are  controlled  by
       the  _k_e_y argument.  The _k_e_y is a string of characters con-
       taining at most one function letter.  Other  arguments  to
       the  command  are  a  tape label and file names specifying
       which files are to be written onto or extracted  from  the
       tape.

       The function portion of the key is specified by one of the
       following letters:

       rr       The named files are written  at  the  end  of  the
               tape.  The cc function implies this.

       xx       The  named  files are extracted from the tape.  If
               no file argument is given, the entire contents  of
               the  tape is extracted.  Note that if the tape has
               duplicated file names, only the  last  file  of  a
               given name can be extracted.

       tt       The  names  of the specified files are listed each
               time they occur on the tape.  If no file  argument
               is given, all files on the tape are listed.

       cc       Create a new tape; writing begins at the beginning
               of the tape instead of after the last file.   This
               command implies rr..

       The  following  characters  may be used in addition to the
       letter which selects the function desired.

       ff       This argument allows the selection of a  different
               tape device.  The next word in the keyargs list is
               taken to be the full name of a device to write the
               tape on.  The default is /dev/rmt12.

       nn       The  nn  option  allows  the user to specify as the
               next argument in the keyargs list, a control  file
               containing  the names of files to put on the tape.
               If the file name is '-', the  control  file  will,
               instead, be read from standard input.  The control
               file contains one line for each file to be  placed



4th Berkeley Distribution April 10, 1985                        1








ANSITAPE(1)            BSD Reference Manual           ANSITAPE(1)


               on the tape.  Each line has two names, the name of
               the file on the local machine, and the name it  is
               to  have when placed on the tape.  This allows for
               more convenient  flattening  of  hierarchies  when
               placing them on tape.  If the second name is omit-
               ted, the UNIX file name will be used on  the  tape
               also.   This  argument can only be used with the rr
               and cc functions.

       ll       The ll option allows the user to specify the  label
               to  be  placed  on the tape.  The next argument in
               the keyargs list is taken as the tape label, which
               will  be  space padded or truncated to six charac-
               ters.  This option is meaningless unless cc is also
               specified.

       vv       Normally  _a_n_s_i_t_a_p_e works relatively silently.  The
               vv (verbose) option causes it to  type  information
               about each file as it processes it.

       bb       The  bb option allows the user to select the block-
               size to be used for the tape.  By  default,  _a_n_s_i_-
               _t_a_p_e  uses the maximum block size permitted by the
               ANSI standard, 2048.  Some systems will  permit  a
               much  larger  block  size,  and if large files are
               being put on the tape it may be advantageous to do
               so.   _A_n_s_i_t_a_p_e  will take the next argument of the
               keyargs list as the blocksize for the tape.   Val-
               ues  below 18 or above 32k will be limited to that
               range.   The  standard  scale  factors  b=512  and
               k=1024 are accepted.

       FF       The  FF flag allows _a_n_s_i_t_a_p_e to write ansi 'D' for-
               mat fixed  record  length  tapes.   The  next  two
               keyargs must be the recordsize and blocksize to be
               used, with the same scale factors and range limits
               as  for  the bb option.  The files to be written by
               the FF flag must be in fixed format on the unix end
               -  all  lines  should  be _E_X_A_C_T_L_Y rreeccoorrddssiizzee bytes
               long plus a terminating  newline  (which  will  be
               discarded).   Note  that  this is exactly the same
               format produced by _a_n_s_i_t_a_p_e when reading  an  ansi
               'D' format tape.

       _A_n_s_i_t_a_p_e  will  not  copy  directories, character or block
       special files, symbolic links, sockets, or binary executa-
       bles.   Attempts to put these on tape will result in warn-
       ings, and they will be skipped completely.

FFIILLEESS
       /dev/rmt12



4th Berkeley Distribution April 10, 1985                        2








ANSITAPE(1)            BSD Reference Manual           ANSITAPE(1)


DDIIAAGGNNOOSSTTIICCSS
       A warning message will be generated when a record  exceeds
       the  maximum  record  length and the affected file will be
       truncated.

BBUUGGSS
       Ansitape quietly truncates names longer  than  17  charac-
       ters.
       Multivolume tapes can be read (provided no files cross the
       volume boundary) but not written.












































4th Berkeley Distribution April 10, 1985                        3





