.\" Copyright (c) 1983, 1990, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Robert Elz at The University of Melbourne.
.\" %sccs.include.redist.man%
.\"
.\"     @(#)quotactl.2	6.12 (Berkeley) %G%
.\"
.Dd 
.Dt QUOTACTL 2
.Os BSD 4.4
.Sh NAME
.Nm quotactl
.Nd manipulate filesystem quotas
.Sh SYNOPSIS
.Ft #include <ufs/quota.h>	/* for ufs quotas */
.Ft int
.Fn quotactl "const char *path" "int cmd" "int id" "char *addr"
.Sh DESCRIPTION
The
.Fn quotactl
call enables, disables and
manipulates filesystem quotas.
A quota control command
given by
.Fa cmd
operates on the given filename
.Fa path
for the given user
.Fa id .
The address of an optional command specific data structure,
.Fa addr ,
may be given; its interpretation
is discussed below with each command.
.Pp
Currently quotas are supported only for the ``ufs'' filesystem.
For ``ufs'',
a command is composed of a primary command (see below)
and a command type used to interpret the
.Fa id .
Types are supported for interpretation of user identifiers
and group identifiers.
The ``ufs'' specific commands are:
.Bl -tag -width Q_QUOTAON
.It Dv Q_QUOTAON
Enable disk quotas for the filesystem specified by
.Fa path .
The command type specifies the type of the quotas being enabled.
The
.Fa addr
argument specifies a file from which to take the quotas.
The quota file must exist;
it is normally created with the 
.Xr quotacheck 8
program.
The
.Fa id
argument is unused.
Only the super-user may turn quotas on.
.It Dv Q_QUOTAOFF
Disable disk quotas for the filesystem specified by
.Fa path .
The command type specifies the type of the quotas being disabled.
The
.Fa addr
and
.Fa id
arguments are unused.
Only the super-user may turn quotas off.
.It Dv Q_GETQUOTA
Get disk quota limits and current usage for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure (defined in 
.Ao Pa ufs/quota.h Ac ) .
.It Dv Q_SETQUOTA
Set disk quota limits for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure (defined in 
.Ao Pa ufs/quota.h Ac ) .
The usage fields of the
.Fa dqblk
structure are ignored.
This call is restricted to the super-user.
.It Dv Q_SETUSE
Set disk usage limits for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure (defined in
.Ao Pa ufs/quota.h Ac ) .
Only the usage fields are used.
This call is restricted to the super-user.
.It Dv Q_SYNC
Update the on-disk copy of quota usages.
The command type specifies which type of quotas are to be updated.
The
.Fa id
and
.Fa addr
parameters are ignored.
.El
.Sh RETURN VALUES
A successful call returns 0,
otherwise the value -1 is returned and the global variable
.Va errno
indicates the reason for the failure.
.Sh ERRORS
A
.Fn quotactl
call will fail if:
.Bl -tag -width ENAMETOOLONGAA
.It Bq Er EOPNOTSUPP
The kernel has not been compiled with the
.Dv QUOTA
option.
.It Bq Er EUSERS
The quota table cannot be expanded.
.It Bq Er EINVAL
.Fa Cmd
or the command type is invalid.
.It Bq Er EINVAL
A pathname contains a character with the high-order bit set.
.It Bq Er EACCES
In
.Dv Q_QUOTAON ,
the quota file is not a plain file.
.It Bq Er EACCES
Search permission is denied for a component of a path prefix.
.It Bq Er ENOTDIR
A component of a path prefix was not a directory.
.It Bq Er ENAMETOOLONG
A component of either pathname exceeded 255 characters,
or the entire length of either path name exceeded 1023 characters.
.It Bq Er ENOENT
A filename does not exist.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating a pathname.
.It Bq Er EROFS
In
.Dv Q_QUOTAON ,
the quota file resides on a read-only filesystem.
.It Bq Er EIO
An I/O error occurred while reading from or writing
to a file containing quotas.
.It Bq Er EFAULT
An invalid
.Fa addr
was supplied; the associated structure could not be copied in or out
of the kernel.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EPERM
The call was privileged and the caller was not the super-user.
.El
.Sh SEE ALSO
.Xr quota 1 ,
.Xr fstab 5 ,
.Xr edquota 8 ,
.Xr quotacheck 8 ,
.Xr quotaon 8 ,
.Xr repquota 8
.Sh BUGS
There should be some way to integrate this call with the resource
limit interface provided by
.Xr setrlimit 2
and
.Xr getrlimit 2 .
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.3 Reno .
