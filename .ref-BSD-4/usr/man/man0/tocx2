access(2) access: determine accessibility of file.
acct(2) acct: turn accounting on or off.
alarm(2) alarm: schedule signal after specified time.
brk(2) brk, sbrk, break: change core allocation.
chdir(2) chdir: change current working directory.
chmod(2) chmod: change mode of file.
chown(2) chown: change owner and group of a file.
close(2) close: close a file.
creat(2) creat: create a new file.
dup(2) dup, dup2: duplicate an open file descriptor.
exec(2) execl, execv, execle, execve, execlp, execvp, exec, exece, environ: execute a file.
exit(2) exit: terminate process.
fork(2) fork: spawn new process.
getpid(2) getpid: get process identification.
getuid(2) getuid, getgid, geteuid, getegid: get user and group identity.
intro(2) intro, errno: introduction to system calls and error numbers.
ioctl(2) ioctl, stty, gtty: control device.
kill(2) kill: send signal to a process.
killpg(2j) killpg: send signal to a process or a process group.
link(2) link: link to a file.
lseek(2) lseek, tell: move read/write pointer.
mknod(2) mknod: make a directory or a special file.
mount(2) mount, umount: mount or remove file system.
mpx(2) mpx: create and manipulate multiplexed files.
nice(2) nice: set program priority.
open(2) open: open for reading or writing.
pause(2) pause: stop until signal.
pipe(2) pipe: create an interprocess channel.
profil(2) profil: execution time profile.
ptrace(2) ptrace: process trace.
read(2) read: read from file.
reboot(2v) reboot: reboot system or halt processor.
setpgrp(2j) setpgrp, getpgrp: set/get process group.
setuid(2) setuid, setgid: set user and group ID.
signal(2) signal: catch or ignore signals.
sigsys(2j) sigsys: catch or ignore signals.
stat(2) stat, fstat: get file status.
stime(2) stime: set time.
sync(2) sync: update super-block.
syscall(2) syscall: indirect system call.
time(2) time, ftime: get date and time.
times(2) times: get process times.
umask(2) umask: set file creation mode mask.
unlink(2) unlink: remove directory entry.
utime(2) utime: set file times.
vadvise(2v) vadvise: give advice to paging system.
vfork(2v) vfork: spawn new process in a virtual memory efficient way.
vhangup(2v) vhangup: virtually ``hangup'' the current control terminal.
vlimit(2v) vlimit: control maximum system resource consumption.
vread(2v) vread: read virtually.
vswapon(2v) vswapon: add a swap device for interleaved paging/swapping.
vtimes(2v) vtimes: get information about resource utilization.
vwrite(2v) vwrite: write (virtually) to file.
wait(2) wait: wait for process to terminate.
wait3(2j) wait3: wait for process to terminate.
write(2) write: write on a file.
