.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"	@(#)qsort.3	6.4 (Berkeley) %G%
.\"
.TH QSORT 3  ""
.UC 4
.SH NAME
qsort \- quicker sort
.SH SYNOPSIS
.nf
.ft B
#include <stdlib.h>

void
qsort(void *base, size_t nmemb, size_t size,
.RS
.\" have to reset bold font
.ft B
int (*compar)(const void *, const void *));
.RE
.ft R
.fi
.SH DESCRIPTION
.I Qsort
is a modified partition-exchange sort, or quicksort.
.PP
The
.I qsort 
function sorts an array of
.I nmemb
objects, the initial member of which is pointed to by
.IR base .
The size of each object is specified by
.IR size .
.PP
The contents of the array are sorted in ascending order according to
a comparison function pointed to by
.IR compar ,
which is called with two arguments that point to the objects being
compared.
.PP
The comparison function must return an integer less than, equal to, or
greater than zero if the first argument is considered to be respectively
less than, equal to, or greater than the second.
.PP
.I Qsort
is
.B not
stable, that is, if two members compare as equal, their order in
the sorted array is undefined.
.PP
.I Qsort
is an implementation of C.A.R. Hoare's ``quicksort'' algorithm, a variant
of partition-exchange sorting; in particular, see D.E. Knuth's Algorithm Q.
.I Qsort
takes O N lg N average time.
.SH "RETURN VALUES"
.I Qsort 
returns no value.
.SH COMPATIBILITY
Previous versions of
.I qsort
did not permit the comparison routine to itself call
.IR qsort (3).
This is no longer true.
.SH "SEE ALSO"
sort(1), radixsort(3)
.sp
Hoare, C.A.R. [1962]. "Quicksort", The Computer Journal, 5:1, pp. 10-15.
.br
Knuth, D.E. [1968]. "The Art of Computer Programming Vol. 3: Sorting and
Searching", pp. 114-123.
.SH STANDARDS
.I Qsort
conforms to ANSI X3.159-1989 (``ANSI C'').
