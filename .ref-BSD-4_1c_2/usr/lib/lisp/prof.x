(File prof.l)
(Pcontinue-evaluation lambda funcallhook quote evalhook eq cond)
(Pevalhook* lambda quote Pfuncall-evalhook*)
(Pfuncallhook* lexpr quote Pfuncall-evalhook* cons |1-| + <& do minusp eq cond sub1 listify cdr arg let)
(Pfuncall-evalhook* lambda Pcontinue-evaluation ncons cons putprop |1+| rplacd cdr return caar eq null do assq get car setq symbolp dtpr and cond If let)
(cutatblank lambda |1+| substring return substringn eq =& = cond If >& > do)
(pctprint lambda * quotient patom progn msg)
(lesscdr lambda cdr greaterp >)
(totcallsort lambda alphalessp equal = lessp < cond If get let)
(prof-report lambda close cdar quote sort terpr cadr cutatblank If pctprint patom progn msg caddddar cadddar caddar cadar caar null cdr do outfile cond car let setq)
(prof-end lambda list sort cons caar cdar cdr + putprop get car null do terpr length patom progn msg *rset setq quote sstatus)
(prof-start lambda terpr patom progn msg *rset sstatus quote list gensym setq)
