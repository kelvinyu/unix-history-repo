.TH EC 4V "13 April 1982"
.UC  4
.SH NAME
ec \- 3Com 10 Mb/s Ethernet interface
.SH SYNOPSIS
.B "device ec0 at uba0 csr 161000 flags 0x4e000298 vector ecrint eccollide ecxint"
.SH DESCRIPTION
The
.I ec
interface provides access to a 10 Mb/s Ethernet network through
a 3com controller.
In configuring, the flags value is used to define the 
network to which the interface is attached.
The host's address
is discovered at boot time by reading it from the device's command
register.
.PP
The hardware has 32 kilobytes of dual-ported memory on the UNIBUS. 
This memory
is used for internal buffering by the board, and the interface code reads
the buffer contents directly through the UNIBUS.
.PP
The interface software implements an exponential backoff algorithm
when notified of a collision on the cable.  This algorithm utilizes
a 16-bit mask and the VAX-11's interval timer in calculating a series
of random backoff values.  The algorithm is as follows:
.TP
1.
Initialize the mask to be all 1's.
.TP
2.
If the mask is zero, 16 retries have been made and we give
up.
.TP
3.
Shift the mask left one bit and formulate a backoff by
masking the interval timer with the mask (this is actually
the two's complement of the value).
.TP
4.
Use the value calculated in step 3 to delay before retransmitting
the packet.  The delay is done in a software busy loop.
.PP
The interface handles the Internet protocol family,
with the interface address maintained in Internet format.
The three low-order bytes of the board's built-in Ethernet address
are used as the 24-bit Internet address, and the network number is
taken from the flags as described above.  The software assumes that
all Ethernet addresses on the network will have the same three high-order
bytes.
.SH DIAGNOSTICS
.BR "ec%d: send error" .
After 16 retransmissions using the
exponential backoff algorithm described above, the packet
was dropped.
.PP
.BR "ec%d: input error (offset=%d)" .
The hardware indicated an error
in reading a packet off the cable or an illegally sized packet.
The buffer offset value is printed for debugging purposes.
.PP
.BR "ec%d: can't handle af%d" .
The interface was handed
a message with addresses formatted in an unsuitable address
family; the packet was dropped.
.SH SEE ALSO
intro(4N), inet(4F)
.SH BUGS
The PUP protocol family should be added.
.PP
The hardware is not capable of talking to itself.  The software
implements local sending and broadcast by sending such packets to the
loop interface.  This is a kludge.
.PP
Backoff delays are done in a software busy loop.  This could degrade the
system if the network experiences frequent collisions.
.PP
A better mapping from Ethernet to Internet addresses is needed if one is
to mix controllers from different vendors on a network.
