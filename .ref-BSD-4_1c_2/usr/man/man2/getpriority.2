.TH GETPRIORITY 2 2/12/83
.SH NAME
getpriority, setpriority \- get/set program scheduling priority
.SH SYNOPSIS
.ft B
.nf
prio = getpriority(which, who)
int prio, which, who;
.PP
.ft B
setpriority(which, who, prio)
int which, who, prio;
.fi
.SH DESCRIPTION
The scheduling
priority of the process, process group, or user, as indicated by
.I which
and
.I who
is obtained with the
.I getpriority
call and set with the
.I setpriority
call.
.I Which
is one of:
.PP
.nf
.RS
.DT
PRIO_PROCESS	0	/* process */
PRIO_PGRP  	1		/* process group */
PRIO_USER  	2		/* user id */
.RE
.fi
.PP
and 
.I who
is interpreted relative to 
.I which
(a process identifier for PRIO_PROCESS, process group
identifier for PRIO_PGRP, and a user ID for PRIO_USER).
.I Prio
is a value in the range \-20 to 20.  The default priority is 0;
lower priorities cause more favorable scheduling.
.PP
The
.I getpriority
call returns the highest priority (lowest numerical value)
enjoyed by any of the specified processes.  The
.I setpriority
call sets the priorities of all of the specified processes
to the specified value.  Only the super-user may lower priorities.
.SH "RETURN VALUE
Since
.I getpriority
can legitimately return the value \-1, it is necessary
to check the external variable \fIerrno\fP, which
is set to an non-zero error code when there is an error to determine
if a \-1 is an error or a legitimate value.
The
.I setpriority
call returns 0 if there is no error, or
\-1 if there is.
.SH ERRORS
???
.SH "SEE ALSO"
nice(1), fork(2)
