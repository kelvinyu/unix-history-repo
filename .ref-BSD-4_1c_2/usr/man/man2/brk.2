.TH BRK 2 2/12/83
.SH NAME
brk, sbrk \- change data segment size
.SH SYNOPSIS
.nf
.ft B
caddr_t brk(addr)
caddr_t addr;
.PP
.ft B
caddr_t sbrk(incr)
int incr;
.fi
.SH DESCRIPTION
.I Brk
sets the system's idea of the lowest data segment 
location not used by the program (called the break)
to
.I addr
(rounded up to the next multiple of the system's page size).
Locations not less than
.I addr
and below the stack pointer
are not in the address space and will thus
cause a memory violation if accessed.
.PP
In the alternate function
.IR sbrk ,
.I incr
more bytes are added to the
program's data space and a pointer to the
start of the new area is returned.
.PP
When a program begins execution via
.I exec
the break is set at the
highest location defined by the program
and data storage areas.
Ordinarily, therefore, only programs with growing
data areas need to use
.IR sbrk .
.PP
The
.IR setrlimit (2)
system call may be used to determine
the maximum permissible size of the
.I data
segment;
it will not be possible to set the break
beyond the
.I rlim_max
value returned from a call to
.IR setrlimit ,
e.g. \*(lqetext + rlp\(->rlim_max.\*(rq
(See
.IR end (3)
for the definition of
.IR etext .)
.SH "RETURN VALUE
Zero is returned if the 
.I brk
could be set;
\-1 if the program requests more
memory than the system limit.
.I Sbrk
returns \-1 if the break could not be set.
.SH ERRORS
???
.SH "SEE ALSO"
exec(2), setrlimit(2), malloc(3), end(3)
.SH BUGS
Setting the break may fail due to a temporary lack of
swap space.  It is not possible to distinguish this
from a failure caused by exceeding the maximum size of
the data segment without consulting 
.IR getrlimit .
