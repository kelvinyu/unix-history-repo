.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)sigblock.2	6.4 (Berkeley) %G%
.\"
.TH SIGBLOCK 2 ""
.UC 5
.SH NAME
sigblock \- block signals
.SH SYNOPSIS
.nf
.B #include <signal.h>

.B sigblock(mask);
.B int mask;

.B mask = sigmask(signum)
.SH DESCRIPTION
.I Sigblock
causes the signals specified in
.I mask
to be added to the set of signals currently
being blocked from delivery.
Signals are blocked if the
corresponding bit in 
.I mask
is a 1; the macro
.I sigmask
is provided to construct the mask for a given
.IR signum .
.PP
It is not possible to block SIGKILL,
SIGSTOP, or SIGCONT;  this restriction is silently
imposed by the system.
.SH "RETURN VALUE
The previous set of masked signals is returned.
.SH "SEE ALSO"
kill(2), sigvec(2), sigsetmask(2)
