


BITSTRING(3)		      1990		     BITSTRING(3)



NNAAMMEE
     bit_alloc, bit_clear, bit_decl, bit_ffs, bit_nclear,
     bit_nset, bit_set, bitstr_size, bit_test - bit-string mani-
     pulation macros

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<bbiittssttrriinngg..hh>>

     nnaammee == bbiitt__aalllloocc((nnbbiittss))
     bbiittssttrr__tt **nnaammee;;
     iinntt nnbbiittss;;

     bbiitt__ddeeccll((nnaammee,, nnbbiittss))
     bbiittssttrr__tt nnaammee;;
     iinntt nnbbiittss;;

     bbiitt__cclleeaarr((nnaammee,, bbiitt))
     bbiittssttrr__tt nnaammee;;
     iinntt bbiitt;;

     bbiitt__ffffcc((nnaammee,, nnbbiittss,, vvaalluuee))
     bbiittssttrr__tt nnaammee;;
     iinntt nnbbiittss,, **vvaalluuee;;

     bbiitt__ffffss((nnaammee,, nnbbiittss,, vvaalluuee))
     bbiittssttrr__tt nnaammee;;
     iinntt nnbbiittss,, **vvaalluuee;;

     bbiitt__nncclleeaarr((nnaammee,, ssttaarrtt,, ssttoopp))
     bbiittssttrr__tt nnaammee;;
     iinntt ssttaarrtt,, ssttoopp;;

     bbiitt__nnsseett((nnaammee,, ssttaarrtt,, ssttoopp))
     bbiittssttrr__tt nnaammee;;
     iinntt ssttaarrtt,, ssttoopp;;

     bbiitt__sseett((nnaammee,, bbiitt))
     bbiittssttrr__tt nnaammee;;
     iinntt bbiitt;;

     bbiittssttrr__ssiizzee((nnbbiittss))
     iinntt nnbbiittss;;

     bbiitt__tteesstt((nnaammee,, bbiitt))
     bbiittssttrr__tt nnaammee;;
     iinntt bbiitt;;

DDEESSCCRRIIPPTTIIOONN
     These macros operate on strings of bits.

     _B_i_t__a_l_l_o_c returns a pointer of type _b_i_t_s_t_r__t * to sufficient
     space to store _n_b_i_t_s bits, or NULL if no space is available.



Printed 7/27/90               June				1






BITSTRING(3)		      1990		     BITSTRING(3)



     _B_i_t__d_e_c_l is a macro for allocating sufficient space to store
     _n_b_i_t_s bits on the stack.

     _B_i_t_s_t_r__s_i_z_e returns the number of elements of type _b_i_t_s_t_r__t
     necessary to store _n_b_i_t_s bits.  This is useful for copying
     bit strings.

     _B_i_t__c_l_e_a_r and _b_i_t__s_e_t clear or set the zero-based numbered
     bit _b_i_t, in the bit string _n_a_m_e.

     _B_i_t__n_s_e_t and _b_i_t__n_c_l_e_a_r set or clear the zero-based numbered
     bits from _s_t_a_r_t to _s_t_o_p in the bit string _n_a_m_e.

     _B_i_t__t_e_s_t evaluates to zero if the zero-based numbered bit
     _b_i_t of bit string _n_a_m_e is set, and non-zero otherwise.

     _B_i_t__f_f_s stores in the location referenced by _v_a_l_u_e the
     zero-based number of the first bit set in the array of _n_b_i_t_s
     bits referenced by _n_a_m_e.  If no bits are set, the location
     referenced by _v_a_l_u_e is set to -1.

     _B_i_t__f_f_c stores in the location referenced by _v_a_l_u_e the
     zero-based number of the first bit not set in the array of
     _n_b_i_t_s bits referenced by _n_a_m_e.  If all bits are set, the
     location referenced by _v_a_l_u_e is set to -1.

     The arguments to these macros are evaluated only once and
     may safely have side effects.

EEXXAAMMPPLLEE
	  #include <limits.h>
	  #include <bitstring.h>

	  #define   LPR_BUSY_BIT	0
	  #define   LPR_FORMAT_BIT	1
	  #define   LPR_DOWNLOAD_BIT	2
	  #define   LPR_AVAILABLE_BIT	9
	  #define   LPR_MAX_BITS	10

	  make_lpr_available()
	  {
	       bitstr_t bit_decl(bitlist, LPR_MAX_BITS);
	       ...
	       bit_nclear(bitlist, 0, LPR_MAX_BITS - 1);
	       ...
	       if (!bit_test(bitlist, LPR_BUSY_BIT)) {
		    bit_clear(bitlist, LPR_FORMAT_BIT);
		    bit_clear(bitlist, LPR_DOWNLOAD_BIT);
		    bit_set(bitlist, LPR_AVAILABLE_BIT);
	       }
	  }




Printed 7/27/90               June				2






BITSTRING(3)		      1990		     BITSTRING(3)



SSEEEE AALLSSOO
     malloc(3)





















































Printed 7/27/90               June				3



