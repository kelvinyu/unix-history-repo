


PERROR(3)		      1990			PERROR(3)



NNAAMMEE
     perror, strerror, sys_errlist, sys_nerr - system error mes-
     sages

SSYYNNOOPPSSIISS
     ppeerrrroorr((ssttrriinngg))
     cchhaarr **ssttrriinngg;;

     cchhaarr **
     ssttrreerrrroorr((eerrrrnnuumm))
     iinntt eerrrrnnuumm;;

     eexxtteerrnn iinntt eerrrrnnoo,, ssyyss__nneerrrr;;
     eexxtteerrnn cchhaarr **ssyyss__eerrrrlliisstt[[]];;

DDEESSCCRRIIPPTTIIOONN
     _P_e_r_r_o_r produces a short error message on the standard error
     file describing the last error encountered during a call to
     the system from a C program.  If _s_t_r_i_n_g is non-NULL, it is
     printed, followed by a colon, followed by a space, followed
     by the message and a new-line.  Otherwise, just the message
     and the new-line are printed.  Most usefully, the argument
     string is the name of the program which incurred the error.
     The error number is taken from the external variable _e_r_r_n_o
     (see _i_n_t_r_o(2)), which is set when errors occur but not
     cleared when non-erroneous calls are made.

     To simplify variant formatting of messages, the _s_t_r_e_r_r_o_r
     function returns a pointer to the error message string
     mapped to the error number _e_r_r_n_u_m.

     The message strings can be accessed directly using the
     external character array _s_y_s__e_r_r_l_i_s_t.  _S_y_s__n_e_r_r is the total
     number of messages in the array.  The use of these variables
     is deprecated; _s_t_r_e_r_r_o_r should be used instead.

SSEEEE AALLSSOO
     intro(2)

















Printed 7/27/90               June				1



