


SYSLOG(3)		      1990			SYSLOG(3)



NNAAMMEE
     syslog, openlog, closelog, setlogmask, vsyslog - control
     system log

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyysslloogg..hh>>

     ooppeennlloogg((iiddeenntt,, llooggoopptt,, ffaacciilliittyy))
     cchhaarr **iiddeenntt;;

     ssyysslloogg((pprriioorriittyy,, mmeessssaaggee,, ppaarraammeetteerrss ...... ))
     iinntt pprriioorriittyy;;
     cchhaarr **mmeessssaaggee;;

     ##iinncclluuddee <<vvaarraarrggss..hh>>
     vvssyysslloogg((pprriioorriittyy,, mmeessssaaggee,, aarrggss))
     iinntt pprriioorriittyy;;
     cchhaarr **mmeessssaaggee;;
     vvaa__lliisstt aarrggss;;

     cclloosseelloogg(())

     sseettllooggmmaasskk((mmaasskkpprrii))

DDEESSCCRRIIPPTTIIOONN
     _S_y_s_l_o_g arranges to write _m_e_s_s_a_g_e onto the system log main-
     tained by _s_y_s_l_o_g_d(8).  The message is tagged with _p_r_i_o_r_i_t_y.
     The message looks like a _p_r_i_n_t_f(3) string except that %%mm is
     replaced by the current error message (as referenced by
     _e_r_r_n_o).  A trailing newline is added if needed.  An alter-
     nate form, in which the arguments have already been captured
     using the variable-length argument facilities of _v_a_r_a_r_g_s(3),
     is available under the name _v_s_y_s_l_o_g.

     This message will be read by _s_y_s_l_o_g_d(8) and written to the
     system console, log files, or forwarded to _s_y_s_l_o_g_d on
     another host as appropriate.

     Priorities are encoded as a _f_a_c_i_l_i_t_y and a _l_e_v_e_l.	The
     facility describes the part of the system generating the
     message.  The level is selected from an ordered list:

     LOG_ALERT
	  A condition that should be corrected immediately, such
	  as a corrupted system database.

     LOG_CRIT
	  Critical conditions, e.g., hard device errors.

     LOG_DEBUG
	  Messages that contain information normally of use only
	  when debugging a program.



Printed 7/27/90               June				1






SYSLOG(3)		      1990			SYSLOG(3)



     LOG_EMERG
	  A panic condition.  This is normally broadcast to all
	  users.

     LOG_ERR
	  Errors.

     LOG_INFO
	  Informational messages.

     LOG_NOTICE
	  Conditions that are not error conditions, but should
	  possibly be handled specially.

     LOG_WARNING
	  Warning messages.

     If _s_y_s_l_o_g cannot pass the message to _s_y_s_l_o_g_d, it will
     attempt to write the message to the console
     (``/dev/console'') if the LOG_CONS option is set (see
     below).

     If special processing is needed, _o_p_e_n_l_o_g can be called to
     initialize the log file.  The parameter _i_d_e_n_t is a string
     that is prepended to every message.  _L_o_g_o_p_t is a bit field
     indicating logging options.  Current values for _l_o_g_o_p_t are:

     LOG_CONS
	  If unable to send the message to _s_y_s_l_o_g_d, write it to
	  the console.

     LOG_NDELAY
	  Open the connection to _s_y_s_l_o_g_d immediately.  Normally
	  the open is delayed until the first message is logged.
	  Useful for programs that need to manage the order in
	  which file descriptors are allocated.

     LOG_PERROR
	  Write the message to stderr as well to the system log.

     LOG_PID
	  Log the process id with each message: useful for iden-
	  tifying instantiations of daemons.

     The _f_a_c_i_l_i_t_y parameter encodes a default facility to be
     assigned to all messages that do not have an explicit facil-
     ity encoded:

     LOG_AUTH
	  The authorization system: _l_o_g_i_n(1), _s_u(1), _g_e_t_t_y(8),
	  etc.




Printed 7/27/90               June				2






SYSLOG(3)		      1990			SYSLOG(3)



     LOG_CRON
	  The clock daemon.

     LOG_DAEMON
	  System daemons, such as _f_t_p_d(8), _r_o_u_t_e_d(8), etc, that
	  are not provided for explicitly by other facilities.

     LOG_KERN
	  Messages generated by the kernel.  These cannot be gen-
	  erated by any user processes.

     LOG_LPR
	  The line printer spooling system: _l_p_r(1), _l_p_c(8),
	  _l_p_d(8), etc.

     LOG_MAIL
	  The mail system.

     LOG_NEWS
	  The network news system.

     LOG_SYSLOG
	  Messages generated internally by _s_y_s_l_o_g_d(8).

     LOG_USER
	  Messages generated by random user processes.	This is
	  the default facility identifier if none is specified.

     LOG_UUCP
	  The uucp system.

     LOG_LOCAL0
	  Reserved for local use.  Similarly for LOG_LOCAL1
	  through LOG_LOCAL7.

     _C_l_o_s_e_l_o_g can be used to close the log file.

     _S_e_t_l_o_g_m_a_s_k sets the log priority mask to _m_a_s_k_p_r_i and returns
     the previous mask.  Calls to _s_y_s_l_o_g with a priority not set
     in _m_a_s_k_p_r_i are rejected.  The mask for an individual prior-
     ity _p_r_i is calculated by the macro LOG_MASK(_p_r_i); the mask
     for all priorities up to and including _t_o_p_p_r_i is given by
     the macro LOG_UPTO(_t_o_p_p_r_i).  The default allows all priori-
     ties to be logged.

EEXXAAMMPPLLEESS
     syslog(LOG_ALERT, "who: internal error 23");

     openlog("ftpd", LOG_PID, LOG_DAEMON);
     setlogmask(LOG_UPTO(LOG_ERR));
     syslog(LOG_INFO, "Connection from host %d", CallingHost);




Printed 7/27/90               June				3






SYSLOG(3)		      1990			SYSLOG(3)



     syslog(LOG_INFO|LOG_LOCAL2, "foobar error: %m");

SSEEEE AALLSSOO
     logger(1), syslogd(8)



















































Printed 7/27/90               June				4



