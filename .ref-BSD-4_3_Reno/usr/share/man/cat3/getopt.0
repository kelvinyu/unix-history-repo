


GETOPT(3)		      1990			GETOPT(3)



NNAAMMEE
     getopt - get option letter from argv

SSYYNNOOPPSSIISS
     iinntt ggeettoopptt((aarrggcc,, aarrggvv,, ooppttssttrriinngg))
     iinntt aarrggcc;;
     cchhaarr ****aarrggvv;;
     cchhaarr **ooppttssttrriinngg;;

     eexxtteerrnn cchhaarr **ooppttaarrgg;;
     eexxtteerrnn iinntt ooppttiinndd;;
     eexxtteerrnn iinntt oopptteerrrr;;

DDEESSCCRRIIPPTTIIOONN
     _G_e_t_o_p_t returns the next option letter in _a_r_g_v that matches a
     letter in _o_p_t_s_t_r_i_n_g.  _O_p_t_s_t_r_i_n_g is a string of recognized
     option letters; if a letter is followed by a colon, the
     option is expected to have an argument that may or may not
     be separated from it by white space.

     On return from _g_e_t_o_p_t, optarg is set to point to the start
     of any option argument.  _O_p_t_i_n_d contains the _a_r_g_v index of
     the next argument to be processed.

     _O_p_t_e_r_r and _o_p_t_i_n_d are both initialized to 1.  In order to
     use _g_e_t_o_p_t to evaluate multiple sets of arguments, or to
     evaluate a single set of arguments multiple times, _o_p_t_i_n_d
     must be initialized to the number of argv entries to be
     skipped in each evaluation.

     When all options have been processed (i.e., up to the first
     non-option argument), _g_e_t_o_p_t returns EOF.	The special
     option ``--'' may be used to delimit the end of the options;
     EOF will be returned, and the ``--'' will be skipped.

DDIIAAGGNNOOSSTTIICCSS
     _G_e_t_o_p_t prints an error message on _s_t_d_e_r_r and returns a ques-
     tion mark (``?'') when it encounters an option letter not
     included in _o_p_t_s_t_r_i_n_g, or it encounters an option that
     requires an argument which is not supplied.  Setting _o_p_t_e_r_r
     to a zero will disable these error messages.

EEXXAAMMPPLLEE
	  extern char *optarg;
	  extern int optind;
	  int bflag, ch, fd;

	  bflag = 0;
	  while ((ch = getopt(argc, argv, "bf:")) != EOF)
	       switch(ch) {
	       case 'b':
		    bflag = 1;



Printed 7/27/90               June				1






GETOPT(3)		      1990			GETOPT(3)



		    break;
	       case 'f':
		    if ((fd = open(optarg, O_RDONLY, 0)) < 0) {
			 (void)fprintf(stderr,
			     "myname: unable to read file %s.\n", optarg);
			 exit(1);
		    }
		    break;
	       case '?':
	       default:
		    usage();
	       }
	  argc -= optind;
	  argv += optind;

BBUUGGSS
     Option arguments are allowed to begin with ``-''; this is
     reasonable but reduces the amount of error checking possi-
     ble.

     A single dash (``-'') may be specified as an character in
     _o_p_t_s_t_r_i_n_g, however it should nneevveerr have an argument associ-
     ated with it.  This allows _g_e_t_o_p_t to be used with programs
     that expect ``-'' as an option flag.  This practice is
     wrong, and should not be used in any current development.
     It is provided for backward compatibility oonnllyy.  By default,
     a single dash causes _g_e_t_o_p_t to return EOF.  This is, we
     believe, compatible with System V.

     It is also possible to handle digits as option letters.
     This allows _g_e_t_o_p_t to be used with programs that expect a
     number (``-3'') as an option.  This practice is wrong, and
     should not be used in any current development.  It is pro-
     vided for backward compatibility oonnllyy.  The following code
     fragment works fairly well.

	  int length;
	  char *p;

	  while ((c = getopt(argc, argv, "0123456789")) != EOF)
	       switch (c) {
	       case '0': case '1': case '2': case '3': case '4':
	       case '5': case '6': case '7': case '8': case '9':
		    p = argv[optind - 1];
		    if (p[0] == '-' && p[1] == ch && !p[2])
			 length = atoi(++p);
		    else
			 length = atoi(argv[optind] + 1);
		    break;
	       }
	  }




Printed 7/27/90               June				2



