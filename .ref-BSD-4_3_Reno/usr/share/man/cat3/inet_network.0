


INET(3)                       1990			  INET(3)



NNAAMMEE
     inet_aton, inet_addr, inet_network, inet_ntoa,
     inet_makeaddr, inet_lnaof, inet_netof - Internet address
     manipulation routines

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ssoocckkeett..hh>>
     ##iinncclluuddee <<nneettiinneett//iinn..hh>>
     ##iinncclluuddee <<aarrppaa//iinneett..hh>>

     iinntt iinneett__aattoonn((ccpp,, ppiinn))
     cchhaarr **ccpp;;
     ssttrruucctt iinn__aaddddrr **ppiinn;;

     uunnssiiggnneedd lloonngg iinneett__aaddddrr((ccpp))
     cchhaarr **ccpp;;

     uunnssiiggnneedd lloonngg iinneett__nneettwwoorrkk((ccpp))
     cchhaarr **ccpp;;

     cchhaarr **iinneett__nnttooaa((iinn))
     ssttrruucctt iinn__aaddddrr iinn;;

     ssttrruucctt iinn__aaddddrr iinneett__mmaakkeeaaddddrr((nneett,, llnnaa))
     iinntt nneett,, llnnaa;;

     uunnssiiggnneedd lloonngg iinneett__llnnaaooff((iinn))
     ssttrruucctt iinn__aaddddrr iinn;;

     uunnssiiggnneedd lloonngg iinneett__nneettooff((iinn))
     ssttrruucctt iinn__aaddddrr iinn;;

DDEESSCCRRIIPPTTIIOONN
     The routines _i_n_e_t__a_t_o_n, _i_n_e_t__a_d_d_r and _i_n_e_t__n_e_t_w_o_r_k interpret
     character strings representing numbers expressed in the
     Internet standard "." notation.  The _i_n_e_t__a_t_o_n routine
     interprets the specified character string as an Internet
     address, placing the address into the structure provided.
     It returns 1 if the string was successfully interpreted, or
     0 if the string is invalid.  The _i_n_e_t__a_d_d_r and _i_n_e_t__n_e_t_w_o_r_k
     functions return numbers suitable for use as Internet
     addresses and Internet network numbers, respectively.  The
     routine _i_n_e_t__n_t_o_a takes an Internet address and returns an
     ASCII string representing the address in "." notation.  The
     routine _i_n_e_t__m_a_k_e_a_d_d_r takes an Internet network number and a
     local network address and constructs an Internet address
     from it.  The routines _i_n_e_t__n_e_t_o_f and _i_n_e_t__l_n_a_o_f break apart
     Internet host addresses, returning the network number and
     local network address part, respectively.

     All Internet addresses are returned in network order (bytes
     ordered from left to right).  All network numbers and local



Printed 7/27/90               June				1






INET(3)                       1990			  INET(3)



     address parts are returned as machine format integer values.

IINNTTEERRNNEETT AADDDDRREESSSSEESS
     Values specified using the "." notation take one of the fol-
     lowing forms:
	  a.b.c.d
	  a.b.c
	  a.b
	  a
     When four parts are specified, each is interpreted as a byte
     of data and assigned, from left to right, to the four bytes
     of an Internet address.  Note that when an Internet address
     is viewed as a 32-bit integer quantity on the VAX the bytes
     referred to above appear as "d.c.b.a".  That is, VAX bytes
     are ordered from right to left.

     When a three part address is specified, the last part is
     interpreted as a 16-bit quantity and placed in the right-
     most two bytes of the network address.  This makes the three
     part address format convenient for specifying Class B net-
     work addresses as "128.net.host".

     When a two part address is supplied, the last part is inter-
     preted as a 24-bit quantity and placed in the right most
     three bytes of the network address.  This makes the two part
     address format convenient for specifying Class A network
     addresses as "net.host".

     When only one part is given, the value is stored directly in
     the network address without any byte rearrangement.

     All numbers supplied as "parts" in a "." notation may be
     decimal, octal, or hexadecimal, as specified in the C
     language (i.e., a leading 0x or 0X implies hexadecimal; oth-
     erwise, a leading 0 implies octal; otherwise, the number is
     interpreted as decimal).

SSEEEE AALLSSOO
     gethostbyname(3), getnetent(3), hosts(5), networks(5),

DDIIAAGGNNOOSSTTIICCSS
     The constant IINNAADDDDRR__NNOONNEE is returned by _i_n_e_t__a_d_d_r and
     _i_n_e_t__n_e_t_w_o_r_k for malformed requests.

BBUUGGSS
     The value INADDR_NONE (0xffffffff) is a valid broadcast
     address, but _i_n_e_t__a_d_d_r cannot return that value without
     indicating failure.  The newer _i_n_e_t__a_t_o_n function does not
     share this problem.  The problem of host byte ordering
     versus network byte ordering is confusing.  The string
     returned by _i_n_e_t__n_t_o_a resides in a static memory area.
     Inet_addr should return a struct in_addr.



Printed 7/27/90               June				2



