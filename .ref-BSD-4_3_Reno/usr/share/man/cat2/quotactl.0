


QUOTACTL(2)		      1990		      QUOTACTL(2)



NNAAMMEE
     quotactl - manipulate disk quotas

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uuffss//qquuoottaa..hh>>   /* _f_o_r ``_u_f_s'' _q_u_o_t_a_s */

     qquuoottaaccttll((ppaatthh,, ccmmdd,, iidd,, aaddddrr))
     cchhaarr **ppaatthh;;
     iinntt ccmmdd,, iidd;;
     cchhaarr **aaddddrr;;

DDEESSCCRRIIPPTTIIOONN
     The _q_u_o_t_a_c_t_l call is used to enable and disable quotas and
     to manipulate disk quotas for filesystems on which quotas
     have been enabled.  _P_a_t_h is the path name of any file within
     the mounted filesystem to which the quota control command is
     to be applied.  The _c_m_d parameter indicates a command to be
     applied to the _i_d.  _A_d_d_r is the address of an optional, com-
     mand specific, data structure that is copied in or out of
     the system.  The interpretation of _a_d_d_r is given with each
     command.

     Currently quotas are supported only for the ``ufs'' filesys-
     tem.  For ``ufs'', a command is composed of a primary com-
     mand (see below) and a command type that is used to inter-
     pret the _i_d.  Types are supported for interpretation of user
     identifiers and group identifiers.  The ``ufs'' specific
     commands are:

     Q_QUOTAON
	  Enable disk quotas for the filesystem specified by
	  _p_a_t_h.  The command type specifies the type of the quo-
	  tas being enabled.  The _a_d_d_r argument specifies a file
	  from which to take the quotas.  The quota file must
	  exist; it is normally created with the _q_u_o_t_a_c_h_e_c_k(8)
	  program.  The _i_d argument is unused.	Only the super-
	  user may turn quotas on.

     Q_QUOTAOFF
	  Disable disk quotas for the filesystem specified by
	  _p_a_t_h . The command type specifies the type of the quo-
	  tas being disabled.  The _a_d_d_r and _i_d arguments are
	  unused.  Only the super-user may turn quotas off.

     Q_GETQUOTA
	  Get disk quota limits and current usage for the user or
	  group (as determined by the command type) with identif-
	  ier _i_d.  _A_d_d_r is a pointer to a struct dqblk structure
	  (defined in <_u_f_s/_q_u_o_t_a._h>).

     Q_SETQUOTA
	  Set disk quota limits for the user or group (as



Printed 7/27/90               June				1






QUOTACTL(2)		      1990		      QUOTACTL(2)



	  determined by the command type) with identifier _i_d.
	  _A_d_d_r is a pointer to a struct dqblk structure (defined
	  in <_u_f_s/_q_u_o_t_a._h>).  The usage fields of the dqblk
	  structure are ignored.  This call is restricted to the
	  super-user.

     Q_SETUSE
	  Set disk usage limits for the user or group (as deter-
	  mined by the command type) with identifier _i_d.  _A_d_d_r is
	  a pointer to a struct dqblk structure (defined in
	  <_u_f_s/_q_u_o_t_a._h>).  Only the usage fields are used.  This
	  call is restricted to the super-user.

     Q_SYNC
	  Update the on-disk copy of quota usages.  The command
	  type specifies which type of quotas are to be updated.
	  The _i_d and _a_d_d_r parameters are ignored.

RREETTUURRNN VVAALLUUEE
     A successful call returns 0, otherwise the value -1 is
     returned and the global variable _e_r_r_n_o indicates the reason
     for the failure.

EERRRROORRSS
     A _q_u_o_t_a_c_t_l call will fail when one of the following occurs:

     [EOPNOTSUPP]   The kernel has not been compiled with the
		    QUOTA option.

     [EUSERS]	    The quota table cannot be expanded.

     [EINVAL]	    _C_m_d or the command type is invalid.

     [EINVAL]	    A pathname contains a character with the
		    high-order bit set.

     [EACCES]	    In Q_QUOTAON, the quota file is not a plain
		    file.

     [EACCES]	    Search permission is denied for a component
		    of a path prefix.

     [ENOTDIR]	    A component of a path prefix is not a direc-
		    tory.

     [ENAMETOOLONG] A component of either pathname exceeded 255
		    characters, or the entire length of either
		    path name exceeded 1023 characters.

     [ENOENT]	    A filename does not exist.

     [ELOOP]	    Too many symbolic links were encountered in



Printed 7/27/90               June				2






QUOTACTL(2)		      1990		      QUOTACTL(2)



		    translating a pathname.

     [EROFS]	    In Q_QUOTAON, the quota file resides on a
		    read-only filesystem.

     [EIO]	    An I/O error occurred while reading from or
		    writing to a file containing quotas.

     [EFAULT]	    An invalid _a_d_d_r is supplied; the associated
		    structure could not be copied in or out of
		    the kernel.

     [EFAULT]	    _P_a_t_h points outside the process's allocated
		    address space.

     [EPERM]	    The call is privileged and the caller was not
		    the super-user.

SSEEEE AALLSSOO
     quota(1), fstab(5), edquota(8), quotacheck(8), quotaon(8),
     repquota(8)

BBUUGGSS
     There should be some way to integrate this call with the
     resource limit interface provided by _s_e_t_r_l_i_m_i_t(2) and
     _g_e_t_r_l_i_m_i_t(2).





























Printed 7/27/90               June				3



