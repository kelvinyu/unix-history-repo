


ISO(4F)                       1990			  ISO(4F)



NNAAMMEE
     iso - ISO protocol family

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
     ##iinncclluuddee <<nneettiissoo//iissoo..hh>>

DDEESSCCRRIIPPTTIIOONN
     The ISO protocol family is a collection of protocols that
     uses the ISO address format.  The ISO family provides proto-
     col support for the SOCK_SEQPACKET abstraction through the
     TP protocol (ISO 8073), for the SOCK_DGRAM abstraction
     through the connectionless transport protocol (ISO 8602),
     and for the SOCK_RAW abstraction by providing direct access
     (for debugging) to the CLNP (ISO 8473) network layer proto-
     col.

AADDDDRREESSSSIINNGG
     ISO addresses are based upon ISO 8348/AD2, "Addendum to the
     Network Service Definition Covering Network Layer Address-
     ing."

     Sockets bound to the OSI protocol family use the following
     address structure:

     struct iso_addr {
	  u_char    isoa_len;	   /* length, not including this byte */
	  char isoa_genaddr[20];   /* general opaque address */
     };

     struct sockaddr_iso {
	  u_char    siso_len;	   /* size of this sockaddr */
	  u_char    siso_family;	/* addressing domain, AF_ISO */
	  u_char    siso_plen;		/* presentation selector length */
	  u_char    siso_slen;		/* session selector length */
	  u_char    siso_tlen;		/* transport selector length */
	  struct    iso_addr siso_addr; /* network address */
	  u_char    siso_pad[6];	/* space for gosip v2 SELs */
     };
     #define siso_nlen siso_addr.isoa_len
     #define siso_data siso_addr.isoa_genaddr


     The fields of this structure are:

     _s_i_s_o__l_e_n: Length of the entire address structure, in bytes,
	       which may grow to be longer than the 32 bytes show
	       above.

     _s_i_s_o__f_a_m_i_l_y:
	       Identifies the domain: AF_ISO.




Printed 7/27/90                May				1






ISO(4F)                       1990			  ISO(4F)



     _s_i_s_o__t_l_e_n:
	       Length of the transport selector.

     _s_i_s_o__s_l_e_n:
	       Length of the session selector.	This is not
	       currently supported by the kernel and is provided
	       as a convenience for user level programs.

     _s_i_s_o__p_l_e_n:
	       Length of the presentation selector.  This is not
	       currently supported by the kernel and is provided
	       as a convenience for user level programs.

     _s_i_s_o__a_d_d_r:
	       The network part of the address, described below.

     TTRRAANNSSPPOORRTT AADDDDRREESSSSIINNGG

     An ISO transport address is similar to an Internet address
     in that it contains a network-address portion and a portion
     that the transport layer uses to multiplex its services
     among clients.  In the Internet domain, this portion of the
     address is called a _p_o_r_t.	In the ISO domain, this is called
     a _t_r_a_n_s_p_o_r_t _s_e_l_e_c_t_o_r (also known at one time as a _t_r_a_n_s_p_o_r_t
     _s_u_f_f_i_x).  While ports are always 16 bits, transport selec-
     tors may be of (almost) arbitrary size.

     Since the C language does not provide conveninent variable
     length structures, we have separated the selector lengths
     from the data themselves.	The network address and various
     selectors are stored contiguously, with the network address
     first, then the transport selector, and so on.  Thus, if you
     had a nework address of less then 20 bytes, the transport
     selector would encroach on space normally reserved for the
     network address.

     NNEETTWWOORRKK AADDDDRREESSSSIINNGG..
     ISO network addresses are limited to 20 bytes in length.
     ISO network addresses can take any format.

PPRROOTTOOCCOOLLSS
     The ARGO 1.0 implementation of the ISO protocol family
     comprises the Connectionless-Mode Network Protocol (CLNP),
     and the Transport Protocol (TP), classes 4 and 0, and X.25.
     TP is used to support the SOCK_SEQPACKET abstraction.  A raw
     interface to CLNP is available by creating an ISO socket of
     type SOCK_RAW.  This is used for CLNP debugging only.

SSEEEE AALLSSOO
     tp(4), clnp(4), cltp(4)





Printed 7/27/90                May				2



