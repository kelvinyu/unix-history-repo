


UNIFDEF(1)		      1988		       UNIFDEF(1)



NNAAMMEE
     unifdef - remove ifdef'ed lines

SSYYNNOOPPSSIISS
     uunniiffddeeff [ --tt --ll --cc --DD_s_y_m --UU_s_y_m --iiDD_s_y_m --iiDD_s_y_m ] ...  [ file ]

DDEESSCCRRIIPPTTIIOONN
     _U_n_i_f_d_e_f is useful for removing ifdef'ed lines from a file
     while otherwise leaving the file alone.  _U_n_i_f_d_e_f acts on
     #ifdef, #ifndef, #else, and #endif lines, and it knows only
     enough about C to know when one of these is inactive because
     it is inside a comment, or a single or double quote.  Pars-
     ing for quotes is very simplistic: when it finds an open
     quote, it ignores everything (except escaped quotes) until
     it finds a close quote, and it will not complain if it gets
     to the end of a line and finds no backslash for continua-
     tion.

     If you want to use _u_n_i_f_d_e_f for plain text (not C code), use
     the --tt option, which disables this parsing for C comments
     and quotes.

     You specify which symbols you want defined (--DD_s_y_m) or unde-
     fined (--UU_s_y_m) and the lines inside those ifdefs will be
     copied to the output or removed as appropriate.  The ifdef,
     ifndef, else, and endif lines associated with _s_y_m will also
     be removed.  Ifdefs involving symbols you don't specify and
     ``#if'' control lines are untouched and copied out along
     with their associated ifdef, else, and endif lines.  If an
     ifdef X occurs nested inside another ifdef X, then the
     inside ifdef is treated as if it were an unrecognized sym-
     bol.  If the same symbol appears in more than one argument,
     the last occurrence dominates.

     The --ll option causes _u_n_i_f_d_e_f to replace removed lines with
     blank lines instead of deleting them.

     If your C code uses ifdefs to delimit non-C lines, such as
     comments or code which is under construction, then you must
     tell _u_n_i_f_d_e_f which symbols are used for that purpose so that
     it won't try to parse for quotes and comments inside those
     ifdefs.  You specify ignored ifdefs with --iiDD_s_y_m and --iiUU_s_y_m
     similar to --DD_s_y_m and --UU_s_y_m above.

     _U_n_i_f_d_e_f copies its output to _s_t_d_o_u_t and will take its input
     from _s_t_d_i_n if no _f_i_l_e argument is given.  If the --cc argument
     is specified, then the operation of _u_n_i_f_d_e_f is complemented,
     i.e. the lines that would have been removed or blanked are
     retained and vice versa.

     _U_n_i_f_d_e_f works nicely with the --DD_s_y_m option added to _d_i_f_f(1)
     as of the 4.1 Berkeley Software Distribution.



Printed 7/27/90             December				1






UNIFDEF(1)		      1988		       UNIFDEF(1)



SSEEEE AALLSSOO
     diff(1)

DDIIAAGGNNOOSSTTIICCSS
     Inappropriate else or endif.
     Premature EOF with line numbers of the unterminated #ifdefs.

     Exit status is 0 if output is exact copy of input, 1 if not,
     2 if trouble.

AAUUTTHHOORR
     Dave Yost for The Rand Corporation.
     Still maintained independently by Dave Yost as of 3/85

BBUUGGSS
     Should try to deal with ``#if'' lines.
     Doesn't work correctly if input contains null characters.






































Printed 7/27/90             December				2



