APPLY(1)		    UNIX Reference Manual		      APPLY(1)

NNAAMMEE
     aappppllyy - apply a command to a set of arguments

SSYYNNOOPPSSIISS
     aappppllyy [--aacc] [--nn] _c_o_m_m_a_n_d _a_r_g_s ...

DDEESSCCRRIIPPTTIIOONN
     AAppppllyy runs the named _c_o_m_m_a_n_d on each argument _a_r_g in turn.  Normally ar-
     guments are chosen singly; the optional number --nn specifies the number of
     arguments to be passed to _c_o_m_m_a_n_d.  If --nn is zero, _c_o_m_m_a_n_d is run without
     arguments once for each _a_r_g Character sequences of the form %_d in
     _c_o_m_m_a_n_d, where _d is a digit from 1 to 9, are replaced by the _d'_t_h follow-
     ing unused _a_r_g.  If any such sequences occur, --nn is ignored, and the
     number of arguments passed to _c_o_m_m_a_n_d is the maximum value of _d in
     _c_o_m_m_a_n_d.  The character `%' may be changed by the --aa option.  aappppllyy
     checks the environment variable SHELL to find out which shell to use.

EEXXAAMMPPLLEESS
     apply echo a*
	     is similar to ls(1);

     apply -2 cmp a1 b1 a2 b2 ...
	     compares the `a' files to the `b' files;

     apply -0 who 1 2 3 4 5
	     runs who(1) 5 times; and

     apply 'ln %1 /usr/joe' *
	     links all files in the current directory to the directory
	     /_u_s_r/_j_o_e.

SSEEEE AALLSSOO
     sh(1)

HHIISSTTOORRYY
     AAppppllyy appeared in 4.2BSD.

AAUUTTHHOORR
     Rob Pike

BBUUGGSS
     Shell metacharacters in _c_o_m_m_a_n_d may have bizarre effects; it is best to
     enclose complicated commands in single quotes (' ').

     There is no way to pass a literal `%2' if `%' is the argument expansion
     character.
