F77(1)			    UNIX Reference Manual			F77(1)

NNAAMMEE
     ff7777 - Fortran 77 compiler

SSYYNNOOPPSSIISS
     ff7777 [option] ...  _f_i_l_e ...

DDEESSCCRRIIPPTTIIOONN
     FF7777 is the UNIX Fortran 77 compiler.  It accepts several types of argu-
     ments:

     Arguments whose names end with `.f' are taken to be Fortran 77 source
     programs; they are compiled, and each object program is left on the file
     in the current directory whose name is that of the source with `.o' sub-
     stituted for `.f'.

     Arguments whose names end with `.F' are also taken to be Fortran 77
     source programs; these are first processed by the C preprocessor before
     being compiled by ff7777.

     Arguments whose names end with `.r' or `.e' are taken to be Ratfor or EFL
     source programs respectively; these are first transformed by the ap-
     propriate preprocessor, then compiled by ff7777.

     Arguments whose names end with `.c' or `.s' are taken to be C or assembly
     source programs and are compiled or assembled, producing a `.o' file.

     The following options have the same meaning as in cc(1).  See ld(1) for
     load-time options.

     --cc        Suppress loading and produce `.o' files for each source file.

     --gg        Produce additional symbol table information for dbx(1) and pass
	       the --llgg flag to ld(1) so that on abnormal terminations, the
	       memory image is written to file _c_o_r_e.  Incompatible with --OO.

     --oo _o_u_t_p_u_t
	       Name the final output file _o_u_t_p_u_t instead of `_a._o_u_t'.

     --pp        Prepare object files for profiling, see prof(1).

     --ppgg       Causes the compiler to produce counting code in the manner of
	       --pp, but invokes a run-time recording mechanism that keeps more
	       extensive statistics and produces a _g_m_o_n._o_u_t file at normal
	       termination. An execution profile can then be generated by use
	       of gprof(1).

     --ww        Suppress all warning messages.  If the option is `-w66', only
	       Fortran 66 compatibility warnings are suppressed.

     --DD_n_a_m_e =_d_e_f

     --DD_n_a_m_e    Define the _n_a_m_e to the C preprocessor, as if by `#define'. If
	       no definition is given, the name is defined as "1". (`.F' suf-
	       fix files only).

     --II_d_i_r     `#include' files whose names do not begin with `/' are always
	       sought first in the directory of the _f_i_l_e argument, then in
	       directories named in --II options, then in directories on a stan-
	       dard list. (`.F' suffix files only).

     --OO        Invoke an object-code optimizer.  Incompatible with --gg.

     --SS        Compile the named programs, and leave the assembler-language
	       output on corresponding files suffixed `.s'.  (No `.o' is
	       created.).
	       The following options are peculiar to ff7777.

     --dd        Used for debugging the compiler.

     --ii22       On machines which support short integers, make the default in-
	       teger constants and variables short.  --ii44 is the standard value
	       of this option). All logical quantities will be short.

     --qq        Suppress printing of file names and program unit names during
	       compilation.

     --mm        Apply the M4 preprocessor to each `.r' file before transforming
	       it with the Ratfor or EFL preprocessor.

     --oonneettrriipp

     --11        Compile DO loops that are performed at least once if reached.
	       (Fortran 77 DO loops are not performed at all if the upper lim-
	       it is smaller than the lower limit.)

     --rr88       Treat all floating point variables, constants, functions and
	       intrinsics as double precision and all complex quantities as
	       double complex.

     --uu        Make the default type of a variable `undefined' rather than us-
	       ing the default Fortran rules.

     --vv        Print the version number of the compiler, and the name of each
	       pass as it executes.

     --CC        Compile code to check that subscripts are within declared array
	       bounds.	For multi-dimensional arrays, only the equivalent
	       linear subscript is checked.

     --FF        Apply the C preprocessor to `.F' files, and the EFL, or Ratfor
	       preprocessors to `.e' and `.r' files, put the result in the
	       file with the suffix changed to `.f', but do not compile.

     --EE_x       Use the string _x as an EFL option in processing `.e' files.

     --RR_x       Use the string _x as a Ratfor option in processing `.r' files.

     --NN[qqxxssccnn]_n_n_n
	       Make static tables in the compiler bigger. The compiler will
	       complain if it overflows its tables and suggest you apply one
	       or more of these flags. These flags have the following
	       meanings:

	       rr qq   Maximum number of equivalenced variables. Default is 150.

	       xx     Maximum number of external names (common block names,
		     subroutine and function names). Default is 200.

	       ss     Maximum number of statement numbers. Default is 401.

	       cc     Maximum depth of nesting for control statements (e.g. DO
		     loops). Default is 20.

	       _n     Maximum number of identifiers. Default is 1009.

     --UU        Do not convert upper case letters to lower case. The default is
	       to convert Fortran programs to lower case except within charac-
	       ter string constants.

     Other arguments are taken to be either loader option arguments, or F77-
     compatible object programs, typically produced by an earlier run, or
     perhaps libraries of F77-compatible routines.  These programs, together
     with the results of any compilations specified, are loaded (in the order
     given) to produce an executable program with name `_a._o_u_t'.

     Programs compiled with ff7777 produce memory dumps in file _c_o_r_e upon abnor-
     mal termination if the `--' flag was specified during loading.  If the
     environment variable f77_dump_flag is set to a value beginning with `_y'
     or `_n', dumps for abnormal terminations are respectively forced or
     suppressed.

FFIILLEESS
     file.[fFresc]	   input file
     _f_i_l_e._o		   object file
     _a._o_u_t		   loaded output
     /_u_s_r/_l_i_b/_f_7_7_p_a_s_s_1	   compiler
     /_l_i_b_e_x_e_c/_f_1	   pass 2
     /_l_i_b_e_x_e_c/_c_2	   optional optimizer
     /_u_s_r/_b_i_n/_c_p_p	   C preprocessor
     /_u_s_r/_l_i_b/_l_i_b_F_7_7._a	   intrinsic function library
     /_u_s_r/_l_i_b/_l_i_b_I_7_7._a	   Fortran I/O library
     /_u_s_r/_l_i_b/_l_i_b_U_7_7._a	   UNIX interface library
     /_u_s_r/_l_i_b/_l_i_b_m._a	   math library
     /_u_s_r/_l_i_b/_l_i_b_c._a	   C library, see section 3
     /_u_s_r/_l_i_b/_l_i_b_F_7_7__p._a   profiling intrinsic function library
     /_u_s_r/_l_i_b/_l_i_b_I_7_7__p._a   profiling Fortran I/O library
     /_u_s_r/_l_i_b/_l_i_b_U_7_7__p._a   profiling UNIX interface library
     /_u_s_r/_l_i_b/_l_i_b_m__p._a	   profiling math library
     /_u_s_r/_l_i_b/_l_i_b_c__p._a	   profiling C library, see section 3
     _m_o_n._o_u_t		   file produced for analysis by prof(1).
     _g_m_o_n._o_u_t		   file produced for analysis by gprof(1).


SSEEEE AALLSSOO
     fpr(1), fsplit(1), ld(1), ar(1), ranlib(1), dbx(1), intro(3f) efl(1),
     ratfor(1), struct(1), prof(1), gprof(1), cc(1)
     S. I. Feldman, P. J. Weinberger, J. Berkman, _A _P_o_r_t_a_b_l_e _F_o_r_t_r_a_n _7_7
     _C_o_m_p_i_l_e_r
     D. L. Wasley, J. Berkman, _I_n_t_r_o_d_u_c_t_i_o_n _t_o _t_h_e _f_7_7 _I/._X_r _O _L_i_b_r_a_r_y

DDIIAAGGNNOOSSTTIICCSS
     The diagnostics produced by ff7777 itself are intended to be self-
     explanatory.  Occasional messages may be produced by the loader.

HHIISSTTOORRYY
     FF7777 appeared in Version 7 AT&T Unix.

BBUUGGSS
     Files longer than about 50,000 lines must be split up to be compiled.
