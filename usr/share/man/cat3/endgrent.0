


GETGRENT(3)		      1990		      GETGRENT(3)



NNAAMMEE
     getgrent, getgrnam, getgrgid, setgroupent, setgrfile, set-
     grent, endgrent - get group file entry

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ggrrpp..hh>>

     ssttrruucctt ggrroouupp **ggeettggrreenntt(())

     ssttrruucctt ggrroouupp **ggeettggrrnnaamm((nnaammee))
     cchhaarr **nnaammee;;

     ssttrruucctt ggrroouupp **ggeettggrrggiidd((ggiidd))
     ggiidd__tt ggiidd;;

     sseettggrroouuppeenntt((ssttaayyooppeenn))
     iinntt ssttaayyooppeenn;;

     vvooiidd sseettggrrffiillee((nnaammee))
     cchhaarr **nnaammee;;

     sseettggrreenntt(())

     vvooiidd eennddggrreenntt(())

DDEESSCCRRIIPPTTIIOONN
     _G_e_t_g_r_e_n_t, _g_e_t_g_r_g_i_d and _g_e_t_g_r_n_a_m each return a pointer to a
     structure containing the broken-out fields of a line in the
     group file.  This structure is defined by the include file
     <grp.h>, and contains the following fields:

	  struct group {
	       char	 *gr_name;	/* group name */
	       char	 *gr_passwd;	/* group password */
	       gid_t	 gr_gid;	/* group id */
	       char	 **gr_mem;	/* group members */
	  };

     These fields are more completely described in _g_r_o_u_p(5).

     _G_e_t_g_r_n_a_m and _g_e_t_g_r_g_i_d search the group database for a match-
     ing  group  name  or  group  id, respectively, returning the
     first one encountered.  Identical group names or group  gids
     may result in undefined behavior.

     _G_e_t_g_r_e_n_t  sequentially  reads  the  group	database  and  is
     intended for programs that wish to step through the complete
     list of groups.

     All three routines will open the group file for reading,  if
     necesssary.




Printed 7/27/90               June				1






GETGRENT(3)		      1990		      GETGRENT(3)



     _S_e_t_g_r_f_i_l_e changes the  default  group  file  to  _f_i_l_e,  thus
     allowing the use of alternate group files.

     _S_e_t_g_r_o_u_p_e_n_t opens the file, or rewinds it if it  is  already
     open.   If  _s_t_a_y_o_p_e_n  is non-zero, file descriptors are left
     open, significantly  speeding  up	subsequent  calls.   This
     functionality  is	unnecessary  for  _g_e_t_g_r_e_n_t  as it doesn't
     close its file descriptors by default.  It  should  also  be
     noted  that it is dangerous for long-running programs to use
     this functionality as the group file may be updated.

     _S_e_t_g_r_e_n_t is identical to _s_e_t_g_r_o_u_p_e_n_t  with  an  argument  of
     zero.

     _E_n_d_g_r_e_n_t closes any open files.

FFIILLEESS
     /etc/group

SSEEEE AALLSSOO
      getpwent(3), group(5)

DDIIAAGGNNOOSSTTIICCSS
     The routines _g_e_t_g_r_e_n_t, _g_e_t_g_r_n_a_m, and _g_e_t_g_r_g_i_d, return a null
     pointer  on EOF or error.	_S_e_t_g_r_o_u_p_e_n_t and _s_e_t_g_r_e_n_t return 0
     on failure, 1 on success.	_E_n_d_g_r_e_n_t and  _s_e_t_g_r_f_i_l_e  have  no
     return value.

BBUUGGSS
     All information is contained in a	static	buffer	which  is
     overwritten  by  each new call.  It must be copied elsewhere
     to be retained.

     The routines _g_e_t_g_r_e_n_t, _e_n_d_g_r_e_n_t, _s_e_t_g_r_o_u_p_e_n_t,  and  _s_e_t_g_r_e_n_t
     are  fairly useless in a networked environment and should be
     avoided, if possible.



















Printed 7/27/90               June				2



