.Ib
.In 2 1 *array "'s_name 's_type 'x_dim1 ... x_dim\fIn\fP"
.In 2 1 aexplode "'s_arg"
.In 2 1 aexplodec "'s_arg"
.In 2 2 aexploden "'s_arg"
.In 6 1 allocate "'s_type 'x_pages"
.In 2 2 alphalessp "'s_arg1 's_arg2"
.In 4 1 and "[g_arg1 ...]"
.In 2 2 append "'l_arg1 'l_arg2"
.In 2 2 append1 "'l_arg1 'g_arg2"
.In 4 1 apply "'u_func 'l_args"
.In 4 1 arg "['x_numb]"
.In 6 1 argv "'x_argnumb"
.In 2 2 array "s_name s_type x_dim1 ... x_dim\fIi\fP"
.In 2 2 arraycall "'s_type 'a_array 'x_ind1 ... "
.In 2 2 arraydims "'s_name"
.In 2 2 arrayp "'g_arg"
.In 2 2 arrayref "'s_name 'x_ind"
.In 2 3 assoc "'g_arg1 'l_arg2"
.In 2 3 assq "'g_arg1 'l_arg2"
.In 2 3 atom "'g_arg"
.In 6 1 baktrace ""
.In 2 3 bcdp "'g_arg"
.In 2 3 bigp "'g_arg"
.In 6 1 bindstack ""
.In 6 1 boundp "'s_name"
.In 4 1 break "[g_val]"
.In 2 3 c..r "'l_arg"
.In 4 1 catch "g_exp [s_tag]"
.In 6 2 chdir "'s_path"
.In 5 1 close "'p_port"
.In 2 4 concat "['s_arg1 ... ]"
.In 4 2 cond "[l_clause1 ...]"
.In 2 4 cons "'g_arg1 'g_arg2"
.In 6 2 cont ""
.In 2 4 copy "'g_arg"
.In 4 2 declare "[g_arg ...]"
.In 4 2 def "s_name (s_type l_argl g_exp1 ...)"
.In 2 4 defprop "s_atm g_val g_ind"
.In 4 2 defun "s_name [s_mtype] ls_argl g_exp1 ... "
.In 2 4 delete "'g_val 'l_list ['x_count]"
.In 2 4 delq "'g_val 'l_list ['x_count]"
.In 4 2 do "l_vrbs l_test g_exp1 ..."
.In 4 3 do "s_name g_init g_repeat g_test g_exp1 ..."
.In 5 1 drain "['p_port]"
.In 2 5 dtpr "'g_arg"
.In 6 2 dumplisp "s_name"
.In 2 5 eq "'g_arg1 'g_arg2"
.In 2 5 equal "'g_arg1 'g_arg2"
.In 4 4 err "???"
.In 4 4 errset "???"
.In 4 4 eval "'g_val"
.In 6 2 eval-when "l_time g_exp1 ..."
.In 4 4 eval-when "l_times g_exp1 ... g_expn"
.In 4 5 exec ""
.In 6 2 exit "['x_code]"
.In 2 5 explode "'g_arg"
.In 2 5 explodec "'g_val"
.In 2 5 exploden "'g_val"
.In 6 3 fake "'x_addr"
.In 2 6 fillarray "'s_array 'l_itms"
.In 5 1 flatsize "'g_form 'x_max"
.In 4 5 funcall "'u_func ['g_arg1 ...]"
.In 4 5 function "u_func"
.In 6 3 gc ""
.In 6 3 gcafter "s_type"
.In 2 6 gensym "'s_leader"
.In 2 6 get "'s_name 'g_ind"
.In 2 6 get_pname "'s_arg"
.In 2 6 getaccess "'a_array"
.In 2 6 getaux "'a_array"
.In 2 6 getchar "'s_arg 'x_index"
.In 2 7 getcharn "'s_arg 'x_index"
.In 2 7 getd "'s_arg"
.In 2 7 getdelta "'a_array"
.In 4 5 getdisc "'t_func"
.In 2 7 getentry "'y_funchd"
.In 6 3 getenv "'s_name"
.In 2 7 getlength "'a_array"
.In 4 5 go "g_labexp"
.In 2 7 implode "'l_arg"
.In 6 3 include "s_filename"
.In 5 2 infile "'s_filename"
.In 2 7 last "'l_arg"
.In 2 7 length "'l_arg"
.In 2 8 list "['g_arg1 ... ]"
.In 5 2 load "'s_filename"
.In 5 2 makereadtable "['s_flag]"
.In 2 8 maknam "'l_arg"
.In 4 5 map "'u_func 'l_arg1 ..."
.In 4 5 mapc "'u_func 'l_arg1 ..."
.In 4 5 mapcan "'u_func 'l_arg1 ..."
.In 4 6 mapcar "'u_func 'l_arg1 ..."
.In 4 6 mapcon "'u_func 'l_arg1 ..."
.In 4 6 maplist "'u_func 'l_arg1 ..."
.In 2 8 marray "'g_data 's_access 'g_aux 'x_length 'x_delta"
.In 2 8 member "'g_arg1 'l_arg2"
.In 2 8 memq "'g_arg1 'l_arg2"
.In 4 6 mfunction "entry 's_disc"
.In 6 3 namestack ""
.In 2 8 nconc "'l_arg1 'l_arg2"
.In 2 8 ncons "'g_arg"
.In 2 8 not "'g_arg"
.In 2 9 nreverse "'l_arg"
.In 2 9 nthelem "'n_arg1 'l_arg2"
.In 2 9 null "'g_arg"
.In 5 2 nwritn "['p_port]"
.In 4 6 oblist ""
.In 6 3 opval "'s_arg ['g_newval]"
.In 4 6 or "[g_arg1 ... ]"
.In 5 2 outfile "'s_filename"
.In 5 3 patom "'g_exp ['p_port]"
.In 2 9 plist "'s_name"
.In 5 3 pntlen "'xfs_arg"
.In 5 3 portp "'g_arg"
.In 5 3 princ "'g_arg ['p_port]"
.In 5 3 print "'g_arg ['p_port]"
.In 6 4 process "s_pgrm [s_frompipe s_topipe]"
.In 4 6 prog "l_vrbls g_exp1 ..."
.In 4 7 prog2 "g_exp1 g_exp2 [g_exp3 ...]"
.In 4 7 progn "g_exp1 [g_exp2 ...]"
.In 4 7 progv "'l_locv 'l_initv g_exp1 ..."
.In 6 4 ptime ""
.In 2 9 putaccess "'a_array 's_func"
.In 2 9 putaux "'a_array 'g_aux"
.In 4 7 putd "'s_name 'u_func"
.In 2 9 putdelta "'a_array 'x_delta"
.In 2 10 putlength "'a_array 'x_length"
.In 2 10 putprop "'s_name 'g_val 'g_ind"
.In 2 10 quote "g_arg"
.In 5 3 ratom "['p_port]"
.In 5 3 read "['p_port]"
.In 5 3 readc "['p_port]"
.In 5 3 readlist "'l_arg"
.In 6 4 rematom "'s_symb"
.In 6 4 remob ""
.In 2 10 remprop "'s_name 'g_ind"
.In 2 10 replace "'g_arg1 'g_arg2"
.In 6 4 reset ""
.In 5 4 resetio ""
.In 6 4 retbrk "['x_level]"
.In 4 7 return "['g_val]"
.In 2 10 reverse "'l_arg"
.In 2 11 rplaca "'l_arg1 'g_arg2"
.In 2 11 rplacd "'l_arg1 'g_arg2"
.In 6 5 segment "'s_type 'x_size"
.In 2 11 set "'s_arg1 'g_arg2"
.In 2 11 setplist "'s_atm 'l_plist"
.In 2 11 setq "s_atm1 'g_val1 [ s_atm2 'g_val2 ... ... ]"
.In 5 4 setsyntax "'s_symbol 'x_code"
.In 6 5 shell ""
.In 6 5 showstack ""
.In 6 5 signal "'x_signum 's_name"
.In 6 5 sizeof "'g_arg"
.In 6 6 sstatusdumpcore "g_val"
.In 6 6 sstatusdumpmode "x_val"
.In 6 6 sstatusfeature "g_val"
.In 6 6 sstatusnofeature "g_val"
.In 6 5 sstatus "g_type g_val"
.In 6 6 statusfeature "g_val"
.In 6 6 statusfeatures ""
.In 6 7 statussyntax "s_char"
.In 6 6 status "g_code"
.In 2 11 stringp "'g_arg"
.In 2 11 symbolp "'g_arg"
.In 6 7 syscall ""
.In 5 4 terpr "['p_port]"
.In 5 4 terpri "['p_port]"
.In 4 7 throw "'g_val [s_tag]"
.In 6 7 top-level ""
.In 5 4 tyi "['p_port]"
.In 5 4 tyipeek "['p_port]"
.In 5 4 tyo "'x_char ['p_port]"
.In 2 11 type "'g_arg"
.In 2 11 typep "'g_arg"
.In 2 12 uconcat "['s_arg1 ... ]"
.In 2 12 valuep "'g_arg"
.In 6 7 what "'g_arg"
.In 5 4 zapline ""
