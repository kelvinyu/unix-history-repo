


PDCO(2)               Icon Program Library                PDCO(2)



NNNNAAAAMMMMEEEE
     pdco - programmer-defined control operations

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     These procedures are taken mainly from TR 82-8, which
     describes how co-expressions can be used to model the
     built-in control structures of Icon and also provide new
     ones. Some procedures have been corrected or improved and
     there are additions.

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     AAAAlllltttt{{{{eeee1111,,,,eeee2222}}}}          models eeee1111 |||| eeee2222
     CCCCoooollllsssseeeeqqqq{{{{eeee1111,,,,eeee2222,,,, ...}}}}  produces results of eeee1111, eeee2222, ... alternately
     CCCCoooommmmsssseeeeqqqq{{{{eeee1111,,,,eeee2222}}}}       compares result sequences of eeee1111 and eeee2222
     CCCCoooonnnndddd{{{{eeee1111,,,,eeee2222,,,, ...}}}}    generalized Lisp conditional
     EEEEvvvveeeerrrryyyy{{{{eeee1111,,,,eeee2222}}}}        models eeeevvvveeeerrrryyyy eeee1111 ddddoooo eeee2222
     GGGGaaaalllltttt{{{{eeee1111,,,,eeee2222,,,, ...}}}}    generalized alternation: eeee1111 |||| eeee2222 |||| ...
     LLLLccccoooonnnndddd{{{{eeee1111,,,,eeee2222,,,, ...}}}}   Lisp conditional
     LLLLiiiimmmmiiiitttt{{{{eeee1111,,,,eeee2222}}}}        models eeee1111 \\\\ eeee2222
     RRRRaaaannnnsssseeeeqqqq{{{{eeee1111,,,,eeee2222,,,, ...}}}}  produces results of eeee1111, eeee2222, ... at random
     RRRReeeeppppaaaalllltttt{{{{eeee}}}}           models ||||eeee
     RRRReeeessssuuuummmmeeee{{{{eeee1111,,,,eeee2222,,,,eeee3333}}}}    models eeeevvvveeeerrrryyyy eeee1111 \\\\ eeee2222 ddddoooo eeee3333
     SSSSeeeelllleeeecccctttt{{{{eeee1111,,,,eeee2222}}}}       produces results from eeee1111 by position according to eeee2222

BBBBUUUUGGGGSSSS AAAANNNNDDDD DDDDEEEEFFFFIIIICCCCIIIIEEEENNNNCCCCIIIIEEEESSSS
     Because of the handling of the scope of local identifiers in
     co-expressions, expressions in programmer-defined control
     operations cannot communicate through local identifiers. The
     results produced by programmer-defined control operations
     are always dereferenced. Some constructions, such as bbbbrrrreeeeaaaakkkk
     and rrrreeeettttuuuurrrrnnnn, cannot be used in arguments to programmer-
     defined control operations. See TR 82-8 for details of these
     problems.

RRRREEEEQQQQUUUUIIIIRRRREEEEMMMMEEEENNNNTTTTSSSS
     _P_d_c_o requires the experimental extensions in Version 5.9 of
     Icon.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     pdae(2)

     Griswold, Ralph E., Robert K. McConeghy, and William H.
     Mitchell.  _E_x_t_e_n_s_i_o_n_s _t_o _V_e_r_s_i_o_n _5 _o_f _t_h_e _I_c_o_n _P_r_o_g_r_a_m_m_i_n_g
     _L_a_n_g_u_a_g_e, TR 84-10a, Department of Computer Science, The
     University of Arizona, 1984.

AAAAUUUUTTTTHHHHOOOORRRRSSSS
     Ralph E. Griswold and Michael Novak







Version 5.9    The University of Arizona - 8/16/84              1



