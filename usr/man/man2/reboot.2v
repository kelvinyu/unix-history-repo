.TH REBOOT 2V VAX/11
.UC 4
.SH NAME
reboot \- reboot system or halt processor
.SH SYNOPSIS
.nf
.B #include <sys/reboot.h>
.PP
.B reboot(howto)
.B int howto;
.fi
.SH DESCRIPTION
.I Reboot
is used to cause a system reboot, and is invoked automatically
in the event of unrecoverable system failures.
.I Howto
is a mask of options passed to the bootstrap program;
some of the information in
.I howto
is interpreted by this program, and the information is further
passed to the initialization process
.IR init (8)
in the new system.
When none of these options (e.g. RB_AUTOBOOT) is given, the system is rebooted
from file \*(lqvmunix\*(rq in the root file system of unit 0
of the drive with the same disk controller as the current root file system.
An automatic consistency check of the disks is then normally performed.
.PP
The bits of
.I howto
are:
.TP
RB_HALT
the processor is simply halted; no reboot takes place.
This should be used with caution.
.TP
RB_ASKNAME
Interpreted by the bootstrap program itself, causing it to
inquire as to what file should be booted.  Normally, the system is
booted from the file \*(lqxx(0,0)vmunix\*(rq without asking, where
.I xx
is determined by a code in register
.I r10
(which is known as
.I devtype)
at entry to the bootstrap program.  The code corresponds to the
major device number of the root file system, i.e. \*(lqmajor(rootdev)\*(rq.
Currently, the following values of
.I devtype
are understood:
.RS
.br
.ns
.IP
.nf
0	hp	rm03/rm05/rp06 massbus disk
1	--	unused
2	up	emulex sc21 unibus controller; ampex 9300 disks
3	rk	rk07 unibus disks
.fi
.RE
.IP
Thus if
.I r10
contained a 2, the system
.RS
.IP
.B up(0,0)vmunix.
.RE
.IP
would be booted.
.TP
RB_SINGLE
Normally, the reboot procedure involves an automatic disk consistency
check and then multi-user operations.  This prevents the consistency
check, rather simply booting the system with a single-user shell on
the console, from the file system specified by
.I r10.
.SH "SEE ALSO"
crash(8), halt(8), init(8), reboot(8)
.SH BUGS
