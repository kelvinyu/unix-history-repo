#!/bin/sh -
#
#	@(#)security	5.12 (Berkeley) %G%
#
PATH=/sbin:/usr/sbin:/bin:/usr/bin

host=`hostname`
umask 22

DONE=/tmp/_secure1.$$
LIST=/tmp/_secure2.$$
TMP=/tmp/_secure3.$$

trap 'rm -f $DONE $LIST $TMP' 0

echo ""
echo "Checking for uids of 0:"
awk -F: "\$3==\"0\" {print \"user: \" \$1 \", uid: \" \$3 }" /etc/master.passwd

echo ""
echo "Checking for uids without passwords:"
awk -F: "\$2==\"\" {print \"user: \" \$1 \", uid: \" \$3 }" /etc/master.passwd

echo ""
echo "Checking setuid files and devices:"
(find / \( ! -fstype local \) -a -prune -o \
    \( -perm -u+s -o -perm -g+s -o ! -type d -a ! -type f -a ! -type l \) | \
    sort | sed -e 's/^/ls -lgT /' | sh >$LIST) 2>$TMP

if [ -s $TMP ] ; then
	echo "$host setuid/device find errors:"
	cat $TMP
	echo ""
fi

if [ -s $LIST ] ; then
	SETCUR=/var/log/setuid.current
	SETBACK=/var/log/setuid.backup

	if [ -s $SETCUR ] ; then
		if cmp -s $SETCUR $LIST ; then
			:
		else
			:> $DONE
			join -110 -210 -v2 $SETCUR $LIST >$TMP
			if [ -s $TMP ] ; then
				echo "$host setuid/device additions:"
				tee -a $DONE < $TMP
				echo ""
			fi

			join -110 -210 -v1 $SETCUR $LIST >$TMP
			if [ -s $TMP ] ; then
				echo "$host setuid/device deletions:"
				tee -a $DONE < $TMP
				echo ""
			fi

			sort +9 $DONE $SETCUR $LIST | uniq -u >$TMP
			if [ -s $TMP ] ; then
				echo "$host setuid/device changes:"
				cat $TMP
				echo ""
			fi

			mv $SETCUR $SETBACK
			mv $LIST $SETCUR
		fi
	else
		echo "$host setuid/device additions:"
		cat $LIST
		echo ""
		mv $LIST $SETCUR
	fi
fi

# Check the system binaries.
# Create the mtree tree specifications using:
#
#	mtree -cx -pDIR -kcksum,gid,mode,nlink,size,link,time,uid > DIR.secure
#	chown bin.bin DIR.SECURE
#	chmod 444 DIR.SECURE
#
# Note, this is not complete protection against Trojan horsed binaries, as
# the hacker can modify the tree specification to match the replaced binary.
# For details on really protecting yourself against modified binaries, see
# the mtree(8) manual page.

if cd /etc/mtree; then
	echo ""
	echo "Checking system binaries:"
	for file in *.secure; do
		tree=`sed -n -e '3s/.* //p' -e 3q $file`
		echo ""
		echo "Checking $tree:"
		mtree -f $file -p $tree
	done
fi
