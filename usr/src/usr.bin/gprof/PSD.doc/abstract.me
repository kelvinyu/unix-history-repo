.\" Copyright (c) 1982 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"	@(#)abstract.me	5.2 (Berkeley) %G%
.\"
.sp 1
\fB\s+2gprof: a Call Graph Execution Profiler\s-2\fP\**
.(f
\**This work was supported by grant MCS80-05144
from the National Science Foundation.
.)f
.sp 1
by
\fISusan L. Graham\fP
\fIPeter B. Kessler\fP
\fIMarshall K. McKusick\fP
.sp 1
Computer Science Division
Electrical Engineering and Computer Science Department
University of California, Berkeley
Berkeley, California 94720
.ce 0
.sp 1
.sp 0.5i
.sh 0 "Abstract"
.pp
Large complex programs are composed of many small routines
that implement abstractions for the routines that call them.
To be useful, an execution profiler must attribute
execution time in a way that is significant for the 
logical structure of a program
as well as for its textual decomposition.
This data must then be displayed to the user
in a convenient and informative way.
The \fBgprof\fP profiler 
accounts for the running time of called routines
in the running time of the routines that call them.
The design and use of this profiler is described.
