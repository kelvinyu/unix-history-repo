.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)lorder.1	6.2 (Berkeley) %G%
.\"
.TH LORDER 1 ""
.UC 4
.SH NAME
lorder \- list dependencies for object files
.SH SYNOPSIS
.ft B
lorder file ...
.ft R
.SH DESCRIPTION
The 
.I lorder
utility uses
.IR nm (1)
to determine interdependencies in the list of object files
specified on the command line.
.I Lorder
outputs a list of file names where the first file contains a symbol
which is defined by the second file.
.PP
The output is normally used with 
.IR tsort (1)
when a libarary is created to determine the optimum ordering of the
object modules so that all references may be resolved in a single
pass of the loader.
.SH EXAMPLES
.RS
ar cr library.a `lorder ${OBJS} | tsort`
.RE
.SH "SEE ALSO"
ar(1), ld(1), nm(1), ranlib(1), tsort(1)
