.\" Copyright (c) 1987, 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     @(#)mkdep.1	5.9 (Berkeley) %G%
.\"
.TH MKDEP 1 "%Q"
.UC 5
.SH NAME
mkdep \- construct Makefile dependency list
.SH SYNOPSIS
.B mkdep
[
.B \-ap
] [
.B \-f depend_file
] [ flags ] file ...
.SH DESCRIPTION
\fIMkdep\fP takes a set of flags for the C compiler and a list
of C source files as arguments and constructs a set of include
file dependencies which are written into the file \fIdepend_file\fP,
or ``.depend'' by default.  An example of its use in a Makefile
might be:
.nf
.RS

CFLAGS= -O -DDEBUG -I../include -I.
SRCS= file1.c file2.c

depend:
	mkdep ${CFLAGS} ${SRCS}
.RE
.PP
where the macro SRCS is the list of C source files and the macro
CFLAGS is the list of flags for the C compiler.
.PP
If the \fB-p\fP option is provided, \fImkdep\fP produces dependencies
of the form ``program: program.c'' so that subsequent makes will
produce \fIprogram\fP directly from its C module rather than using an
intermediate \fI.o\fP module.  This is useful in directories that
contain many programs, each of whose source is contained in a single
C module.  The \fB-a\fP option causes appending to the output file,
so that multiple \fImkdep\fP's may be run from a single Makefile.
.SH "SEE ALSO"
cc(1), cpp(1), make(1)
