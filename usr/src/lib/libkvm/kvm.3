.\" Copyright (c) 1992 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     @(#)kvm.3	5.1 (Berkeley) %G%
.\"
.Dd 
.Dt KVM 3
.Os
.Sh NAME
.Nm kvm_open ,
.Nm kvm_openfiles ,
.Nm kvm_close ,
.Nm kvm_read ,
.Nm kvm_write ,
.Nm kvm_nlist ,
.Nm kvm_getprocs ,
.Nm kvm_getargv ,
.Nm kvm_getenvv ,
.Nm kvm_geterr
.Nd kernel memory interface
.Sh SYNOPSIS
.Fd #include <kvm.h>
.br
.Ft kvm_t *
.Fn kvm_open "const char *execfile" "const char *corefile" "char *swapfile" "int flag" "const char *errstr"
.Ft void
.Fn kvm_close "kvm_t *kd"
.Ft ssize_t
.Fn kvm_read "const kvm_t *kd" "u_long addr" "char *buf" "size_t nbytes"
.Ft ssize_t
.Fn kvm_write "const kvm_t *kd" "u_long addr" "char *buf" "size_t nbytes"
.Ft int
.Fn kvm_nlist "kvm_t *kd" "struct nlist *nl"
.Ft struct kinfo_proc *
.Fn kvm_getprocs "kvm_t *kd" int int "int *"
.Ft char **
.Fn kvm_getargv "kvm_t *kd" "const struct proc *p" "int strspc"
.Ft void
.Fn kvm_geterr "const kvm_t *kd"
.Sh DESCRIPTION
The 
.Xr kvm 3
library provides a uniform interface for accessing kernel virtual mememory
images, including live systems and crashdumps.
Access to live systems is via
/dev/mem
while crashdumps can be examined via the core file generated by
.Xr savecore 8 .
The interface behaves identically in both cases.
Memory can be read and written, kernel symbol addresses can be 
looked up efficiently, and information about user processes can
be gathered.
.Pp
.Fn kvm_open
is first called to obtain a descriptor for all subsequent calls.
.Sh COMPATIBILITY
The kvm interface was first introduced in SunOS.  A considerable
number of programs have been developed that use this interface,
making backward compatibility highly desirable.
In most respects, the Sun kvm inteface is consistent and clean.
Accordingly, the generic portion of the interface (i.e.,
.Fn kvm_open,
.Fn kvm_close,
.Fn kvm_read,
.Fn kvm_write,
and
.Fn kvm_nlist
.) has been incorportated into the BSD interface.  Indeed, many kvm
applications (i.e., debuggers and statistical monitors) use only 
this subset of the interface.
.Pp
The process interface was not kept.  This is not a portability
issue since any code that manipulates processes is inherenly
machine dependent.
.Pp
Finally, the Sun kvm error reporting semantics are poorly defined.
The library can be configured either to print errors to stderr automatically,
or to print no error messages at all.
In the latter case, the nature of the error cannot be determined.
To overcome this, the BSD interface includes a
routine,
.Xr kvm_geterr 3 ,
to return (not print out) the error message
corresponding to the most recent error condition on the
given descriptor.
.Sh SEE ALSO
.Xr kvm_open 3,
.Xr kvm_openfiles 3,
.Xr kvm_close 3,
.Xr kvm_read 3,
.Xr kvm_write 3,
.Xr kvm_nlist 3,
.Xr kvm_getprocs 3,
.Xr kvm_getargv 3,
.Xr kvm_getenvv 3,
.Xr kvm_geterr 3
