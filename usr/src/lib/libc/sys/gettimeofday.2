.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)gettimeofday.2	6.3 (Berkeley) %G%
.\"
.TH GETTIMEOFDAY 2 ""
.UC 4
.SH NAME
gettimeofday, settimeofday \- get/set date and time
.SH SYNOPSIS
.nf
.ft B
#include <sys/time.h>
.PP
.ft B
gettimeofday(tp, tzp)
struct timeval *tp;
struct timezone *tzp;
.PP
.ft B
settimeofday(tp, tzp)
struct timeval *tp;
struct timezone *tzp;
.fi
.SH DESCRIPTION
.I Gettimeofday
returns the system's notion of the current Greenwich time,
and if
.I tzp
is nonzero,
the current time zone.  Time returned is expressed relative
in seconds and microseconds since midnight January 1, 1970.
.PP
The structures pointed to by
.I tp
and
.I tzp
are defined in 
.I <sys/time.h>
as:
.PP
.nf
.RS
.DT
struct timeval {
	long	tv_sec;		/* seconds since Jan. 1, 1970 */
	long	tv_usec;		/* and microseconds */
};
.sp 1
struct timezone {
	int	tz_minuteswest;	/* of Greenwich */
	int	tz_dsttime;	/* type of dst correction to apply */
};
.RE
.fi
.PP
The 
.I timezone
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
.PP
Only the super-user may issue the
.I settimeofday
call.  If
.I tzp
is zero the current time zone is not changed.
.SH RETURN
A 0 return value indicates that the call succeeded.
A \-1 return value indicates an error occurred, and in this
case an error code is stored into the global variable \fIerrno\fP.
.SH "ERRORS
The following error codes may be set in \fIerrno\fP:
.TP 15
[EFAULT]
An argument address referenced invalid memory.
.TP 15
[EPERM]
A user other than the super-user attempted to set the time.
.SH "SEE ALSO"
date(1), netdate(1), adjtime(2), ctime(3), timedaemon(8)
.SH BUGS
Time is never correct enough to believe the microsecond
values, although the
.I timedaemon
mechanism allows
local clusters of systems to synchronize their clocks
to within a few milliseconds.
