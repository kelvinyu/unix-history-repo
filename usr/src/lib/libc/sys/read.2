.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     @(#)read.2	6.9 (Berkeley) %G%
.\"
.Dd 
.Dt READ 2
.Os BSD 4
.Sh NAME
.Nm read ,
.Nm readv
.Nd read input
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <sys/types.h>
.Fd #include <sys/uio.h>
.Ft ssize_t
.Fn read "int d" "void *buf" "size_t nbytes"
.Ft int
.Fn readv "int d" "struct iovec *iov" "int iovcnt"
.Sh DESCRIPTION
.Fn Read
attempts to read
.Fa nbytes
of data from the object referenced by the descriptor
.Fa d
into the buffer pointed to by
.Fa buf .
.Fn Readv
performs the same action, but scatters the input data
into the 
.Fa iovcnt
buffers specified by the members of the
.Fa iov
array: iov[0], iov[1], ..., iov[iovcnt\|\-\|1].
.Pp
For 
.Fn readv ,
the 
.Fa iovec
structure is defined as
.Bd -literal -offset indent -compact
struct iovec {
	void *iov_base;
	int iov_len;
};
.Ed
.Pp
Each 
.Fa iovec
entry specifies the base address and length of an area
in memory where data should be placed. 
.Fn Readv
will always fill an area completely before proceeding
to the next.
.Pp
On objects capable of seeking, the
.Fn read
starts at a position
given by the pointer associated with
.Fa d
(see
.Xr lseek 2 ) .
Upon return from
.Fn read ,
the pointer is incremented by the number of bytes actually read.
.Pp
Objects that are not capable of seeking always read from the current
position.  The value of the pointer associated with such an
object is undefined.
.Pp
Upon successful completion,
.Fn read
and
.Fn readv
return the number of bytes actually read and placed in the buffer.
The system guarantees to read the number of bytes requested if
the descriptor references a normal file that has that many bytes left
before the end-of-file, but in no other case.
.Pp
.Sh RETURN VALUES
If successful, the
number of bytes actually read is returned. Upon reading end-of-file,
zero is returned.
Otherwise, a -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Read
and
.Fn readv
will succeed unless:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa D
is not a valid file or socket descriptor open for reading.
.It Bq Er EFAULT
.Fa Buf
points outside the allocated address space.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.It Bq Er EINTR
A read from a slow device was interrupted before
any data arrived by the delivery of a signal.
.It Bq Er EINVAL
The pointer associated with
.Fa d
was negative.
.It Bq Er EAGAIN
The file was marked for non-blocking I/O,
and no data were ready to be read.
.El
.Pp
In addition, 
.Fn readv
may return one of the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa Iovcnt
was less than or equal to 0, or greater than 16.
.It Bq Er EINVAL
One of the
.Fa iov_len
values in the
.Fa iov
array was negative.
.It Bq Er EINVAL
The sum of the
.Fa iov_len
values in the
.Fa iov
array overflowed a 32-bit integer.
.It Bq Er EFAULT
Part of the
.Fa iov
points outside the process's allocated address space.
.El
.Sh SEE ALSO
.Xr dup 2 ,
.Xr fcntl 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh STANDARDS
.Fn Read
is expected to conform to IEEE Std 1003.1-1988
.Pq Dq Tn POSIX .
.Sh HISTORY
The
.Fn readv
function call
appeared in
.Bx 4.2 .
A
.Nm read
function call
appeared in
Version 6 AT&T UNIX.
