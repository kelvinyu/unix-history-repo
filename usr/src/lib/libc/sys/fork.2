.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.roff%
.\"
.\"	@(#)fork.2	6.6 (Berkeley) %G%
.\"
.Dd 
.Dt FORK 2
.Os BSD 4
.Sh NAME
.Nm fork
.Nd create a new process
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft pid_t
.Fn fork void
.Sh DESCRIPTION
.Fn Fork
causes creation of a new process.
The new process (child process) is an exact copy of the
calling process (parent process) except for the following:
.Bl -bullet -offset indent
.It
The child process has a unique process ID.
.It
The child process has a different parent
process ID (i.e., the process ID of the parent process).
.It
The child process has its own copy of the parent's descriptors.
These descriptors reference the same underlying objects, so that,
for instance, file pointers in file objects are shared between
the child and the parent, so that an
.Xr lseek 2
on a descriptor in the child process can affect a subsequent
.Xr read
or
.Xr write
by the parent.
This descriptor copying is also used by the shell to
establish standard input and output for newly created processes
as well as to set up pipes.
.It
The child processes resource utilizations
are set to 0; see
.Xr setrlimit 2 .
.El
.Sh RETURN VALUES
Upon successful completion,
.Fn fork
returns a value
of 0 to the child process and returns the process ID of the child
process to the parent process.  Otherwise, a value of -1 is returned
to the parent process, no child process is created, and the global
variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Fork
will fail and no child process will be created if:
.Bl -tag -width [EAGAIN]
.It Bq Er EAGAIN
The system-imposed limit on the total
number of processes under execution would be exceeded.
This limit is configuration-dependent.
.It Bq Er EAGAIN
The system-imposed limit
.Dv MAXUPRC
.Pq Aq Pa sys/param.h
on the total number of
processes under execution by a single user would be exceeded.
.It Bq Er ENOMEM
There is insufficient swap space for the new process.
.El
.Sh SEE ALSO
.Xr execve 2 ,
.Xr wait 2
.Sh HISTORY
A
.Fn fork 2
function call appeared in
.At v6 .
