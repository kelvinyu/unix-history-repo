.\" Copyright (c) 1989 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)setmode.3	5.1 (Berkeley) %G%
.\"
.TH SETMODE 3 ""
.UC 7
.SH NAME
getmode, setmode \- modify mode bits
.SH SYNOPSIS
.nf
.ft B
getmode(mode)
mode_t mode;

setmode(mode_str)
char *mode_str;
.ft R
.fi
.SH DESCRIPTION
.I Getmode
returns the file permission bits
.I mode
as altered by the string specified to
.IR setmode .
While only the mode bits are altered, other parts of the file mode
may be examined.
.PP
.I Setmode
takes an absolute (octal) or symbolic value, as described in
.IR chmod (1),
as an argument.
Because some of the symbolic values are relative to the file
creation mask,
.I setmode
may call
.IR umask (2).
If this occurs, the file creation mask will be restored before
.I setmode
returns.
If the calling program changes the value of its file creation mask
after calling
.IR setmode ,
.I setmode
must be called again if
.I getmode
is to modify future file modes correctly.
.PP
If the mode passed to
.I setmode
is valid,
.I setmode
returns 0; otherwise it returns -1.
.SH ERRORS
Neither
.I getmode
or
.I setmode
set the external variable
.IR errno .
.SH ENVIRONMENT
.SH SEE ALSO
chmod(1), stat(2), umask(2)
.SH STANDARDS
