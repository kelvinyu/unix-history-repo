.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     @(#)getsubopt.3	5.4 (Berkeley) %G%
.\"
.Dd 
.Dt GETSUBOPT 3
.Os
.Sh NAME
.Nm getsubopt
.Nd get sub options from an argument
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft int
.Fn getsubopt "char **optionp" "char * const *tokens" "char **valuep"
.Sh DESCRIPTION
The
.Fn getsubopt
parses a string containing tokens delimited by one or more tab, space or
comma
.Pq Ql \&,
characters.
It is intended for use in parsing groups of option arguments provided
as part of a utility command line.
.Pp
The argument
.Fa optionp
is a pointer to a pointer to the string.
The argument
.Fa tokens
is a pointer to a
.Dv NULL Ns -terminated
array of pointers to strings.
.Pp
The
.Fn getsubopt
function
returns the zero-based offset of the pointer in the
.Fa tokens
array referencing a string which matches the first token
in the string, or, \-1 if the string contains no tokens or
.Fa tokens
does not contain a matching string.
.Pp
If the token is of the form ``name=value'', the location referenced by
.Fa valuep
will be set to point to the start of the ``value'' portion of the token.
.Pp
On return from
.Fn getsubopt ,
.Fa optionp
will be set to point to the start of the next token in the string,
or the null at the end of the string if no more tokens are present.
The external variable
.Fa suboptarg
will be set to point to the start of the current token, or
.Dv NULL
if no
tokens were present.
The argument
.Fa valuep
will be set to point to the ``value'' portion of the token, or
.Dv NULL
if no ``value'' portion was present.
.Sh EXAMPLE
.Bd -literal -compact
char *tokens[] = {
	#define	ONE	0
		"one",
	#define	TWO	1
		"two",
	NULL
};

\&...

extern char *optarg, *suboptarg;
char *options, *value;

while ((ch = getopt(argc, argv, "ab:")) != \-1) {
	switch(ch) {
	case 'a':
		/* process ``a'' option */
		break;
	case 'b':
		options = optarg;
		while (*options) {
			switch(getsubopt(&options, tokens, &value)) {
			case ONE:
				/* process ``one'' sub option */
				break;
			case TWO:
				/* process ``two'' sub option */
				if (!value)
					error("no value for two");
				i = atoi(value);
				break;
			case \-1:
				if (suboptarg)
					error("illegal sub option %s",
					  suboptarg);
				else
					error("missing sub option");
				break;
		}
		break;
	}
.Ed
.Sh SEE ALSO
.Xr getopt 3 ,
.Xr strsep 3
.Sh HISTORY
The
.Fn getsubopt
function is
.Ud .
