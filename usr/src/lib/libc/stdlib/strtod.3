.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     @(#)strtod.3	5.2 (Berkeley) %G%
.\"
.Dd 
.Dt STRTOD 3
.Os
.Sh NAME
.Nm strtod
.Nd convert
.Tn ASCII
string to double
.Sh SYNOPSIS
.Fd #include <stdlib.h>
.Ft double
.Fn strtod "const char *nptr" "char **endptr"
.Sh DESCRIPTION
The
.Fn strtod
function converts the initial portion of the string 
pointed to by
.Fa nptr
to
.Em double
representation.
.Pp
The expected form of the string is an optional plus (``+'') or minus
sign (``-'') followed by a sequence of digits optionally containing
a decimal-point character, optionally followed by an exponent.
An exponent consists of an ``E'' or ``e'', followed by an optional plus
or minus sign, followed by a sequence of digits.
.Pp
Leading white-space characters in the string (as defined by the
.Xr isspace 3
function) are skipped.
.Sh RETURN VALUES
The
.Fn strtod
function returns the converted value, if any.
.Pp
If
.Fa endptr
is not
.Dv NULL ,
a pointer to the character after the last character used
in the conversion is stored in the location referenced by
.Fa endptr .
.Pp
If no conversion is performed, zero is returned and the value of
.Fa nptr
is stored in the location referenced by
.Fa endptr .
.Pp
If the correct value would cause overflow, plus or minus
.Dv HUGE_VAL
is returned (according to the sign of the value), and
.Dv ERANGE
is stored in
.Va errno .
If the correct value would cause underflow, zero is
returned and
.Dv ERANGE
is stored in 
.Va errno .
.Sh ERRORS
.Bl -tag -width [ERANGE]
.It Bq Er ERANGE
Overflow or underflow occurred.
.Sh SEE ALSO
.Xr atof 3 ,
.Xr atoi 3 ,
.Xr atol 3 ,
.Xr strtol 3 ,
.Xr strtoul 3
.Sh STANDARDS
The
.Fn strtod
function
conforms to
.St -ansiC .
.Sh BUGS
This manual page represents intent instead of actual practice.
The
.Fn strtod
function is not currently available.
