


CRYPT(1)		      1989			 CRYPT(1)



NNAAMMEE
     crypt - encode/decode

SSYYNNOOPPSSIISS
     ccrryypptt [ password ]

DDEESSCCRRIIPPTTIIOONN
     TThhiiss iinntteerrffaaccee iiss oobbssoolleetteedd bbyy ddeess((11))..

     _C_r_y_p_t reads from the standard input and writes on the stan-
     dard output.  The _p_a_s_s_w_o_r_d is a key that selects a particu-
     lar transformation.  If no _p_a_s_s_w_o_r_d is given, _c_r_y_p_t demands
     a key from the terminal and turns off printing while the key
     is being typed in.  _C_r_y_p_t encrypts and decrypts with the
     same key:

	  crypt key <clear >cypher
	  crypt key <cypher | pr

     will print the clear.

     Files encrypted by _c_r_y_p_t are compatible with those treated
     by the editor _e_d in encryption mode.

     The security of encrypted files depends on three factors:
     the fundamental method must be hard to solve; direct search
     of the key space must be infeasible; `sneak paths' by which
     keys or cleartext can become visible must be minimized.

     _C_r_y_p_t implements a one-rotor machine designed along the
     lines of the German Enigma, but with a 256-element rotor.
     Methods of attack on such machines are known, but not
     widely; moreover the amount of work required is likely to be
     large.

     The transformation of a key into the internal settings of
     the machine is deliberately designed to be expensive, i.e.
     to take a substantial fraction of a second to compute.  How-
     ever, if keys are restricted to (say) three lower-case
     letters, then encrypted files can be read by expending only
     a substantial fraction of five minutes of machine time.

     Since the key is an argument to the _c_r_y_p_t command, it is
     potentially visible to users executing _p_s(1) or a deriva-
     tive.  To minimize this possibility, _c_r_y_p_t takes care to
     destroy any record of the key immediately upon entry.  No
     doubt the choice of keys and key security are the most
     vulnerable aspect of _c_r_y_p_t.

FFIILLEESS
     /dev/tty for typed key




Printed 7/27/90             September				1






CRYPT(1)		      1989			 CRYPT(1)



SSEEEE AALLSSOO
     ed(1), crypt(3), makekey(8)

BBUUGGSS
     There is no warranty of merchantability nor any warranty of
     fitness for a particular purpose nor any other warranty,
     either express or implied, as to the accuracy of the
     enclosed materials or as to their suitability for any par-
     ticular purpose.  Accordingly, Bell Telephone Laboratories
     assumes no responsibility for their use by the recipient.
     Further, Bell Laboratories assumes no obligation to furnish
     any assistance of any kind whatsoever, or to furnish any
     additional information or documentation.










































Printed 7/27/90             September				2



