(File vector.l)
(vset-long lambda int:vset vsize lessp <& < or fixp error vectorip not cond vset-macro)
(vset-word lambda int:vset vsize cdr * lessp <& < or fixp error vectorip not cond vset-macro)
(vset-byte lambda int:vset vsize cdr * lessp <& < or fixp error vectorip not cond vset-macro)
(vset lambda int:vset vsize lessp <& < or fixp error vectorp not cond vset-macro)
(vref-long lambda int:vref vsize lessp <& < or fixp error vectorip not cond vref-macro)
(vref-word lambda int:vref vsize cdr * lessp <& < or fixp error vectorip not cond vref-macro)
(vref-byte lambda int:vref vsize cdr * lessp <& < or fixp error vectorip not cond vref-macro)
(vref lambda int:vref vsize lessp <& < or fixp error vectorp not cond vref-macro)
(vector-long lexpr cdr arg int:vset <& < |1-| do new-vector-long let vector-macro)
(vector-word lexpr cdr arg int:vset <& < |1-| do new-vector-word let vector-macro)
(vector-byte lexpr cdr arg int:vset <& < |1-| do new-vector-byte let vector-macro)
(vector lexpr cdr arg int:vset <& < |1-| do new-vector let vector-macro)
