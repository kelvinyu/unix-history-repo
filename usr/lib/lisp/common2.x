(File common2.l)
(subst-eqp lambda cdr car subst-eqp or dtpr eq cond)
(subst-eq lambda cdr subst-eq cons car subst-eqp dtpr and eq cond)
(trace-funp lambda caadar caar quote eq car cond dtpr memq symbolp and or)
(baktraceprint lambda car dtpr let print atom terpr nwritn cdr >& > patom not cond)
(showstack-baktrace lambda |1-| baktraceprint Internal-bcdcall getdisc bcdp cxr getd symbolp funcall quote subst-eq trace-funp return int:showstack terpr bigp not and zerop equal or cdr fixp setq car eq cond null do let)
(baktrace nlambda showstack-baktrace)
(showstack nlambda showstack-baktrace)
(filestat:ino lambda quote concat error cadddddddddddr dtpr and cond)
(filestat:rdev lambda quote concat error caddddddddddr dtpr and cond)
(filestat:dev lambda quote concat error cadddddddddr dtpr and cond)
(filestat:ctime lambda quote concat error caddddddddr dtpr and cond)
(filestat:mtime lambda quote concat error cadddddddr dtpr and cond)
(filestat:atime lambda quote concat error caddddddr dtpr and cond)
(filestat:size lambda quote concat error cadddddr dtpr and cond)
(filestat:gid lambda quote concat error caddddr dtpr and cond)
(filestat:uid lambda quote concat error cadddr dtpr and cond)
(filestat:nlink lambda quote concat error caddr dtpr and cond)
(filestat:type lambda quote concat error cadr dtpr and cond)
(filestat:mode lambda quote concat error car dtpr and cond)
(g00527::args lambda cadr quote list)
(g00522::arg lambda cadr quote list)
(g00517::symeval lambda cadr quote list)
(g00512::plist lambda cadr quote list)
(g00507::get lambda caddr cadr quote list)
(g00502::arraycall lambda quote list)
(g00497::nth lambda caddr cadr quote list)
(g00492::cxr lambda caddr cadr quote list)
(g00487::cddddr lambda cadr quote list)
(g00482::cdaddr lambda cadr quote list)
(g00477::cddadr lambda cadr quote list)
(g00472::cdaadr lambda cadr quote list)
(g00467::cdddar lambda cadr quote list)
(g00462::cdadar lambda cadr quote list)
(g00457::cddaar lambda cadr quote list)
(g00452::cdaaar lambda cadr quote list)
(g00447::cdddr lambda cadr quote list)
(g00442::cdadr lambda cadr quote list)
(g00437::cddar lambda cadr quote list)
(g00432::cdaar lambda cadr quote list)
(g00427::cddr lambda cadr quote list)
(g00422::cdar lambda cadr quote list)
(g00417::cdr lambda cadr quote list)
(g00412::cadddr lambda cadr quote list)
(g00407::caaddr lambda cadr quote list)
(g00402::cadadr lambda cadr quote list)
(g00397::caaadr lambda cadr quote list)
(g00392::caddar lambda cadr quote list)
(g00387::caadar lambda cadr quote list)
(g00382::cadaar lambda cadr quote list)
(g00377::caaaar lambda cadr quote list)
(g00372::caddr lambda cadr quote list)
(g00367::caadr lambda cadr quote list)
(g00362::cadar lambda cadr quote list)
(g00357::caaar lambda cadr quote list)
(g00352::cadr lambda cadr quote list)
(g00347::caar lambda cadr quote list)
(g00342::car lambda cadr quote list)
(defsetf macro cons quote list cdddr caddr cadr)
(setf macro getdisc bcdp eq dtpr cxr getd append cons apply return get setq and car do list quote error symbolp or atom cond cdddr caddr cadr)
(tconc lambda rplaca cdr rplacd dtpr ncons setq cons atom cond)
(tailp lambda go cdr setq eq return atom cond prog and)
(subpr lambda quote and cdar caar null cons eq not neq or return car subpr cdr setq go atom cond prog)
(subpair lambda quote or subpr cond)
(remove lambda cons cdr remove car equal atom cond)
(quote!-expr-mac lambda cdr cddr quote!-expr-mac cadr car eq quote list atom null cond)
(quote! macro quote!-expr-mac cdr)
(neq macro quote list caddr cadr)
(merge lambda merge1 quote function setq null cond)
(lsubst lambda cons cdr lsubst copy nconc car equal eq atom null cond)
(ldiff lambda go rplacd error return cdr car cons ncons setq prog null eq cond)
(lconc lambda rplaca cdr rplacd dtpr cons last setq atom cond return prog)
(kwote lambda quote list)
(insert lambda - go sub1 cddr cadr rplaca cons rplacd equal not Internal-bcdcall getdisc eq bcdp cxr getd symbolp and car funcall <& < Cnth add1 cdr / length prog quote function setq error atom list null cond)
(dsubst lambda go cdr rplacd and dsubst rplaca equal car symbolp atom copy return setq eq cond prog)
(Cnth lambda go |1-| cdr setq return eq atom or prog cons >& > cond)
(attach lambda error rplaca cdr car cons rplacd dtpr cond)
($patom1 lambda patom)
(charcnt lambda nwritn cdr -)
(tab lexpr - printblanks terpri nwritn cdr >& cond arg setq prog)
(listp lambda null dtpr or)
(nth-macro macro nthcdr-macro-internal quote list typep eq cond caddr cadr)
(nthcdr* lambda |1-| bigp not cdr null and zerop do)
(nthcdr-macro-internal lambda |1+| quote list equal = do)
(nthcdr-macro macro quote list nthcdr-macro-internal numberp cond caddr cadr)
(nthcdr lambda |1-| nthcdr cons lessp bigp not cdr null and zerop cond)
(charcnt lambda nwritn cdr -)
(linelength nlambda setq car numberp null cond)
(printblanks lambda |1-| <& do cadr patom cond memq let)
(msgmake lambda dtpr cdr msgmake setq eq and append quote cons list null cond car)
(msg macro cdr msgmake append quote cons)
