ACTFILE	/usr/src/usr.lib/libpc/ACTFILE.c	/^ACTFILE(curfile)$/
ADDT	/usr/src/usr.lib/libpc/ADDT.c	/^ADDT(result0, left, right, siz)$/
APPEND	/usr/src/usr.lib/libpc/APPEND.c	/^APPEND(filep)$/
ARGV	/usr/src/usr.lib/libpc/ARGV.c	/^ARGV(subscript, var, siz)$/
ASENTRY	/usr/src/lib/libc/vax/gen/DEFS.h	/^#define	ASENTRY(x)	.globl x; .align 2; x: .word 0;/
ASRT	/usr/src/usr.lib/libpc/ASRT.c	/^ASRT(cond)$/
ASRTS	/usr/src/usr.lib/libpc/ASRTS.c	/^ASRTS(cond, stmt)$/
ASSERT	/usr/src/lib/libc/gen/malloc.c	/^#define ASSERT(p) if(!(p))botch("p");else$/
ATAN	/usr/src/usr.lib/libpc/ATAN.c	/^ATAN(value)$/
BUFF	/usr/src/usr.lib/libpc/BUFF.c	/^BUFF(amount)$/
CALL	/usr/src/lib/libc/vax/sys/SYS.h	/^#define	CALL(x,y)	calls $x, _\/**\/y$/
CARD	/usr/src/usr.lib/libpc/CARD.c	/^CARD(setptr, siz)$/
CASERNG	/usr/src/usr.lib/libpc/CASERNG.c	/^CASERNG(val)$/
CATCHERR	/usr/src/usr.lib/libpc/CATCHERR.c	/^CATCHERR(err, todo)$/
CHR	/usr/src/usr.lib/libpc/CHR.c	/^CHR(value)$/
CLCK	/usr/src/usr.lib/libpc/CLCK.c	/^CLCK()$/
COS	/usr/src/usr.lib/libpc/COS.c	/^COS(value)$/
CTRL	/usr/src/usr.lib/libtermlib/tgoto.c	/^#define	CTRL(c)	('c' & 037)$/
CTTOT	/usr/src/usr.lib/libpc/CTTOT.c	/^CTTOT(result0, lwrbnd, uprbnd, paircnt, singcnt, d/
DATE	/usr/src/usr.lib/libpc/DATE.c	/^DATE(alfap)$/
DEFNAME	/usr/src/usr.lib/libpc/DEFNAME.c	/^DEFNAME(filep, name, maxnamlen, datasize)$/
DFDISPOSE	/usr/src/usr.lib/libpc/DFDISPOSE.c	/^DFDISPOSE(var, size)$/
DISPOSE	/usr/src/usr.lib/libpc/DISPOSE.c	/^DISPOSE(var, siz)$/
ENTRY	/usr/src/lib/libc/vax/gen/DEFS.h	/^#define	ENTRY(x)	.globl _\/**\/x; .align 2; _\/**\/x: /
ERROR	/usr/src/usr.lib/libpc/ERROR.c	/^ERROR(msg, d1, d2)$/
EXCEPT	/usr/src/usr.lib/libpc/EXCEPT.c	/^EXCEPT(signum, type)$/
EXP	/usr/src/usr.lib/libpc/EXP.c	/^EXP(value)$/
EXPO	/usr/src/usr.lib/libpc/EXPO.c	/^EXPO(value)$/
FCALL	/usr/src/usr.lib/libpc/FCALL.c	/^FCALL(save, frtn)$/
FLUSH	/usr/src/usr.lib/libpc/FLUSH.c	/^FLUSH(curfile)$/
FNIL	/usr/src/usr.lib/libpc/FNIL.c	/^FNIL(curfile)$/
FRTN	/usr/src/usr.lib/libpc/FRTN.c	/^FRTN(frtn, save)$/
FSAV	/usr/src/usr.lib/libpc/FSAV.c	/^FSAV(entryaddr, cbn, frtn) $/
GET	/usr/src/usr.lib/libpc/GET.c	/^GET(curfile)$/
GETNAME	/usr/src/usr.lib/libpc/GETNAME.c	/^GETNAME(filep, name, namlim, datasize)$/
GETWDERR	/usr/src/lib/libc/gen/getwd.c	/^#define GETWDERR(s)	strcpy(pathname, (s));$/
HALT	/usr/src/usr.lib/libpc/HALT.c	/^HALT()$/
IN	/usr/src/usr.lib/libpc/IN.c	/^IN(element, lower, upper, setptr)$/
INCT	/usr/src/usr.lib/libpc/INCT.c	/^INCT(element, paircnt, singcnt, data)$/
IOSYNC	/usr/src/usr.lib/libpc/IOSYNC.c	/^IOSYNC(curfile)$/
LINO	/usr/src/usr.lib/libpc/LINO.c	/^LINO()$/
LLIMIT	/usr/src/usr.lib/libpc/LLIMIT.c	/^LLIMIT(curfile, limit)$/
LN	/usr/src/usr.lib/libpc/LN.c	/^LN(value)$/
MAX	/usr/src/usr.lib/libpc/MAX.c	/^MAX(width, reduce, min)$/
MULT	/usr/src/usr.lib/libpc/MULT.c	/^MULT(result0, left, right, siz)$/
Mmain	/usr/src/usr.lib/libln/main.c	/^main(){$/
Mtc1	/usr/src/usr.lib/libtermlib/tc1.c	/^main(argc, argv) char **argv; {$/
Mtc2	/usr/src/usr.lib/libtermlib/tc2.c	/^main(argc, argv) char **argv; {$/
Mtc3	/usr/src/usr.lib/libtermlib/tc3.c	/^main(argc, argv) char **argv; {$/
Mtest	/usr/src/usr.lib/libcurses/test.c	/^main()$/
NAM	/usr/src/usr.lib/libpc/NAM.c	/^NAM(val, name)$/
NEW	/usr/src/usr.lib/libpc/NEW.c	/^NEW(var, size)$/
NIL	/usr/src/usr.lib/libpc/NIL.c	/^NIL(ptr)$/
NewOverwrite	/usr/src/usr.lib/libcurses/test.c	/^NewOverwrite(win1, win2)$/
PACK	/usr/src/usr.lib/libpc/PACK.c	/^PACK(i, a, z, size_a, lb_a, ub_a, size_z)$/
PAGE	/usr/src/usr.lib/libpc/PAGE.c	/^PAGE(curfile)$/
PCEXIT	/usr/src/usr.lib/libpc/PCEXIT.c	/^PCEXIT(code)$/
PCLOSE	/usr/src/usr.lib/libpc/PCLOSE.c	/^PCLOSE(level)$/
PCSTART	/usr/src/usr.lib/libpc/PCSTART.c	/^PCSTART(mode)$/
PERROR	/usr/src/usr.lib/libpc/PERROR.c	/^PERROR(msg, fname)$/
PFCLOSE	/usr/src/usr.lib/libpc/PFCLOSE.c	/^PFCLOSE(filep, lastuse)$/
PFLUSH	/usr/src/usr.lib/libpc/PFLUSH.c	/^PFLUSH()$/
PMFLUSH	/usr/src/usr.lib/libpc/PMFLUSH.c	/^PMFLUSH(cntrs, rtns, bufaddr)$/
PRED	/usr/src/usr.lib/libpc/PRED.c	/^PRED(value, lower, upper)$/
PSEUDO	/usr/src/lib/libc/vax/sys/SYS.h	/^#define	PSEUDO(x,y)	ENTRY(x); chmk $SYS_\/**\/y$/
PUT	/usr/src/usr.lib/libpc/PUT.c	/^PUT(curfile)$/
RANDOM	/usr/src/usr.lib/libpc/RANDOM.c	/^RANDOM()$/
RANG4	/usr/src/usr.lib/libpc/RANG4.c	/^RANG4(value, lower, upper)$/
READ4	/usr/src/usr.lib/libpc/READ4.c	/^READ4(curfile)$/
READ8	/usr/src/usr.lib/libpc/READ8.c	/^READ8(curfile)$/
READC	/usr/src/usr.lib/libpc/READC.c	/^READC(curfile)$/
READE	/usr/src/usr.lib/libpc/READE.c	/^READE(curfile, name)$/
READLN	/usr/src/usr.lib/libpc/READLN.c	/^READLN(curfile)$/
RELEQ	/usr/src/usr.lib/libpc/RELEQ.c	/^RELEQ(siz, str1, str2)$/
RELNE	/usr/src/usr.lib/libpc/RELNE.c	/^RELNE(siz, str1, str2)$/
RELSGE	/usr/src/usr.lib/libpc/RELSGE.c	/^RELSGE(siz, str1, str2)$/
RELSGT	/usr/src/usr.lib/libpc/RELSGT.c	/^RELSGT(siz, str1, str2)$/
RELSLE	/usr/src/usr.lib/libpc/RELSLE.c	/^RELSLE(siz, str1, str2)$/
RELSLT	/usr/src/usr.lib/libpc/RELSLT.c	/^RELSLT(siz, str1, str2)$/
RELTGE	/usr/src/usr.lib/libpc/RELTGE.c	/^RELTGE(bytecnt, left, right)$/
RELTGT	/usr/src/usr.lib/libpc/RELTGT.c	/^RELTGT(bytecnt, left, right)$/
RELTLE	/usr/src/usr.lib/libpc/RELTLE.c	/^RELTLE(bytecnt, left, right)$/
RELTLT	/usr/src/usr.lib/libpc/RELTLT.c	/^RELTLT(bytecnt, left, right)$/
REMOVE	/usr/src/usr.lib/libpc/REMOVE.c	/^REMOVE(name, namlim)$/
RESET	/usr/src/usr.lib/libpc/RESET.c	/^RESET(filep, name, maxnamlen, datasize)$/
REWRITE	/usr/src/usr.lib/libpc/REWRITE.c	/^REWRITE(filep, name, maxnamlen, datasize)$/
ROUND	/usr/src/usr.lib/libpc/ROUND.c	/^ROUND(value)$/
ROUNDDOWN	/usr/src/lib/libc/vax/csu/gmon.h	/^#define ROUNDDOWN(x,y)	(((x)\/(y))*(y))$/
ROUNDUP	/usr/src/lib/libc/vax/csu/gmon.h	/^#define ROUNDUP(x,y)	((((x)+(y)-1)\/(y))*(y))$/
RSNG4	/usr/src/usr.lib/libpc/RSNG4.c	/^RSNG4(value, upper)$/
SCLCK	/usr/src/usr.lib/libpc/SCLCK.c	/^SCLCK()$/
SEED	/usr/src/usr.lib/libpc/SEED.c	/^SEED(value)$/
SEEK	/usr/src/usr.lib/libpc/SEEK.c	/^SEEK(curfile, loc)$/
SIN	/usr/src/usr.lib/libpc/SIN.c	/^SIN(value)$/
SQRT	/usr/src/usr.lib/libpc/SQRT.c	/^SQRT(value)$/
STLIM	/usr/src/usr.lib/libpc/STLIM.c	/^STLIM(limit)$/
SUBSC	/usr/src/usr.lib/libpc/SUBSC.c	/^SUBSC(i, lower, upper)$/
SUBSCZ	/usr/src/usr.lib/libpc/SUBSCZ.c	/^SUBSCZ(value, upper)$/
SUBT	/usr/src/usr.lib/libpc/SUBT.c	/^SUBT(result0, left, right, siz)$/
SUCC	/usr/src/usr.lib/libpc/SUCC.c	/^SUCC(value, lower, upper)$/
SYSCALL	/usr/src/lib/libc/vax/sys/Ovadvise.c	/^SYSCALL(vadvise)$/
TELL	/usr/src/usr.lib/libpc/TELL.c	/^TELL(curfile)$/
TEOF	/usr/src/usr.lib/libpc/TEOF.c	/^TEOF(filep)$/
TEOLN	/usr/src/usr.lib/libpc/TEOLN.c	/^TEOLN(filep)$/
TIME	/usr/src/usr.lib/libpc/TIME.c	/^TIME(alfap)$/
TRUNC	/usr/src/usr.lib/libpc/TRUNC.c	/^TRUNC(value)$/
UNIT	/usr/src/usr.lib/libpc/UNIT.c	/^UNIT(curfile)$/
UNPACK	/usr/src/usr.lib/libpc/UNPACK.c	/^UNPACK(i, a, z, size_a, lb_a, ub_a, size_z)$/
UNSYNC	/usr/src/usr.lib/libpc/UNSYNC.c	/^UNSYNC(curfile)$/
VOID	/usr/src/usr.lib/libcurses/curses.h	/^# define	VOID(x)	(__void__ = (int) (x))$/
WRITEC	/usr/src/usr.lib/libpc/WRITEC.c	/^WRITEC(curfile, d1, d2)$/
WRITEF	/usr/src/usr.lib/libpc/WRITEF.c	/^WRITEF(curfile, d1, d2, d3, d4, d5, d6, d7, d8)$/
WRITES	/usr/src/usr.lib/libpc/WRITES.c	/^WRITES(curfile, d1, d2, d3, d4)$/
WRITLN	/usr/src/usr.lib/libpc/WRITLN.c	/^WRITLN(curfile)$/
_cleanup	/usr/src/lib/libc/stdio/flsbuf.c	/^_cleanup()$/
_doscan	/usr/src/lib/libc/stdio/doscan.c	/^_doscan(iop, fmt, argp)$/
_filbuf	/usr/src/lib/libc/stdio/filbuf.c	/^_filbuf(iop)$/
_flsbuf	/usr/src/lib/libc/stdio/flsbuf.c	/^_flsbuf(c, iop)$/
_getccl	/usr/src/lib/libc/stdio/doscan.c	/^_getccl(s)$/
_innum	/usr/src/lib/libc/stdio/doscan.c	/^_innum(ptr, type, len, size, iop, eofptr)$/
_instr	/usr/src/lib/libc/stdio/doscan.c	/^_instr(ptr, type, len, iop, eofptr)$/
_mcleanup	/usr/src/lib/libc/vax/csu/gmon.c	/^_mcleanup()$/
_putchar	/usr/src/usr.lib/libcurses/cr_put.c	/^_putchar(c)$/
_puts	/usr/src/usr.lib/libcurses/curses.h	/^# define	_puts(s)	tputs(s, 0, _putchar);$/
_sprintw	/usr/src/usr.lib/libcurses/printw.c	/^_sprintw(win, fmt, args)$/
_sscans	/usr/src/usr.lib/libcurses/scanw.c	/^_sscans(win, fmt, args)$/
_strout	/usr/src/lib/libc/stdio/strout.c	/^_strout(count, string, adjust, file, fillch)$/
acos	/usr/src/usr.lib/libm/asin.c	/^acos(arg) double arg; {$/
addch	/usr/src/usr.lib/libcurses/curses.h	/^# define	addch(ch)	VOID(waddch(stdscr, ch))$/
additem	/usr/src/usr.lib/libdbm/dbm.c	/^additem(buf, item)$/
addstr	/usr/src/usr.lib/libcurses/curses.h	/^# define	addstr(str)	VOID(waddstr(stdscr, str))$/
advance	/usr/src/lib/libc/gen/regex.c	/^advance(lp, ep)$/
alarm	/usr/src/lib/libc/gen/alarm.c	/^alarm(secs)$/
allock	/usr/src/lib/libc/gen/malloc.c	/^allock()$/
allprint	/usr/src/usr.lib/libln/allprint.c	/^allprint(c)$/
alphasort	/usr/src/lib/libc/gen/scandir.c	/^alphasort(d1, d2)$/
any	/usr/src/lib/libc/net/gethostent.c	/^any(cp, match)$/
asctime	/usr/src/lib/libc/gen/ctime.c	/^asctime(t)$/
asin	/usr/src/usr.lib/libm/asin.c	/^asin(arg) double arg; {$/
asym	/usr/src/usr.lib/libm/gamma.c	/^asym(arg)$/
asympt	/usr/src/usr.lib/libm/j0.c	/^asympt(arg) double arg;{$/
atan	/usr/src/usr.lib/libm/atan.c	/^atan(arg)$/
atan2	/usr/src/usr.lib/libm/atan.c	/^atan2(arg1,arg2)$/
atoi	/usr/src/lib/libc/gen/atoi.c	/^atoi(p)$/
atol	/usr/src/lib/libc/gen/atol.c	/^atol(p)$/
backref	/usr/src/lib/libc/gen/regex.c	/^backref(i, lp)$/
blkclr	/usr/src/usr.lib/libpc/blkclr.c	/^blkclr(at, siz)$/
blkcpy	/usr/src/usr.lib/libpc/blkcpy.c	/^blkcpy(from, to, siz)$/
blkencrypt	/usr/src/lib/libc/net/ruserpass.c	/^blkencrypt(block, edflag)$/
botch	/usr/src/lib/libc/gen/malloc.c	/^botch(s)$/
box	/usr/src/usr.lib/libcurses/box.c	/^box(win, vert, hor)$/
brk	/usr/src/lib/libc/vax/csu/gmon.c	/^brk(addr)$/
cabs	/usr/src/usr.lib/libm/hypot.c	/^cabs(arg)$/
calchash	/usr/src/usr.lib/libdbm/dbm.c	/^calchash(item)$/
calloc	/usr/src/lib/libc/gen/calloc.c	/^calloc(num, size)$/
cclass	/usr/src/lib/libc/gen/regex.c	/^cclass(set, c, af)$/
ceil	/usr/src/usr.lib/libm/floor.c	/^ceil(d)$/
cfree	/usr/src/lib/libc/gen/calloc.c	/^cfree(p, num, size)$/
chkblk	/usr/src/usr.lib/libdbm/dbm.c	/^chkblk(buf)$/
clear	/usr/src/usr.lib/libcurses/curses.h	/^# define	clear()		VOID(wclear(stdscr))$/
clearbusy	/usr/src/lib/libc/gen/malloc.c	/^#define clearbusy(p) (union store *)((INT)(p)&~BUS/
clearerr	/usr/src/lib/libc/stdio/clrerr.c	/^clearerr(iop)$/
clearok	/usr/src/usr.lib/libcurses/curses.h	/^#define	clearok(win,bf)	 (win->_clear = bf)$/
closedir	/usr/src/lib/libc/gen/closedir.c	/^closedir(dirp)$/
closelog	/usr/src/lib/libc/gen/syslog.c	/^closelog()$/
clrbuf	/usr/src/usr.lib/libdbm/dbm.c	/^clrbuf(cp, n)$/
clrtobot	/usr/src/usr.lib/libcurses/curses.h	/^# define	clrtobot()	VOID(wclrtobot(stdscr))$/
clrtoeol	/usr/src/usr.lib/libcurses/curses.h	/^# define	clrtoeol()	VOID(wclrtoeol(stdscr))$/
cmpdatum	/usr/src/usr.lib/libdbm/dbm.c	/^cmpdatum(d1, d2)$/
cos	/usr/src/usr.lib/libm/sin.c	/^cos(arg)$/
cosh	/usr/src/usr.lib/libm/sinh.c	/^cosh(arg)$/
crmode	/usr/src/usr.lib/libcurses/curses.h	/^#define crmode() (_tty.sg_flags |= CBREAK, _rawmod/
crypt	/usr/src/lib/libc/gen/crypt.c	/^crypt(pw,salt)$/
ct_numb	/usr/src/lib/libc/gen/ctime.c	/^ct_numb(cp, n)$/
ctime	/usr/src/lib/libc/gen/ctime.c	/^ctime(t)$/
cvt	/usr/src/lib/libc/vax/gen/ecvt.c	/^cvt(arg, ndigits, decpt, sign, eflag)$/
dbm_access	/usr/src/usr.lib/libdbm/dbm.c	/^dbm_access(hash)$/
dbminit	/usr/src/usr.lib/libdbm/dbm.c	/^dbminit(file)$/
ddecode	/usr/src/lib/libc/vax/gen/disktab.c	/^ddecode(str, area)$/
deblkclr	/usr/src/lib/libc/net/ruserpass.c	/^char *deblkclr(blk)$/
deblknot	/usr/src/lib/libc/net/ruserpass.c	/^char *deblknot(blk)$/
delch	/usr/src/usr.lib/libcurses/curses.h	/^# define	delch()		VOID(wdelch(stdscr))$/
delete	/usr/src/usr.lib/libdbm/dbm.c	/^delete(key)$/
deleteln	/usr/src/usr.lib/libcurses/curses.h	/^# define	deleteln()	VOID(wdeleteln(stdscr))$/
delitem	/usr/src/usr.lib/libdbm/dbm.c	/^delitem(buf, n)$/
delwin	/usr/src/usr.lib/libcurses/delwin.c	/^delwin(win)$/
dgetent	/usr/src/lib/libc/vax/gen/disktab.c	/^dgetent(bp, name)$/
dgetflag	/usr/src/lib/libc/vax/gen/disktab.c	/^dgetflag(id)$/
dgetnum	/usr/src/lib/libc/vax/gen/disktab.c	/^dgetnum(id)$/
dgetstr	/usr/src/lib/libc/vax/gen/disktab.c	/^dgetstr(id, area)$/
dnamatch	/usr/src/lib/libc/vax/gen/disktab.c	/^dnamatch(np)$/
do_touch	/usr/src/usr.lib/libcurses/touchwin.c	/^do_touch(win)$/
domvcur	/usr/src/usr.lib/libcurses/refresh.c	/^domvcur(oy, ox, ny, nx)$/
dskip	/usr/src/lib/libc/vax/gen/disktab.c	/^dskip(bp)$/
dysize	/usr/src/lib/libc/gen/ctime.c	/^dysize(y)$/
echo	/usr/src/usr.lib/libcurses/curses.h	/^#define echo()	 (_tty.sg_flags |= ECHO, _echoit = /
ecvt	/usr/src/lib/libc/vax/gen/ecvt.c	/^ecvt(arg, ndigits, decpt, sign)$/
enblkclr	/usr/src/lib/libc/net/ruserpass.c	/^enblkclr(blk,str)		\/* ignores top bit of chars in /
enblknot	/usr/src/lib/libc/net/ruserpass.c	/^enblknot(blk,crp)$/
encrypt	/usr/src/lib/libc/gen/crypt.c	/^encrypt(block, edflag)$/
endfsent	/usr/src/lib/libc/gen/fstab.c	/^endfsent()$/
endgrent	/usr/src/lib/libc/gen/getgrent.c	/^endgrent()$/
endhostent	/usr/src/lib/libc/net/gethostent.c	/^endhostent()$/
endnetent	/usr/src/lib/libc/net/getnetent.c	/^endnetent()$/
endprotoent	/usr/src/lib/libc/net/getprotoent.c	/^endprotoent()$/
endpwent	/usr/src/lib/libc/gen/getpwent.c	/^endpwent()$/
endservent	/usr/src/lib/libc/net/getservent.c	/^endservent()$/
endwin	/usr/src/usr.lib/libcurses/endwin.c	/^endwin()$/
erase	/usr/src/usr.lib/libcurses/curses.h	/^# define	erase()		VOID(werase(stdscr))$/
erf	/usr/src/usr.lib/libm/erf.c	/^erf(arg) double arg;{$/
erfc	/usr/src/usr.lib/libm/erf.c	/^erfc(arg) double arg;{$/
execat	/usr/src/lib/libc/gen/execvp.c	/^execat(s1, s2, si)$/
execlp	/usr/src/lib/libc/gen/execvp.c	/^execlp(name, argv)$/
execvp	/usr/src/lib/libc/gen/execvp.c	/^execvp(name, argv)$/
exit	/usr/src/lib/libc/stdio/exit.c	/^exit(code)$/
exp	/usr/src/usr.lib/libm/exp.c	/^exp(arg)$/
fclose	/usr/src/lib/libc/stdio/flsbuf.c	/^fclose(iop)$/
fcvt	/usr/src/lib/libc/vax/gen/ecvt.c	/^fcvt(arg, ndigits, decpt, sign)$/
fdopen	/usr/src/lib/libc/stdio/fdopen.c	/^fdopen(fd, mode)$/
fetch	/usr/src/usr.lib/libdbm/dbm.c	/^fetch(key)$/
fflush	/usr/src/lib/libc/stdio/flsbuf.c	/^fflush(iop)$/
fgetc	/usr/src/lib/libc/stdio/fgetc.c	/^fgetc(fp)$/
fgets	/usr/src/lib/libc/stdio/fgets.c	/^fgets(s, n, iop)$/
fgoto	/usr/src/usr.lib/libcurses/cr_put.c	/^fgoto()$/
firsthash	/usr/src/usr.lib/libdbm/dbm.c	/^firsthash(hash)$/
firstkey	/usr/src/usr.lib/libdbm/dbm.c	/^firstkey()$/
floor	/usr/src/usr.lib/libm/floor.c	/^floor(d)$/
flushok	/usr/src/usr.lib/libcurses/curses.h	/^#define flushok(win,bf)	 (bf ? (win->_flags |= _FL/
fopen	/usr/src/lib/libc/stdio/fopen.c	/^fopen(file, mode)$/
forder	/usr/src/usr.lib/libdbm/dbm.c	/^forder(key)$/
fprintf	/usr/src/lib/libc/stdio/fprintf.c	/^fprintf(iop, fmt, args)$/
fputc	/usr/src/lib/libc/stdio/fputc.c	/^fputc(c, fp)$/
fputs	/usr/src/lib/libc/stdio/fputs.c	/^fputs(s, iop)$/
fread	/usr/src/lib/libc/stdio/rdwr.c	/^fread(ptr, size, count, iop)$/
free	/usr/src/lib/libc/gen/malloc.c	/^free(ap)$/
freopen	/usr/src/lib/libc/stdio/freopen.c	/^freopen(file, mode, iop)$/
frexp	/usr/src/lib/libc/vax/gen/frexp.c	/^frexp(x,i)$/
fscanf	/usr/src/lib/libc/stdio/scanf.c	/^fscanf(iop, fmt, args)$/
fsdigit	/usr/src/lib/libc/gen/fstab.c	/^fsdigit(backp, string, end)$/
fseek	/usr/src/lib/libc/stdio/fseek.c	/^fseek(iop, offset, ptrname)$/
fsskip	/usr/src/lib/libc/gen/fstab.c	/^fsskip(p)$/
fstabscan	/usr/src/lib/libc/gen/fstab.c	/^fstabscan(fs)$/
ftell	/usr/src/lib/libc/stdio/ftell.c	/^long ftell(iop)$/
fwrite	/usr/src/lib/libc/stdio/rdwr.c	/^fwrite(ptr, size, count, iop)$/
gamma	/usr/src/usr.lib/libm/gamma.c	/^gamma(arg)$/
gcvt	/usr/src/lib/libc/gen/gcvt.c	/^gcvt(number, ndigit, buf)$/
getbit	/usr/src/usr.lib/libdbm/dbm.c	/^getbit()$/
getcap	/usr/src/usr.lib/libcurses/cr_tty.c	/^getcap(name)$/
getch	/usr/src/usr.lib/libcurses/curses.h	/^# define	getch()		VOID(wgetch(stdscr))$/
getchar	/usr/src/lib/libc/stdio/getchar.c	/^getchar()$/
getdiskbyname	/usr/src/lib/libc/vax/gen/disktab.c	/^getdiskbyname(name)$/
getenv	/usr/src/lib/libc/gen/getenv.c	/^getenv(name)$/
getfsent	/usr/src/lib/libc/gen/fstab.c	/^getfsent()$/
getfsfile	/usr/src/lib/libc/gen/fstab.c	/^getfsfile(name)$/
getfsspec	/usr/src/lib/libc/gen/fstab.c	/^getfsspec(name)$/
getfstype	/usr/src/lib/libc/gen/fstab.c	/^getfstype(type)$/
getgrent	/usr/src/lib/libc/gen/getgrent.c	/^getgrent()$/
getgrgid	/usr/src/lib/libc/gen/getgrgid.c	/^getgrgid(gid)$/
getgrnam	/usr/src/lib/libc/gen/getgrnam.c	/^getgrnam(name)$/
gethostbyaddr	/usr/src/lib/libc/net/gethostbyaddr.c	/^gethostbyaddr(addr, len, type)$/
gethostbyname	/usr/src/lib/libc/net/gethostbyname.c	/^gethostbyname(name)$/
gethostent	/usr/src/lib/libc/net/gethostent.c	/^gethostent()$/
getlogin	/usr/src/lib/libc/gen/getlogin.c	/^getlogin()$/
getnetbyaddr	/usr/src/lib/libc/net/getnetbyaddr.c	/^getnetbyaddr(net, type)$/
getnetbyname	/usr/src/lib/libc/net/getnetbyname.c	/^getnetbyname(name)$/
getnetent	/usr/src/lib/libc/net/getnetent.c	/^getnetent()$/
getpass	/usr/src/lib/libc/gen/getpass.c	/^getpass(prompt)$/
getprotobyname	/usr/src/lib/libc/net/getprotoname.c	/^getprotobyname(name)$/
getprotobynumber	/usr/src/lib/libc/net/getproto.c	/^getprotobynumber(proto)$/
getprotoent	/usr/src/lib/libc/net/getprotoent.c	/^getprotoent()$/
getpwent	/usr/src/lib/libc/gen/getpwent.c	/^getpwent()$/
getpwnam	/usr/src/lib/libc/gen/getpwnam.c	/^getpwnam(name)$/
getpwuid	/usr/src/lib/libc/gen/getpwuid.c	/^getpwuid(uid)$/
gets	/usr/src/lib/libc/stdio/gets.c	/^gets(s)$/
getservbyname	/usr/src/lib/libc/net/getservbyname.c	/^getservbyname(name, proto)$/
getservbyport	/usr/src/lib/libc/net/getservbyport.c	/^getservbyport(port, proto)$/
getservent	/usr/src/lib/libc/net/getservent.c	/^getservent()$/
getstr	/usr/src/usr.lib/libcurses/curses.h	/^# define	getstr(str)	VOID(wgetstr(stdscr, str))$/
gettmode	/usr/src/usr.lib/libcurses/cr_tty.c	/^gettmode() {$/
getttys	/usr/src/lib/libc/gen/ttyslot.c	/^getttys(f)$/
getutmp	/usr/src/lib/libc/net/ruserpass.c	/^struct utmp *getutmp(sttyname)$/
getw	/usr/src/lib/libc/stdio/getw.c	/^getw(iop)$/
getwd	/usr/src/lib/libc/gen/getwd.c	/^getwd(pathname)$/
getyx	/usr/src/usr.lib/libcurses/curses.h	/^#define	getyx(win,y,x)	 y = win->_cury, x = win->_/
gmtime	/usr/src/lib/libc/gen/ctime.c	/^gmtime(tim)$/
grskip	/usr/src/lib/libc/gen/getgrent.c	/^grskip(p,c)$/
hashinc	/usr/src/usr.lib/libdbm/dbm.c	/^hashinc(hash)$/
hypot	/usr/src/usr.lib/libm/hypot.c	/^hypot(a,b)$/
inch	/usr/src/usr.lib/libcurses/curses.h	/^# define	inch()		VOID(winch(stdscr))$/
index	/usr/src/lib/libc/vax/gen/index.c	/^index(sp, c)$/
inet_addr	/usr/src/lib/libc/inet/inet_addr.c	/^inet_addr(cp)$/
inet_lnaof	/usr/src/lib/libc/inet/inet_lnaof.c	/^inet_lnaof(in)$/
inet_makeaddr	/usr/src/lib/libc/inet/inet_makeaddr.c	/^inet_makeaddr(net, host)$/
inet_netof	/usr/src/lib/libc/inet/inet_netof.c	/^inet_netof(in)$/
inet_network	/usr/src/lib/libc/inet/inet_network.c	/^inet_network(cp)$/
inet_ntoa	/usr/src/lib/libc/inet/inet_ntoa.c	/^inet_ntoa(in)$/
initgroups	/usr/src/lib/libc/gen/initgroups.c	/^initgroups(uname, agroup)$/
initscr	/usr/src/usr.lib/libcurses/initscr.c	/^initscr() {$/
initstate	/usr/src/lib/libc/gen/random.c	/^initstate( seed, arg_state, n )$/
insch	/usr/src/usr.lib/libcurses/curses.h	/^# define	insch(c)	VOID(winsch(stdscr,c))$/
insertln	/usr/src/usr.lib/libcurses/curses.h	/^# define	insertln()	VOID(winsertln(stdscr))$/
isatty	/usr/src/lib/libc/gen/isatty.c	/^isatty(f)$/
j0	/usr/src/usr.lib/libm/j0.c	/^j0(arg) double arg;{$/
j1	/usr/src/usr.lib/libm/j1.c	/^j1(arg) double arg;{$/
jmp	/usr/src/lib/libc/vax/sys/Ovfork.c	/^jmp	(r2)$/
jn	/usr/src/usr.lib/libm/jn.c	/^jn(n,x) int n; double x;{$/
leaveok	/usr/src/usr.lib/libcurses/curses.h	/^#define	leaveok(win,bf)	 (win->_leave = bf)$/
localtime	/usr/src/lib/libc/gen/ctime.c	/^localtime(tim)$/
log	/usr/src/usr.lib/libm/log.c	/^log(arg)$/
log10	/usr/src/usr.lib/libm/log.c	/^log10(arg)$/
longname	/usr/src/usr.lib/libcurses/longname.c	/^longname(bp, def)$/
makdatum	/usr/src/usr.lib/libdbm/dbm.c	/^makdatum(buf, n)$/
makech	/usr/src/usr.lib/libcurses/refresh.c	/^makech(win, wy)$/
makenew	/usr/src/usr.lib/libcurses/newwin.c	/^makenew(num_lines, num_cols, begy, begx)$/
malloc	/usr/src/lib/libc/gen/malloc.c	/^malloc(nbytes)$/
mask	/usr/src/lib/libc/gen/sleep.c	/^#define	mask(s)	(1<<((s)-1))$/
max	/usr/src/usr.lib/libcurses/overlay.c	/^# define	max(a,b)	(a > b ? a : b)$/
mcount	/usr/src/lib/libc/vax/csu/gmon.c	/^mcount()$/
min	/usr/src/usr.lib/libcurses/overlay.c	/^# define	min(a,b)	(a < b ? a : b)$/
mkenvkey	/usr/src/lib/libc/net/ruserpass.c	/^char *mkenvkey(mch)$/
mkpwclear	/usr/src/lib/libc/net/ruserpass.c	/^mkpwclear(sencpasswd,mch,spasswd)$/
mkpwunclear	/usr/src/lib/libc/net/ruserpass.c	/^mkpwunclear(spasswd,mch,sencpasswd)$/
mktemp	/usr/src/lib/libc/gen/mktemp.c	/^mktemp(as)$/
moncontrol	/usr/src/lib/libc/vax/csu/crt0.c	/^moncontrol(val)$/
monitor	/usr/src/lib/libc/vax/csu/gmon.c	/^monitor( lowpc , highpc , buf , bufsiz , nfunc )$/
monstartup	/usr/src/lib/libc/vax/csu/gmon.c	/^monstartup(lowpc, highpc)$/
move	/usr/src/usr.lib/libcurses/curses.h	/^# define	move(y, x)	VOID(wmove(stdscr, y, x))$/
mvaddch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvaddch(y,x,ch)		mvwaddch(stdscr,y,x,ch)$/
mvaddstr	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvaddstr(y,x,str)	mvwaddstr(stdscr,y,x,str/
mvcur	/usr/src/usr.lib/libcurses/cr_put.c	/^mvcur(ly, lx, y, x)$/
mvdelch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvdelch(y,x)		mvwdelch(stdscr,y,x)$/
mvgetch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvgetch(y,x)		mvwgetch(stdscr,y,x)$/
mvgetstr	/usr/src/usr.lib/libcurses/curses.h	/^#define mvgetstr(y,x,str)       mvwgetstr(stdscr,y/
mvinch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvinch(y,x)		mvwinch(stdscr,y,x)$/
mvinsch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvinsch(y,x,c)		mvwinsch(stdscr,y,x,c)$/
mvprintw	/usr/src/usr.lib/libcurses/mvprintw.c	/^mvprintw(y, x, fmt, args)$/
mvscanw	/usr/src/usr.lib/libcurses/mvscanw.c	/^mvscanw(y, x, fmt, args)$/
mvwaddch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwaddch(win,y,x,ch)	VOID(wmove(win,y,x)==/
mvwaddstr	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwaddstr(win,y,x,str)	VOID(wmove(win,y,x)/
mvwdelch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwdelch(win,y,x)	VOID(wmove(win,y,x) == E/
mvwgetch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwgetch(win,y,x)	VOID(wmove(win,y,x)==ERR/
mvwgetstr	/usr/src/usr.lib/libcurses/curses.h	/^#define mvwgetstr(win,y,x,str)  VOID(wmove(win,y,x/
mvwin	/usr/src/usr.lib/libcurses/mvwin.c	/^mvwin(win, by, bx)$/
mvwinch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwinch(win,y,x)	VOID(wmove(win,y,x) == ER/
mvwinsch	/usr/src/usr.lib/libcurses/curses.h	/^#define	mvwinsch(win,y,x,c)	VOID(wmove(win,y,x) ==/
mvwprintw	/usr/src/usr.lib/libcurses/mvprintw.c	/^mvwprintw(win, y, x, fmt, args)$/
mvwscanw	/usr/src/usr.lib/libcurses/mvscanw.c	/^mvwscanw(win, y, x, fmt, args)$/
nbs8decrypt	/usr/src/lib/libc/net/ruserpass.c	/^char *nbs8decrypt(crp,key)$/
nbs8encrypt	/usr/src/lib/libc/net/ruserpass.c	/^char *nbs8encrypt(str,key)$/
nbsdecrypt	/usr/src/lib/libc/net/ruserpass.c	/^char *nbsdecrypt(cpt,key,result)$/
nbsencrypt	/usr/src/lib/libc/net/ruserpass.c	/^char *nbsencrypt(str,key,result)$/
nbssetkey	/usr/src/lib/libc/net/ruserpass.c	/^nbssetkey(key)$/
neg	/usr/src/usr.lib/libm/gamma.c	/^neg(arg)$/
newwin	/usr/src/usr.lib/libcurses/newwin.c	/^newwin(num_lines, num_cols, begy, begx)$/
nextkey	/usr/src/usr.lib/libdbm/dbm.c	/^nextkey(key)$/
nl	/usr/src/usr.lib/libcurses/curses.h	/^#define nl()	 (_tty.sg_flags |= CRMOD,_pfast = _ra/
nlist	/usr/src/lib/libc/gen/nlist.c	/^nlist(name, list)$/
nocrmode	/usr/src/usr.lib/libcurses/curses.h	/^#define nocrmode() (_tty.sg_flags &= ~CBREAK,_rawm/
noecho	/usr/src/usr.lib/libcurses/curses.h	/^#define noecho() (_tty.sg_flags &= ~ECHO, _echoit /
nonl	/usr/src/usr.lib/libcurses/curses.h	/^#define nonl()	 (_tty.sg_flags &= ~CRMOD, _pfast =/
noraw	/usr/src/usr.lib/libcurses/curses.h	/^#define noraw()	 (_tty.sg_flags&=~RAW,_rawmode=FAL/
nvmatch	/usr/src/lib/libc/gen/getenv.c	/^nvmatch(s1, s2)$/
opendir	/usr/src/lib/libc/gen/opendir.c	/^opendir(name)$/
openlog	/usr/src/lib/libc/gen/syslog.c	/^openlog(ident, logstat)$/
overlay	/usr/src/usr.lib/libcurses/overlay.c	/^overlay(win1, win2)$/
overwrite	/usr/src/usr.lib/libcurses/overwrite.c	/^overwrite(win1, win2)$/
pclose	/usr/src/lib/libc/gen/popen.c	/^pclose(ptr)$/
perror	/usr/src/lib/libc/gen/perror.c	/^perror(s)$/
plod	/usr/src/usr.lib/libcurses/cr_put.c	/^plod(cnt)$/
plodput	/usr/src/usr.lib/libcurses/cr_put.c	/^plodput(c)$/
popen	/usr/src/lib/libc/gen/popen.c	/^popen(cmd,mode)$/
pos	/usr/src/usr.lib/libm/gamma.c	/^pos(arg)$/
pow	/usr/src/usr.lib/libm/pow.c	/^pow(arg1,arg2)$/
pr	/usr/src/usr.lib/libtermlib/tc3.c	/^pr(p)$/
prepend	/usr/src/lib/libc/gen/getwd.c	/^prepend(dirname, pathname)$/
printable	/usr/src/usr.lib/libln/allprint.c	/^printable(c)$/
printf	/usr/src/lib/libc/stdio/printf.c	/^printf(fmt, args)$/
printw	/usr/src/usr.lib/libcurses/printw.c	/^printw(fmt, args)$/
psignal	/usr/src/lib/libc/gen/psignal.c	/^psignal(sig, s)$/
pushl	/usr/src/lib/libc/vax/sys/execle.c	/^	pushl	(ap)[r0]$/
putchar	/usr/src/lib/libc/stdio/putchar.c	/^putchar(c)$/
puts	/usr/src/lib/libc/stdio/puts.c	/^puts(s)$/
putw	/usr/src/lib/libc/stdio/putw.c	/^putw(w, iop)$/
pwskip	/usr/src/lib/libc/gen/getpwent.c	/^pwskip(p)$/
qsort	/usr/src/lib/libc/gen/qsort.c	/^qsort(base, n, size, compar)$/
qst	/usr/src/lib/libc/gen/qsort.c	/^qst(base, max)$/
random	/usr/src/lib/libc/gen/random.c	/^random()$/
raw	/usr/src/usr.lib/libcurses/curses.h	/^#define raw()	 (_tty.sg_flags|=RAW, _pfast=_rawmod/
rcmd	/usr/src/lib/libc/net/rcmd.c	/^rcmd(ahost, rport, locuser, remuser, cmd, fd2p)$/
rdchar	/usr/src/usr.lib/libtermlib/tc3.c	/^char *rdchar(c)$/
re_comp	/usr/src/lib/libc/gen/regex.c	/^re_comp(sp)$/
re_exec	/usr/src/lib/libc/gen/regex.c	/^re_exec(p1)$/
readdir	/usr/src/lib/libc/gen/readdir.c	/^readdir(dirp)$/
realloc	/usr/src/lib/libc/gen/malloc.c	/^realloc(p, nbytes)$/
refresh	/usr/src/usr.lib/libcurses/curses.h	/^# define	refresh()	VOID(wrefresh(stdscr))$/
renv	/usr/src/lib/libc/net/ruserpass.c	/^renv(host, aname, apass)$/
renvlook	/usr/src/lib/libc/net/ruserpass.c	/^renvlook(host)$/
resetty	/usr/src/usr.lib/libcurses/curses.h	/^#define	resetty() (_tty.sg_flags = _res_flg, stty(/
rewind	/usr/src/lib/libc/stdio/rew.c	/^rewind(iop)$/
rexec	/usr/src/lib/libc/net/rexec.c	/^rexec(ahost, rport, name, pass, cmd, fd2p)$/
rindex	/usr/src/lib/libc/gen/rindex.c	/^rindex(sp, c)$/
rnetrc	/usr/src/lib/libc/net/ruserpass.c	/^rnetrc(host, aname, apass)$/
rresvport	/usr/src/lib/libc/net/rcmd.c	/^rresvport(alport)$/
ruserok	/usr/src/lib/libc/net/rcmd.c	/^ruserok(rhost, superuser, ruser, luser)$/
ruserpass	/usr/src/lib/libc/net/ruserpass.c	/^ruserpass(host, aname, apass)$/
satan	/usr/src/usr.lib/libm/atan.c	/^satan(arg)$/
savetty	/usr/src/usr.lib/libcurses/curses.h	/^#define	savetty() (gtty(_tty_ch, &_tty), _res_flg /
scandir	/usr/src/lib/libc/gen/scandir.c	/^scandir(dirname, namelist, select, dcomp)$/
scanf	/usr/src/lib/libc/stdio/scanf.c	/^scanf(fmt, args)$/
scanw	/usr/src/usr.lib/libcurses/scanw.c	/^scanw(fmt, args)$/
scroll	/usr/src/usr.lib/libcurses/scroll.c	/^scroll(win)$/
scrollok	/usr/src/usr.lib/libcurses/curses.h	/^#define	scrollok(win,bf) (win->_scroll = bf)$/
seekdir	/usr/src/lib/libc/gen/seekdir.c	/^seekdir(dirp, loc)$/
set_ch	/usr/src/usr.lib/libcurses/addch.c	/^set_ch(win, y, x, ch, orig)$/
setbit	/usr/src/usr.lib/libdbm/dbm.c	/^setbit()$/
setbuf	/usr/src/lib/libc/stdio/setbuf.c	/^setbuf(iop, buf)$/
setbuffer	/usr/src/lib/libc/stdio/setbuffer.c	/^setbuffer(iop, buf, size)$/
setbusy	/usr/src/lib/libc/gen/malloc.c	/^#define setbusy(p) (union store *)((INT)(p)|BUSY)$/
setegid	/usr/src/lib/libc/gen/setegid.c	/^setegid(egid)$/
seteuid	/usr/src/lib/libc/gen/seteuid.c	/^seteuid(euid)$/
setfsent	/usr/src/lib/libc/gen/fstab.c	/^setfsent()$/
setgid	/usr/src/lib/libc/gen/setgid.c	/^setgid(gid)$/
setgrent	/usr/src/lib/libc/gen/getgrent.c	/^setgrent()$/
sethostent	/usr/src/lib/libc/net/gethostent.c	/^sethostent(f)$/
setkey	/usr/src/lib/libc/gen/crypt.c	/^setkey(key)$/
setlinebuf	/usr/src/lib/libc/stdio/setbuffer.c	/^setlinebuf(iop)$/
setnetent	/usr/src/lib/libc/net/getnetent.c	/^setnetent(f)$/
setprotoent	/usr/src/lib/libc/net/getprotoent.c	/^setprotoent(f)$/
setpwent	/usr/src/lib/libc/gen/getpwent.c	/^setpwent()$/
setrgid	/usr/src/lib/libc/gen/setrgid.c	/^setrgid(rgid)$/
setruid	/usr/src/lib/libc/gen/setruid.c	/^setruid(ruid)$/
setservent	/usr/src/lib/libc/net/getservent.c	/^setservent(f)$/
setstate	/usr/src/lib/libc/gen/random.c	/^setstate( arg_state )$/
setterm	/usr/src/usr.lib/libcurses/cr_tty.c	/^setterm(type)$/
setuid	/usr/src/lib/libc/gen/setuid.c	/^setuid(uid)$/
setvec	/usr/src/lib/libc/gen/sleep.c	/^#define	setvec(vec, a) \\$/
signal	/usr/src/lib/libc/gen/signal.c	/^signal(s, a))()$/
sin	/usr/src/usr.lib/libm/sin.c	/^sin(arg)$/
sinh	/usr/src/usr.lib/libm/sinh.c	/^sinh(arg)$/
sinus	/usr/src/usr.lib/libm/sin.c	/^sinus(arg, quad)$/
sleep	/usr/src/lib/libc/gen/sleep.c	/^sleep(n)$/
sleepx	/usr/src/lib/libc/gen/sleep.c	/^sleepx()$/
sprint	/usr/src/usr.lib/libln/allprint.c	/^sprint(s)$/
sprintf	/usr/src/lib/libc/stdio/sprintf.c	/^char *sprintf(str, fmt, args)$/
sqrt	/usr/src/usr.lib/libm/sqrt.c	/^sqrt(arg)$/
srandom	/usr/src/lib/libc/gen/random.c	/^srandom( x )$/
sreverse	/usr/src/lib/libc/net/ruserpass.c	/^sreverse(sto, sfrom)$/
sscanf	/usr/src/lib/libc/stdio/scanf.c	/^sscanf(str, fmt, args)$/
standend	/usr/src/usr.lib/libcurses/curses.h	/^# define	standend()	VOID(wstandend(stdscr))$/
standout	/usr/src/usr.lib/libcurses/curses.h	/^# define	standout()	VOID(wstandout(stdscr))$/
start	/usr/src/lib/libc/vax/csu/crt0.c	/^start()$/
store	/usr/src/usr.lib/libdbm/dbm.c	/^store(key, dat)$/
strcat	/usr/src/lib/libc/vax/gen/strcat.c	/^strcat(s1, s2)$/
strcmp	/usr/src/lib/libc/vax/gen/strcmp.c	/^strcmp(s1, s2)$/
strcpy	/usr/src/lib/libc/vax/gen/strcpy.c	/^strcpy(s1, s2)$/
strlen	/usr/src/lib/libc/vax/gen/strlen.c	/^strlen(s)$/
strncat	/usr/src/lib/libc/vax/gen/strncat.c	/^strncat(s1, s2, n)$/
strncmp	/usr/src/lib/libc/vax/gen/strncmp.c	/^strncmp(s1, s2, n)$/
strncpy	/usr/src/lib/libc/vax/gen/strncpy.c	/^strncpy(s1, s2, n)$/
subwin	/usr/src/usr.lib/libcurses/newwin.c	/^subwin(orig, num_lines, num_cols, begy, begx)$/
sunday	/usr/src/lib/libc/gen/ctime.c	/^sunday(t, d)$/
swab	/usr/src/lib/libc/gen/swab.c	/^swab(from, to, n)$/
syslog	/usr/src/lib/libc/gen/syslog.c	/^syslog(pri, fmt, p0, p1, p2, p3, p4)$/
system	/usr/src/lib/libc/gen/system.c	/^system(s)$/
tabcol	/usr/src/usr.lib/libcurses/cr_put.c	/^tabcol(col, ts)$/
tan	/usr/src/usr.lib/libm/tan.c	/^tan(arg)$/
tanh	/usr/src/usr.lib/libm/tanh.c	/^tanh(arg)$/
tdecode	/usr/src/usr.lib/libtermlib/termcap.c	/^tdecode(str, area)$/
telldir	/usr/src/lib/libc/gen/telldir.c	/^telldir(dirp)$/
testbusy	/usr/src/lib/libc/gen/malloc.c	/^#define testbusy(p) ((INT)(p)&BUSY)$/
tgetent	/usr/src/usr.lib/libtermlib/termcap.c	/^tgetent(bp, name)$/
tgetflag	/usr/src/usr.lib/libtermlib/termcap.c	/^tgetflag(id)$/
tgetnum	/usr/src/usr.lib/libtermlib/termcap.c	/^tgetnum(id)$/
tgetstr	/usr/src/usr.lib/libtermlib/termcap.c	/^tgetstr(id, area)$/
tgoto	/usr/src/usr.lib/libtermlib/tgoto.c	/^tgoto(CM, destcol, destline)$/
time	/usr/src/lib/libc/gen/time.c	/^time(t)$/
timezone	/usr/src/lib/libc/gen/timezone.c	/^char *timezone(zone, dst)$/
tnamatch	/usr/src/usr.lib/libtermlib/termcap.c	/^tnamatch(np)$/
tnchktc	/usr/src/usr.lib/libtermlib/termcap.c	/^tnchktc()$/
token	/usr/src/lib/libc/net/ruserpass.c	/^token()$/
touchwin	/usr/src/usr.lib/libcurses/touchwin.c	/^touchwin(win)$/
tputs	/usr/src/usr.lib/libtermlib/tputs.c	/^tputs(cp, affcnt, outc)$/
tskip	/usr/src/usr.lib/libtermlib/termcap.c	/^tskip(bp)$/
tst	/usr/src/lib/libc/gen/popen.c	/^#define	tst(a,b)	(*mode == 'r'? (b) : (a))$/
tstp	/usr/src/usr.lib/libcurses/tstp.c	/^tstp() {$/
ttyname	/usr/src/lib/libc/gen/ttyname.c	/^ttyname(f)$/
ttyslot	/usr/src/lib/libc/gen/ttyslot.c	/^ttyslot()$/
unctrl	/usr/src/usr.lib/libcurses/curses.h	/^#define	unctrl(c)	_unctrl[(c) & 0177]$/
ungetc	/usr/src/lib/libc/stdio/ungetc.c	/^ungetc(c, iop)$/
valloc	/usr/src/lib/libc/gen/valloc.c	/^valloc(i)$/
waddch	/usr/src/usr.lib/libcurses/addch.c	/^waddch(win, c)$/
waddstr	/usr/src/usr.lib/libcurses/addstr.c	/^waddstr(win,str)$/
wclear	/usr/src/usr.lib/libcurses/clear.c	/^wclear(win)$/
wclrtobot	/usr/src/usr.lib/libcurses/clrtobot.c	/^wclrtobot(win)$/
wclrtoeol	/usr/src/usr.lib/libcurses/clrtoeol.c	/^wclrtoeol(win)$/
wdelch	/usr/src/usr.lib/libcurses/delch.c	/^wdelch(win)$/
wdeleteln	/usr/src/usr.lib/libcurses/deleteln.c	/^wdeleteln(win)$/
werase	/usr/src/usr.lib/libcurses/erase.c	/^werase(win)$/
wgetch	/usr/src/usr.lib/libcurses/getch.c	/^wgetch(win)$/
wgetstr	/usr/src/usr.lib/libcurses/getstr.c	/^wgetstr(win,str)$/
winch	/usr/src/usr.lib/libcurses/curses.h	/^#define	winch(win)	 (win->_y[win->_cury][win->_cur/
winsch	/usr/src/usr.lib/libcurses/insch.c	/^winsch(win, c)$/
winsertln	/usr/src/usr.lib/libcurses/insertln.c	/^winsertln(win)$/
wmove	/usr/src/usr.lib/libcurses/move.c	/^wmove(win, y, x)$/
wprintw	/usr/src/usr.lib/libcurses/printw.c	/^wprintw(win, fmt, args)$/
wrefresh	/usr/src/usr.lib/libcurses/refresh.c	/^wrefresh(win)$/
wscanw	/usr/src/usr.lib/libcurses/scanw.c	/^wscanw(win, fmt, args)$/
wstandend	/usr/src/usr.lib/libcurses/standout.c	/^wstandend(win)$/
wstandout	/usr/src/usr.lib/libcurses/standout.c	/^wstandout(win)$/
xatan	/usr/src/usr.lib/libm/atan.c	/^xatan(arg)$/
y0	/usr/src/usr.lib/libm/j0.c	/^y0(arg) double arg;{$/
y1	/usr/src/usr.lib/libm/j1.c	/^y1(arg) double arg;{$/
yn	/usr/src/usr.lib/libm/jn.c	/^yn(n,x) int n; double x;{$/
yyless	/usr/src/usr.lib/libln/yyless.c	/^yyless(x)$/
yyracc	/usr/src/usr.lib/libln/reject.c	/^yyracc(m)$/
yyreject	/usr/src/usr.lib/libln/reject.c	/^yyreject ()$/
yywrap	/usr/src/usr.lib/libln/yywrap.c	/^yywrap()$/
zap	/usr/src/usr.lib/libcurses/cr_tty.c	/^zap() {$/
