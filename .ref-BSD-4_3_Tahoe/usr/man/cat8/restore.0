


RESTORE(8)	    UNIX Programmer's Manual	       RESTORE(8)



NNAAMMEE
     restore - incremental file system restore

SSYYNNOOPPSSIISS
     //eettcc//rreessttoorree key [ name ... ]

DDEESSCCRRIIPPTTIIOONN
     _R_e_s_t_o_r_e reads tapes dumped with the _d_u_m_p(8) command.  Its
     actions are controlled by the _k_e_y argument.  The _k_e_y is a
     string of characters containing at most one function letter
     and possibly one or more function modifiers.  Other argu-
     ments to the command are file or directory names specifying
     the files that are to be restored.  Unless the hh key is
     specified (see below), the appearance of a directory name
     refers to the files and (recursively) subdirectories of that
     directory.

     The function portion of the key is specified by one of the
     following letters:

     rr	  The tape is read and loaded into the current directory.
	  This should not be done lightly; the rr key should only
	  be used to restore a complete dump tape onto a clear
	  file system or to restore an incremental dump tape
	  after a full level zero restore.  Thus

	       /etc/newfs /dev/rrp0g eagle
	       /etc/mount /dev/rp0g /mnt
	       cd /mnt
	       restore r

	  is a typical sequence to restore a complete dump.
	  Another _r_e_s_t_o_r_e can be done to get an incremental dump
	  in on top of this.  Note that _r_e_s_t_o_r_e leaves a file
	  _r_e_s_t_o_r_e_s_y_m_t_a_b_l_e in the root directory to pass informa-
	  tion between incremental restore passes.  This file
	  should be removed when the last incremental tape has
	  been restored.
	  A _d_u_m_p(8) followed by a _n_e_w_f_s(8) and a _r_e_s_t_o_r_e is used
	  to change the size of a file system.

     RR	  _R_e_s_t_o_r_e requests a particular tape of a multi volume
	  set on which to restart a full restore (see the rr key
	  above).  This allows _r_e_s_t_o_r_e to be interrupted and then
	  restarted.

     xx	  The named files are extracted from the tape.	If the
	  named file matches a directory whose contents had been
	  written onto the tape, and the hh key is not specified,
	  the directory is recursively extracted.  The owner,
	  modification time, and mode are restored (if possible).
	  If no file argument is given, then the root directory



Printed 7/9/88		  July 31, 1987                         1






RESTORE(8)	    UNIX Programmer's Manual	       RESTORE(8)



	  is extracted, which results in the entire content of
	  the tape being extracted, unless the hh key has been
	  specified.

     tt	  The names of the specified files are listed if they
	  occur on the tape.  If no file argument is given, then
	  the root directory is listed, which results in the
	  entire content of the tape being listed, unless the hh
	  key has been specified.  Note that the tt key replaces
	  the function of the old _d_u_m_p_d_i_r program.

     ii	  This mode allows interactive restoration of files from
	  a dump tape.	After reading in the directory informa-
	  tion from the tape, _r_e_s_t_o_r_e provides a shell like
	  interface that allows the user to move around the
	  directory tree selecting files to be extracted.  The
	  available commands are given below; for those commands
	  that require an argument, the default is the current
	  directory.


	  llss [arg] - List the current or specified directory.
	       Entries that are directories are appended with a
	       ``/''.  Entries that have been marked for extrac-
	       tion are prepended with a ``*''.  If the verbose
	       key is set the inode number of each entry is also
	       listed.

	  ccdd arg - Change the current working directory to the
	       specified argument.

	  ppwwdd - Print the full pathname of the current working
	       directory.

	  aadddd [arg] - The current directory or specified argument
	       is added to the list of files to be extracted.  If
	       a directory is specified, then it and all its des-
	       cendents are added to the extraction list (unless
	       the hh key is specified on the command line).
	       Files that are on the extraction list are
	       prepended with a ``*'' when they are listed by llss.

	  ddeelleettee [arg] - The current directory or specified argu-
	       ment is deleted from the list of files to be
	       extracted.  If a directory is specified, then it
	       and all its descendents are deleted from the
	       extraction list (unless the hh key is specified on
	       the command line).  The most expedient way to
	       extract most of the files from a directory is to
	       add the directory to the extraction list and then
	       delete those files that are not needed.




Printed 7/9/88		  July 31, 1987                         2






RESTORE(8)	    UNIX Programmer's Manual	       RESTORE(8)



	  eexxttrraacctt - All the files that are on the extraction list
	       are extracted from the dump tape.  _R_e_s_t_o_r_e will
	       ask which volume the user wishes to mount.  The
	       fastest way to extract a few files is to start
	       with the last volume, and work towards the first
	       volume.

	  sseettmmooddeess - All the directories that have been added to
	       the extraction list have their owner, modes, and
	       times set; nothing is extracted from the tape.
	       This is useful for cleaning up after a restore has
	       been prematurely aborted.

	  vveerrbboossee - The sense of the vv key is toggled.	When set,
	       the verbose key causes the llss command to list the
	       inode numbers of all entries.  It also causes
	       _r_e_s_t_o_r_e to print out information about each file
	       as it is extracted.

	  hheellpp - List a summary of the available commands.

	  qquuiitt - Restore immediately exits, even if the extrac-
	       tion list is not empty.


     The following characters may be used in addition to the
     letter that selects the function desired.

     bb	  The next argument to _r_e_s_t_o_r_e is used as the block size
	  of the tape (in kilobytes).  If the --bb option is not
	  specified, _r_e_s_t_o_r_e tries to determine the tape block
	  size dynamically.

     ff	  The next argument to _r_e_s_t_o_r_e is used as the name of the
	  archive instead of /dev/rmt?. If the name of the file
	  is ``-'', _r_e_s_t_o_r_e reads from standard input.	Thus,
	  _d_u_m_p(8) and _r_e_s_t_o_r_e can be used in a pipeline to dump
	  and restore a file system with the command

	       dump 0f - /usr | (cd /mnt; restore xf -)

     vv	  Normally _r_e_s_t_o_r_e does its work silently.  The vv (ver-
	  bose) key causes it to type the name of each file it
	  treats preceded by its file type.

     yy	  _R_e_s_t_o_r_e will not ask whether it should abort the
	  restore if gets a tape error.  It will always try to
	  skip over the bad tape block(s) and continue as best it
	  can.

     mm	  _R_e_s_t_o_r_e will extract by inode numbers rather than by
	  file name.  This is useful if only a few files are



Printed 7/9/88		  July 31, 1987                         3






RESTORE(8)	    UNIX Programmer's Manual	       RESTORE(8)



	  being extracted, and one wants to avoid regenerating
	  the complete pathname to the file.

     hh	  _R_e_s_t_o_r_e extracts the actual directory, rather than the
	  files that it references.  This prevents hierarchical
	  restoration of complete subtrees from the tape.

     ss	  The next argument to _r_e_s_t_o_r_e is a number which selects
	  the file on a multi-file dump tape.  File numbering
	  starts at 1.

DDIIAAGGNNOOSSTTIICCSS
     Complaints about bad key characters.

     Complaints if it gets a read error.  If yy has been speci-
     fied, or the user responds ``y'', _r_e_s_t_o_r_e will attempt to
     continue the restore.

     If the dump extends over more than one tape, _r_e_s_t_o_r_e will
     ask the user to change tapes.  If the xx or ii key has been
     specified, _r_e_s_t_o_r_e will also ask which volume the user
     wishes to mount.  The fastest way to extract a few files is
     to start with the last volume, and work towards the first
     volume.

     There are numerous consistency checks that can be listed by
     _r_e_s_t_o_r_e.  Most checks are self-explanatory or can ``never
     happen''.	Common errors are given below.

     Converting to new file system format.
	  A dump tape created from the old file system has been
	  loaded.  It is automatically converted to the new file
	  system format.

     <filename>: not found on tape
	  The specified file name was listed in the tape direc-
	  tory, but was not found on the tape.	This is caused by
	  tape read errors while looking for the file, and from
	  using a dump tape created on an active file system.

     expected next file <inumber>, got <inumber>
	  A file that was not listed in the directory showed up.
	  This can occur when using a dump tape created on an
	  active file system.

     Incremental tape too low
	  When doing incremental restore, a tape that was written
	  before the previous incremental tape, or that has too
	  low an incremental level has been loaded.

     Incremental tape too high
	  When doing incremental restore, a tape that does not



Printed 7/9/88		  July 31, 1987                         4






RESTORE(8)	    UNIX Programmer's Manual	       RESTORE(8)



	  begin its coverage where the previous incremental tape
	  left off, or that has too high an incremental level has
	  been loaded.

     Tape read error while restoring <filename>
     Tape read error while skipping over inode <inumber>
     Tape read error while trying to resynchronize
	  A tape read error has occurred.  If a file name is
	  specified, then its contents are probably partially
	  wrong.  If an inode is being skipped or the tape is
	  trying to resynchronize, then no extracted files have
	  been corrupted, though files may not be found on the
	  tape.

     resync restore, skipped <num> blocks
	  After a tape read error, _r_e_s_t_o_r_e may have to resyn-
	  chronize itself.  This message lists the number of
	  blocks that were skipped over.

FFIILLEESS
     /dev/rmt? the default tape drive
     /tmp/rstdir*   file containing directories on the tape.
     /tmp/rstmode*  owner, mode, and time stamps for directories.
     ./restoresymtable	 information passed between incremental
     restores.

SSEEEE AALLSSOO
     rrestore(8C) dump(8), newfs(8), mount(8), mkfs(8)

BBUUGGSS
     _R_e_s_t_o_r_e can get confused when doing incremental restores
     from dump tapes that were made on active file systems.

     A level zero dump must be done after a full restore.
     Because restore runs in user code, it has no control over
     inode allocation; thus a full restore must be done to get a
     new set of directories reflecting the new inode numbering,
     even though the contents of the files is unchanged.

















Printed 7/9/88		  July 31, 1987                         5



