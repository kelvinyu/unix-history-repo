


REBOOT(8)	    UNIX Programmer's Manual		REBOOT(8)



NNAAMMEE
     reboot - UNIX bootstrapping procedures

SSYYNNOOPPSSIISS
     //eettcc//rreebboooott [ --nn ] [ --qq ]

DDEESSCCRRIIPPTTIIOONN
     UNIX is started by placing it in memory at location zero and
     transferring to the entry point.  Since the system is not
     reenterable, it is necessary to read it in from disk or tape
     each time it is to be bootstrapped.

     RReebboooottiinngg aa rruunnnniinngg ssyysstteemm.. When a UNIX is running and a
     reboot is desired, _s_h_u_t_d_o_w_n(8) is normally used.  If there
     are no users then //eettcc//rreebboooott can be used.  Reboot causes
     the disks to be synced and allows the system to perform
     other shutdown activities such as resynchronizing hardware
     time-of-day clocks.  A multi-user reboot (as described
     below) is then initiated.	This causes a system to be booted
     and an automatic disk check to be performed.  If all this
     succeeds without incident, the system is then brought up for
     many users.

     Options to reboot are:

     --nn   option avoids the sync.  It can be used if a disk or
	  the processor is on fire.

     --qq   reboots quickly and ungracefully, without shutting down
	  running processes first.

     _R_e_b_o_o_t normally logs the reboot using _s_y_s_l_o_g(8) and places a
     shutdown record in the login accounting file /usr/adm/wtmp.
     These actions are inhibited if the --nn or --qq options are
     present.

     PPoowweerr ffaaiill aanndd ccrraasshh rreeccoovveerryy.. Normally, the system will
     reboot itself at power-up or after crashes.  Provided the
     auto-restart is enabled on the machine front panel, an
     automatic consistency check of the file systems will be per-
     formed, and unless this fails, the system will resume
     multi-user operations.

     CCoolldd ssttaarrttss.. These are processor-type dependent.  On an
     11/780, there are two floppy files for each disk controller,
     both of which cause boots from unit 0 of the root file sys-
     tem of a controller located on mba0 or uba0.  One gives a
     single user shell, while the other invokes the multi-user
     automatic reboot.	Thus these files are HPS and HPM for the
     single and multi-user boot from MASSBUS RP06/RM03/RM05
     disks, UPS and UPM for UNIBUS storage module controller and
     disks such as the EMULEX SC-21 and AMPEX 9300 pair, RAS and



Printed 7/14/88           July 12, 1988                         1






REBOOT(8)	    UNIX Programmer's Manual		REBOOT(8)



     RAM to boot from MSCP controllers and disks such as the
     RA81, or HKS and HKM for RK07 disks.  There is also a script
     for booting from the default device, which is normally a
     copy of one of the standard multi-user boot scripts, but
     which may be modified to perform other actions or to boot
     from a different unit.  The situation on the 8600 is simi-
     lar, with scripts loaded from the console RL02.

     Giving the command

	  >>>BOOT HPM

     would boot the system from (e.g.) an RP06 and run the
     automatic consistency check as described in _f_s_c_k(8).  (Note
     that it may be necessary to type control-P and halt the pro-
     cessor to gain the attention of the LSI-11 before getting
     the >>> prompt.) The command

	  >>>BOOT ANY

     invokes a version of the boot program in a way which allows
     you to specify any system as the system to be booted.  It
     reads from the console a device specification (see below)
     followed immediately by a pathname.

     The scripts may be modified for local configuration if
     necessary.  The flags are placed in register 11 (as defined
     in <_s_y_s/_r_e_b_o_o_t._h>).  The boot device is specified in regis-
     ter 10.  The encoding of this register is also defined in
     <_s_y_s/_r_e_b_o_o_t._h>.  The current encoding has a historical
     basis, and is shown in the following table:

	  bits usage
	  0-7  boot device type (the device major number)
	  8-15 disk partition
	  16-19drive unit
	  20-23controller number
	  24-27adaptor number (UNIBUS or MASSBUS as appropriate)

     The adaptor number corresponds to the normal configuration
     on the 11/750, and to the order in which adaptors are found
     on the 11/780 and 8600 (generally the same as the numbers
     used by UNIX).

     On an 11/750, the reset button will boot from the device
     selected by the front panel boot device switch.  In systems
     with RK07's, position B normally selects the RK07 for boot.
     This will boot multi-user.  To boot from RK07 with boot
     flags you may specify

	  >>>B/_n DMA0




Printed 7/14/88           July 12, 1988                         2






REBOOT(8)	    UNIX Programmer's Manual		REBOOT(8)



     where, giving a _n of 1 causes the boot program to ask for
     the name of the system to be bootstrapped, giving a _n of 2
     causes the boot program to come up single user, and a _n of 3
     causes both of these actions to occur.  The ``DM'' specifies
     RK07, the ``A'' represents the adaptor number (UNIBUS or
     MASSBUS), and the ``0'' is the drive unit number.	Other
     disk types which may be used are DB (MASSBUS), DD (TU58),
     and DU (UDA-50/RA disk).  A non-zero disk partition can be
     used by adding (partition times 1000 hex) to _n.

     The boot procedure on the MicroVAX II is similar.	A switch
     on the back panel sets the power-up action to autoboot or to
     halt.  When halted, the processor may be booted using the
     same syntax as on the 11/750.

     The 11/750 boot procedure uses the boot roms to load block 0
     off of the specified device.  The /usr/mdec directory con-
     tains a number of bootstrap programs for the various disks
     which should be placed in a new pack by _d_i_s_k_l_a_b_e_l(8).  Simi-
     larly, the MicroVAX II boot procedure loads a boot parameter
     block from block 0 of the disk.  The _r_d_b_o_o_t ``bootstrap''
     contains the correct parameters for an MSCP disk such as the
     RD53.

     On any processor, the _b_o_o_t program finds the corresponding
     file on the given device (_v_m_u_n_i_x by default), loads that
     file into memory location zero, and starts the program at
     the entry address specified in the program header (after
     clearing off the high bit of the specified entry address).

     The file specifications used with "BOOT ANY" or "B/3" are of
     the form:

	  device(adaptor,controller,unit,minor)

     where _d_e_v_i_c_e is the type of the device to be searched, _a_d_a_p_-
     _t_o_r is the UNIBUS or MASSBUS number of the adaptor to which
     the device is attached, _c_o_n_t_r_o_l_l_e_r is the unit number of the
     controller or MASSBUS tape formatter on that adaptor, _u_n_i_t
     is the unit number of the disk or transport slave unit of
     the tape, and _m_i_n_o_r is the disk partition or tape file
     number.  Leading adaptor or controller numbers default to 0.
     Normal line editing characters can be used when typing the
     file specification.  The following list of supported devices
     may vary from installation to installation:

	  hp   MASSBUS disk drive
	  up   UNIBUS storage module drive
	  ht   TE16,TU45,TU77 on MASSBUS
	  kra  storage module on a KDB50
	  mt   TU78 on MASSBUS
	  hk   RK07 on UNIBUS



Printed 7/14/88           July 12, 1988                         3






REBOOT(8)	    UNIX Programmer's Manual		REBOOT(8)



	  ra   storage module on a MSCP-compatible UNIBUS controller
	  rb   storage module on a 730 IDC
	  rl   RL02 on UNIBUS
	  tm   TM11 emulation tape drives on UNIBUS
	  tms  TMSCP-compatible tape
	  ts   TS11 on UNIBUS
	  ut   UNIBUS TU45 emulator

     For example, to boot from a file system which starts at
     cylinder 0 of unit 0 of a MASSBUS disk, type "hp(0,0)vmunix"
     to the boot prompt; "hp(2,0,1,0)vmunix" would specify drive
     1 on MASSBUS adaptor 2; "up(0,0)vmunix" would specify a
     UNIBUS drive, "hk(0,0)vmunix" would specify an RK07 disk
     drive, "ra(1,0,0,0)vmunix" would specify a UDA50 disk drive
     on a second UNIBUS, and "rb(0,0)vmunix" would specify a disk
     on a 730 IDC.  For tapes, the minor device number gives a
     file offset; "mt(1,2,3,4)" would specify the fifth file on
     slave 3 of the formatter at "drive" 2 on mba 1.

     On an 11/750 with patchable control store, microcode patches
     will be installed by _b_o_o_t if the file _p_s_c_7_5_0._b_i_n exists in
     the root of the filesystem from which the system is booted.

     In an emergency, the bootstrap methods described in the
     paper ``Installing and Operating 4.3bsd'' can be used to
     boot from a distribution tape.

FFIILLEESS
     /vmunix		system code
     /boot		system bootstrap
     /usr/mdec/xxboot	sector-0 boot block for 750, xx is disk
     type
     /usr/mdec/bootxx	second-stage boot for 750, xx is disk
     type
     /pcs750.bin	microcode patch file on 750

SSEEEE AALLSSOO
     arff(8V), crash(8V), disklabel(8), fsck(8), halt(8),
     init(8), rc(8), shutdown(8), syslogd(8)
















Printed 7/14/88           July 12, 1988                         4



