


PI(1)		    UNIX Programmer's Manual		    PI(1)



NNAAMMEE
     pi - Pascal interpreter code translator

SSYYNNOOPPSSIISS
     ppii [ ooppttiioonn ] [ --ii name ...  ] name.p

DDEESSCCRRIIPPTTIIOONN
     _P_i translates the program in the file _n_a_m_e._p leaving inter-
     preter code in the file _o_b_j in the current directory.  The
     interpreter code can be executed using _p_x. _P_i_x performs the
     functions of _p_i and _p_x for `load and go' Pascal.

     The following flags are interpreted by _p_i; the associated
     options can also be controlled in comments within the pro-
     gram as described in the _B_e_r_k_e_l_e_y _P_a_s_c_a_l _U_s_e_r'_s _M_a_n_u_a_l.

     --bb    Block buffer the file _o_u_t_p_u_t.

     --ii    Enable the listing for any specified procedures and
	   functions and while processing any specified iinncclluuddee
	   files.

     --ll    Make a program listing during translation.

     --nn    Begin each listed iinncclluuddee file on a new page with a
	   banner line.

     --pp    Suppress the post-mortem control flow backtrace if an
	   error occurs; suppress statement limit counting.

     --ss    Accept standard Pascal only; non-standard constructs
	   cause warning diagnostics.

     --tt    Suppress runtime tests of subrange variables and treat
	   aasssseerrtt statements as comments.

     --uu    Card image mode; only the first 72 characters of input
	   lines are used.

     --ww    Suppress warning diagnostics.

     --zz    Allow execution profiling with _p_x_p by generating
	   statement counters, and arranging for the creation of
	   the profile data file _p_m_o_n._o_u_t when the resulting
	   object is executed.

FFIILLEESS
     file.p		      input file
     file.i		      iinncclluuddee file(s)
     /usr/lib/pi2.*strings	   text of the error messages
     /usr/lib/how_pi*	      basic usage explanation
     obj		 interpreter code output



Printed 7/9/88		 April 29, 1985                         1






PI(1)		    UNIX Programmer's Manual		    PI(1)



SSEEEE AALLSSOO
     Berkeley Pascal User's Manual
     pix(1), px(1), pxp(1), pxref(1)

DDIIAAGGNNOOSSTTIICCSS
     For a basic explanation do

	     ppii

     In the diagnostic output of the translator, lines containing
     syntax errors are listed with a flag indicating the point of
     error.  Diagnostic messages indicate the action which the
     recovery mechanism took in order to be able to continue
     parsing.  Some diagnostics indicate only that the input is
     `malformed.' This occurs if the recovery can find no simple
     correction to make the input syntactically valid.

     Semantic error diagnostics indicate a line in the source
     text near the point of error.  Some errors evoke more than
     one diagnostic to help pinpoint the error; the follow-up
     messages begin with an ellipsis `...'.

     The first character of each error message indicates its
     class:

	       E	 Fatal error; no code will be generated.
	       e	 Non-fatal error.
	       w	 Warning - a potential problem.
	       s	 Non-standard Pascal construct warning.

     If a severe error occurs which inhibits further processing,
     the translator will give a diagnostic and then `QUIT'.

AAUUTTHHOORRSS
     Charles B. Haley, William N. Joy, and Ken Thompson
     Ported to VAX-11 by Peter Kessler

BBUUGGSS
     The keyword ppaacckkeedd is recognized but has no effect.

     For clarity, semantic errors should be flagged at an
     appropriate place in the source text, and multiple instances
     of the `same' semantic error should be summarized at the end
     of a pprroocceedduurree or ffuunnccttiioonn rather than evoking many diagnos-
     tics.

     When iinncclluuddee files are present, diagnostics relating to the
     last procedure in one file may appear after the beginning of
     the listing of the next.






Printed 7/9/88		 April 29, 1985                         2



