


FP(1)		    UNIX Programmer's Manual		    FP(1)



NNAAMMEE
     fp -  Functional Programming language compiler/interpreter

SSYYNNOOPPSSIISS
     ffpp

DDEESSCCRRIIPPTTIIOONN
     _F_p is an interpreter/compiler that implements the applica-
     tive language proposed by John Backus.  It is written in
     FFRRAANNZZ LLIISSPP.

     In a  functional programming language intent is expressed in
     a mathematical style devoid of assignment statements and
     variables.  Functions compute by value only; there are no
     side-effects since  the result of a computation depends
     solely on the inputs.

     _F_p "programs" consist of _f_u_n_c_t_i_o_n_a_l _e_x_p_r_e_s_s_i_o_n_s - primitive
     and user-defined _f_p functions combined by _f_u_n_c_t_i_o_n_a_l _f_o_r_m_s.
     These forms take functional arguments and return functional
     results.  For example, the composition operator '@' takes
     two functional arguments and returns a function which
     represents their composition.

     There exists a single operation in _f_p - _a_p_p_l_i_c_a_t_i_o_n. This
     operation causes the system to evaluate the indicated func-
     tion using the single argument as input (all functions are
     monadic).

GGEETTTTIINNGG SSTTAARRTTEEDD
     _F_p invokes the system. _F_p compiles functions into _l_i_s_p(1)
     source code; _l_i_s_p(1) interprets this code (the user may com-
     pile this code using the liszt (1) compiler to gain a factor
     of 10 in performance).  _C_o_n_t_r_o_l _D exits back to the shell.
     _B_r_e_a_k terminates any computation in progress  and resets any
     open file units.  )_h_e_l_p provides a short summary of all user
     commands.

FFIILLEESS
     /usr/ucb/lisp  the FRANZ LISP interpreter
     /usr/ucb/liszt the liszt compiler
     /usr/doc/fp    the User's Guide

SSEEEE AALLSSOO
     lisp(1), liszt(1).

     _T_h_e _B_e_r_k_e_l_e_y _F_P _u_s_e_r'_s _m_a_n_u_a_l, available on-line.	The
     language is described  in	the August 1978 issue of _C_A_C_M
     (Turing award lecture by John Backus).

BBUUGGSS




Printed 7/9/88		 April 29, 1985                         1






FP(1)		    UNIX Programmer's Manual		    FP(1)



     If a non-terminating function is applied as the result of
     loading a file, then control is returned to the user immedi-
     ately, everything after that position in the file is
     ignored.

     FP incorrectly marks the location of a syntax error on
     large, multi-line function definitions or applications.

AAUUTTHHOORR
     Scott B. Baden













































Printed 7/9/88		 April 29, 1985                         2



